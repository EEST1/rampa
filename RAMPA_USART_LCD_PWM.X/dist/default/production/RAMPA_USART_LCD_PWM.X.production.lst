

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun May 31 23:23:33 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           	psect	idataCOMRAM
    34  007ACD                     __pidataCOMRAM:
    35                           	opt stack 0
    36                           
    37                           ;initializer for Send_4Disp@Nro_Disp
    38  007ACD  01                 	db	1
    39                           
    40                           ;initializer for _MEMDIG
    41  007ACE  01                 	db	1
    42                           
    43                           ;initializer for leds@i
    44  007ACF  01                 	db	1
    45                           
    46                           	psect	smallconst
    47  00201C                     __psmallconst:
    48                           	opt stack 0
    49  00201C  00                 	db	0
    50  00201D                     _broadcast_id:
    51                           	opt stack 0
    52  00201D  6D                 	db	109
    53  00201E                     __end_of_broadcast_id:
    54                           	opt stack 0
    55  0000                     _ADCON1	set	4033
    56  0000                     _BAUDCONbits	set	4024
    57  0000                     _CCP1CONbits	set	4029
    58  0000                     _CCPR1L	set	4030
    59  0000                     _CMCON	set	4020
    60  0000                     _INTCON2bits	set	4081
    61  0000                     _INTCONbits	set	4082
    62  0000                     _LATA	set	3977
    63  0000                     _LATAbits	set	3977
    64  0000                     _LATB	set	3978
    65  0000                     _LATBbits	set	3978
    66  0000                     _LATC	set	3979
    67  0000                     _LATCbits	set	3979
    68  0000                     _LATD	set	3980
    69  0000                     _LATDbits	set	3980
    70  0000                     _LATE	set	3981
    71  0000                     _LATEbits	set	3981
    72  0000                     _PIE1bits	set	3997
    73  0000                     _PIR1bits	set	3998
    74  0000                     _PORTBbits	set	3969
    75  0000                     _PR2	set	4043
    76  0000                     _RCREG	set	4014
    77  0000                     _RCSTAbits	set	4011
    78  0000                     _SPBRG	set	4015
    79  0000                     _SPBRGH	set	4016
    80  0000                     _T0CONbits	set	4053
    81  0000                     _T1CONbits	set	4045
    82  0000                     _T2CONbits	set	4042
    83  0000                     _TMR0H	set	4055
    84  0000                     _TMR0L	set	4054
    85  0000                     _TMR1H	set	4047
    86  0000                     _TMR1L	set	4046
    87  0000                     _TRISA	set	3986
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISBbits	set	3987
    90  0000                     _TRISCbits	set	3988
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISE	set	3990
    93  0000                     _TXREG	set	4013
    94  0000                     _TXSTAbits	set	4012
    95  0000                     _INT0IF	set	32657
    96  0000                     _RCIF	set	31989
    97  0000                     _TMR0IF	set	32658
    98  0000                     _TMR1IF	set	31984
    99  00201E  00                 	db	0	; dummy byte at the end
   100  0000                     
   101                           	psect	nvCOMRAM
   102  00003B                     __pnvCOMRAM:
   103                           	opt stack 0
   104  00003B                     _slave_id:
   105                           	opt stack 0
   106  00003B                     	ds	1
   107                           
   108                           ; #config settings
   109  0000                     
   110                           	psect	cinit
   111  007BAC                     __pcinit:
   112                           	opt stack 0
   113  007BAC                     start_initialization:
   114                           	opt stack 0
   115  007BAC                     __initialization:
   116                           	opt stack 0
   117                           
   118                           ; Clear objects allocated to COMRAM (17 bytes)
   119  007BAC  EE00  F027         	lfsr	0,__pbssCOMRAM
   120  007BB0  0E11               	movlw	17
   121  007BB2                     clear_0:
   122  007BB2  6AEE               	clrf	postinc0,c
   123  007BB4  06E8               	decf	wreg,f,c
   124  007BB6  E1FD               	bnz	clear_0
   125                           
   126                           ; Initialize objects allocated to COMRAM (3 bytes)
   127                           ; load TBLPTR registers with __pidataCOMRAM
   128  007BB8  0ECD               	movlw	low __pidataCOMRAM
   129  007BBA  6EF6               	movwf	tblptrl,c
   130  007BBC  0E7A               	movlw	high __pidataCOMRAM
   131  007BBE  6EF7               	movwf	tblptrh,c
   132  007BC0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   133  007BC2  6EF8               	movwf	tblptru,c
   134  007BC4  0009               	tblrd		*+	;fetch initializer
   135  007BC6  CFF5 F038          	movff	tablat,__pdataCOMRAM
   136  007BCA  0009               	tblrd		*+	;fetch initializer
   137  007BCC  CFF5 F039          	movff	tablat,__pdataCOMRAM+1
   138  007BD0  0009               	tblrd		*+	;fetch initializer
   139  007BD2  CFF5 F03A          	movff	tablat,__pdataCOMRAM+2
   140  007BD6                     end_of_initialization:
   141                           	opt stack 0
   142  007BD6                     __end_of__initialization:
   143                           	opt stack 0
   144  007BD6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   145  007BD8  6EF8               	movwf	tblptru,c
   146  007BDA  0100               	movlb	0
   147  007BDC  EF4B  F03F         	goto	_main	;jump to C main() function
   148                           tblptru	equ	0xFF8
   149                           tblptrh	equ	0xFF7
   150                           tblptrl	equ	0xFF6
   151                           tablat	equ	0xFF5
   152                           postinc0	equ	0xFEE
   153                           wreg	equ	0xFE8
   154                           
   155                           	psect	bssCOMRAM
   156  000027                     __pbssCOMRAM:
   157                           	opt stack 0
   158  000027                     _LCD_tout:
   159                           	opt stack 0
   160  000027                     	ds	2
   161  000029                     _led_tout:
   162                           	opt stack 0
   163  000029                     	ds	2
   164  00002B                     _tiempo_rampa:
   165                           	opt stack 0
   166  00002B                     	ds	2
   167  00002D                     _CENT:
   168                           	opt stack 0
   169  00002D                     	ds	1
   170  00002E                     _DEC:
   171                           	opt stack 0
   172  00002E                     	ds	1
   173  00002F                     _UMIL:
   174                           	opt stack 0
   175  00002F                     	ds	1
   176  000030                     _UNI:
   177                           	opt stack 0
   178  000030                     	ds	1
   179  000031                     _bot_tout:
   180                           	opt stack 0
   181  000031                     	ds	1
   182  000032                     _caracter_recibido:
   183                           	opt stack 0
   184  000032                     	ds	1
   185  000033                     _mux_tout:
   186                           	opt stack 0
   187  000033                     	ds	1
   188  000034                     _rampa_status:
   189                           	opt stack 0
   190  000034                     	ds	1
   191  000035                     decode@com_rec:
   192                           	opt stack 0
   193  000035                     	ds	1
   194  000036                     decode@est_rec:
   195                           	opt stack 0
   196  000036                     	ds	1
   197  000037                     mux_display@contdisp:
   198                           	opt stack 0
   199  000037                     	ds	1
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           
   207                           	psect	dataCOMRAM
   208  000038                     __pdataCOMRAM:
   209                           	opt stack 0
   210  000038                     Send_4Disp@Nro_Disp:
   211                           	opt stack 0
   212  000038                     	ds	1
   213  000039                     _MEMDIG:
   214                           	opt stack 0
   215  000039                     	ds	1
   216  00003A                     leds@i:
   217                           	opt stack 0
   218  00003A                     	ds	1
   219                           tblptru	equ	0xFF8
   220                           tblptrh	equ	0xFF7
   221                           tblptrl	equ	0xFF6
   222                           tablat	equ	0xFF5
   223                           postinc0	equ	0xFEE
   224                           wreg	equ	0xFE8
   225                           
   226                           	psect	cstackCOMRAM
   227  000001                     __pcstackCOMRAM:
   228                           	opt stack 0
   229  000001                     ??_myISR:
   230  000001                     
   231                           ; 1 bytes @ 0x0
   232  000001                     	ds	14
   233  00000F                     ?___lwmod:
   234                           	opt stack 0
   235  00000F                     Send_Disp@Dato:
   236                           	opt stack 0
   237  00000F                     assign_id@id:
   238                           	opt stack 0
   239  00000F                     decode@retorno:
   240                           	opt stack 0
   241  00000F                     transmitir@Dato:
   242                           	opt stack 0
   243  00000F                     ___lwmod@dividend:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0xE
   247  00000F                     	ds	1
   248  000010                     Send_Disp@NroDisp:
   249                           	opt stack 0
   250  000010                     decode@dato_a_decod:
   251                           	opt stack 0
   252  000010                     informar@dato:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0xF
   256  000010                     	ds	1
   257  000011                     Send_4Disp@Cent:
   258                           	opt stack 0
   259  000011                     ___lwmod@divisor:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x10
   263  000011                     	ds	1
   264  000012                     Send_4Disp@Dec:
   265                           	opt stack 0
   266  000012                     informar@longitud:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x11
   270  000012                     	ds	1
   271  000013                     Send_4Disp@Uni:
   272                           	opt stack 0
   273  000013                     informar@i:
   274                           	opt stack 0
   275  000013                     ___lwmod@counter:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x12
   279  000013                     	ds	1
   280  000014                     ?___lwdiv:
   281                           	opt stack 0
   282  000014                     Send_4Disp@Umil:
   283                           	opt stack 0
   284  000014                     ___lwdiv@dividend:
   285                           	opt stack 0
   286                           
   287                           ; 2 bytes @ 0x13
   288  000014                     	ds	2
   289  000016                     ___lwdiv@divisor:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x15
   293  000016                     	ds	2
   294  000018                     ___lwdiv@quotient:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x17
   298  000018                     	ds	2
   299  00001A                     ___lwdiv@counter:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x19
   303  00001A                     	ds	1
   304  00001B                     main@seg:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x1A
   308  00001B                     	ds	1
   309  00001C                     main@dec:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x1B
   313  00001C                     	ds	1
   314  00001D                     main@cent:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x1C
   318  00001D                     	ds	1
   319  00001E                     main@mil:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x1D
   323  00001E                     	ds	1
   324  00001F                     main@backup_tiempo_rampa:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x1E
   328  00001F                     	ds	2
   329  000021                     main@backup_ultimo_caracter:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x20
   333  000021                     	ds	1
   334  000022                     main@broadcast_flag:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x21
   338  000022                     	ds	1
   339  000023                     main@paquete:
   340                           	opt stack 0
   341                           
   342                           ; 4 bytes @ 0x22
   343  000023                     	ds	4
   344                           tblptru	equ	0xFF8
   345                           tblptrh	equ	0xFF7
   346                           tblptrl	equ	0xFF6
   347                           tablat	equ	0xFF5
   348                           postinc0	equ	0xFEE
   349                           wreg	equ	0xFE8
   350                           
   351 ;;
   352 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   353 ;;
   354 ;; *************** function _main *****************
   355 ;; Defined at:
   356 ;;		line 35 in file "main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;  paquete         4   34[COMRAM] unsigned char [4]
   361 ;;  backup_tiemp    2   30[COMRAM] unsigned int 
   362 ;;  broadcast_fl    1   33[COMRAM] unsigned char 
   363 ;;  backup_ultim    1   32[COMRAM] unsigned char 
   364 ;;  mil             1   29[COMRAM] unsigned char 
   365 ;;  cent            1   28[COMRAM] unsigned char 
   366 ;;  dec             1   27[COMRAM] unsigned char 
   367 ;;  seg             1   26[COMRAM] unsigned char 
   368 ;; Return value:  Size  Location     Type
   369 ;;		None               void
   370 ;; Registers used:
   371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   377 ;;      Params:         0       0       0       0       0       0       0       0       0
   378 ;;      Locals:        12       0       0       0       0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0       0       0       0       0
   380 ;;      Totals:        12       0       0       0       0       0       0       0       0
   381 ;;Total ram usage:       12 bytes
   382 ;; Hardware stack levels required when called:    4
   383 ;; This function calls:
   384 ;;		_Send_4Disp
   385 ;;		___lwdiv
   386 ;;		___lwmod
   387 ;;		_assign_id
   388 ;;		_decode
   389 ;;		_informar
   390 ;;		_pic_ini13
   391 ;;		_rampa_ini13
   392 ;;		_timer1_ini13
   393 ;;		_timer_ini13
   394 ;;		_usart_ini13
   395 ;; This function is called by:
   396 ;;		Startup code after reset
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text0
   401  007E96                     __ptext0:
   402                           	opt stack 0
   403  007E96                     _main:
   404                           	opt stack 27
   405                           
   406                           ;main.c: 36: unsigned char backup_ultimo_caracter;
   407                           ;main.c: 37: unsigned int backup_tiempo_rampa;
   408                           ;main.c: 38: char seg=0,dec=0,cent=0,mil=0;
   409                           
   410                           ;incstack = 0
   411  007E96  0E00               	movlw	0
   412  007E98  6E1B               	movwf	main@seg,c
   413  007E9A  0E00               	movlw	0
   414  007E9C  6E1C               	movwf	main@dec,c
   415  007E9E  0E00               	movlw	0
   416  007EA0  6E1D               	movwf	main@cent,c
   417  007EA2  0E00               	movlw	0
   418  007EA4  6E1E               	movwf	main@mil,c
   419                           
   420                           ;main.c: 39: char paquete[4];
   421                           ;main.c: 40: unsigned char broadcast_flag=0;
   422  007EA6  0E00               	movlw	0
   423  007EA8  6E22               	movwf	main@broadcast_flag,c
   424                           
   425                           ;main.c: 42: pic_ini13();
   426  007EAA  ECBE  F03D         	call	_pic_ini13	;wreg free
   427                           
   428                           ;main.c: 43: timer_ini13();
   429  007EAE  EC8F  F03D         	call	_timer_ini13	;wreg free
   430                           
   431                           ;main.c: 45: timer1_ini13();
   432  007EB2  EC86  F03D         	call	_timer1_ini13	;wreg free
   433                           
   434                           ;main.c: 46: usart_ini13();
   435  007EB6  ECAA  F03D         	call	_usart_ini13	;wreg free
   436                           
   437                           ;main.c: 47: (INTCONbits.GIE = 1);
   438  007EBA  8EF2               	bsf	intcon,7,c	;volatile
   439                           
   440                           ;main.c: 49: assign_id('a');
   441  007EBC  0E61               	movlw	97
   442  007EBE  EC68  F03D         	call	_assign_id
   443                           
   444                           ;main.c: 51: rampa_ini13();
   445  007EC2  EC7D  F03D         	call	_rampa_ini13	;wreg free
   446  007EC6                     l1230:
   447                           
   448                           ;main.c: 54: if(caracter_recibido != backup_ultimo_caracter){
   449  007EC6  5032               	movf	_caracter_recibido,w,c
   450  007EC8  1821               	xorwf	main@backup_ultimo_caracter,w,c
   451  007ECA  B4D8               	btfsc	status,2,c
   452  007ECC  D040               	goto	l1256
   453                           
   454                           ;main.c: 55: backup_ultimo_caracter=caracter_recibido;
   455  007ECE  C032  F021         	movff	_caracter_recibido,main@backup_ultimo_caracter
   456                           
   457                           ;main.c: 65: switch(decode(caracter_recibido)){
   458  007ED2  D025               	goto	l1254
   459  007ED4                     l1234:
   460                           
   461                           ;main.c: 69: broadcast_flag=0;
   462  007ED4  0E00               	movlw	0
   463  007ED6  D001               	goto	L1
   464  007ED8                     l1236:
   465                           
   466                           ;main.c: 72: broadcast_flag=1;
   467  007ED8  0E01               	movlw	1
   468  007EDA                     L1:
   469  007EDA  6E22               	movwf	main@broadcast_flag,c
   470                           
   471                           ;main.c: 73: }break;
   472  007EDC  D038               	goto	l1256
   473  007EDE                     l74:
   474                           
   475                           ;main.c: 75: LATDbits.LD2=1;
   476  007EDE  848C               	bsf	3980,2,c	;volatile
   477                           
   478                           ;main.c: 76: LATDbits.LD3=0;
   479  007EE0  968C               	bcf	3980,3,c	;volatile
   480                           
   481                           ;main.c: 77: rampa_status=1;
   482  007EE2  0E01               	movlw	1
   483  007EE4  6E34               	movwf	_rampa_status,c
   484                           
   485                           ;main.c: 78: INTCONbits.INT0IF=0;
   486  007EE6  92F2               	bcf	intcon,1,c	;volatile
   487                           
   488                           ;main.c: 79: INTCONbits.INT0IE=1;
   489  007EE8  88F2               	bsf	intcon,4,c	;volatile
   490                           
   491                           ;main.c: 80: }break;
   492  007EEA  D031               	goto	l1256
   493  007EEC                     l75:
   494                           
   495                           ;main.c: 82: LATDbits.LD2=0;
   496  007EEC  948C               	bcf	3980,2,c	;volatile
   497                           
   498                           ;main.c: 83: LATDbits.LD3=1;
   499  007EEE  868C               	bsf	3980,3,c	;volatile
   500                           
   501                           ;main.c: 84: rampa_status=0;
   502  007EF0  0E00               	movlw	0
   503  007EF2  6E34               	movwf	_rampa_status,c
   504                           
   505                           ;main.c: 85: }break;
   506  007EF4  D02C               	goto	l1256
   507  007EF6                     l76:
   508                           
   509                           ;main.c: 87: if(!broadcast_flag){
   510  007EF6  6622               	tstfsz	main@broadcast_flag,c
   511  007EF8  D02A               	goto	l1256
   512                           
   513                           ;main.c: 88: LATDbits.LD2=1;
   514  007EFA  848C               	bsf	3980,2,c	;volatile
   515                           
   516                           ;main.c: 89: LATDbits.LD3=1;
   517  007EFC  868C               	bsf	3980,3,c	;volatile
   518                           
   519                           ;main.c: 90: informar(paquete,4);
   520  007EFE  0E00               	movlw	high main@paquete
   521  007F00  6E11               	movwf	informar@dato+1,c
   522  007F02  0E23               	movlw	low main@paquete
   523  007F04  6E10               	movwf	informar@dato,c
   524  007F06  0E04               	movlw	4
   525  007F08  6E12               	movwf	informar@longitud,c
   526  007F0A  ECF0  F03D         	call	_informar	;wreg free
   527  007F0E  D01F               	goto	l1256
   528  007F10                     l78:
   529                           
   530                           ;main.c: 94: LATDbits.LD2=0;
   531  007F10  948C               	bcf	3980,2,c	;volatile
   532                           
   533                           ;main.c: 95: LATDbits.LD3=0;
   534  007F12  968C               	bcf	3980,3,c	;volatile
   535                           
   536                           ;main.c: 96: tiempo_rampa=0;
   537  007F14  0E00               	movlw	0
   538  007F16  6E2C               	movwf	_tiempo_rampa+1,c
   539  007F18  0E00               	movlw	0
   540  007F1A  6E2B               	movwf	_tiempo_rampa,c
   541                           
   542                           ;main.c: 97: }break;
   543  007F1C  D018               	goto	l1256
   544  007F1E                     l1254:
   545  007F1E  5032               	movf	_caracter_recibido,w,c
   546  007F20  EC7F  F03E         	call	_decode
   547                           
   548                           ; Switch size 1, requested type "space"
   549                           ; Number of cases is 7, Range of values is 0 to 115
   550                           ; switch strategies available:
   551                           ; Name         Instructions Cycles
   552                           ; simple_byte           22    12 (average)
   553                           ;	Chosen strategy is simple_byte
   554  007F24  0A00               	xorlw	0	; case 0
   555  007F26  B4D8               	btfsc	status,2,c
   556  007F28  D012               	goto	l1256
   557  007F2A  0A62               	xorlw	98	; case 98
   558  007F2C  B4D8               	btfsc	status,2,c
   559  007F2E  D7D4               	goto	l1236
   560  007F30  0A06               	xorlw	6	; case 100
   561  007F32  B4D8               	btfsc	status,2,c
   562  007F34  D7DB               	goto	l75
   563  007F36  0A08               	xorlw	8	; case 108
   564  007F38  B4D8               	btfsc	status,2,c
   565  007F3A  D7DD               	goto	l76
   566  007F3C  0A1C               	xorlw	28	; case 112
   567  007F3E  B4D8               	btfsc	status,2,c
   568  007F40  D7C9               	goto	l1234
   569  007F42  0A02               	xorlw	2	; case 114
   570  007F44  B4D8               	btfsc	status,2,c
   571  007F46  D7E4               	goto	l78
   572  007F48  0A01               	xorlw	1	; case 115
   573  007F4A  B4D8               	btfsc	status,2,c
   574  007F4C  D7C8               	goto	l74
   575  007F4E                     l1256:
   576                           
   577                           ;main.c: 99: }
   578                           ;main.c: 102: if(tiempo_rampa !=backup_tiempo_rampa){
   579  007F4E  5020               	movf	main@backup_tiempo_rampa+1,w,c
   580  007F50  182C               	xorwf	_tiempo_rampa+1,w,c
   581  007F52  E102               	bnz	u245
   582  007F54  501F               	movf	main@backup_tiempo_rampa,w,c
   583  007F56  182B               	xorwf	_tiempo_rampa,w,c
   584  007F58                     u245:
   585  007F58  B4D8               	btfsc	status,2,c
   586  007F5A  D048               	goto	l79
   587                           
   588                           ;main.c: 104: paquete[0]=tiempo_rampa/1000;
   589  007F5C  C02B  F014         	movff	_tiempo_rampa,___lwdiv@dividend
   590  007F60  C02C  F015         	movff	_tiempo_rampa+1,___lwdiv@dividend+1
   591  007F64  0E03               	movlw	3
   592  007F66  6E17               	movwf	___lwdiv@divisor+1,c
   593  007F68  0EE8               	movlw	232
   594  007F6A  6E16               	movwf	___lwdiv@divisor,c
   595  007F6C  EC56  F03E         	call	___lwdiv	;wreg free
   596  007F70  5014               	movf	?___lwdiv,w,c
   597  007F72  6E23               	movwf	main@paquete,c
   598                           
   599                           ;main.c: 105: paquete[1]=(tiempo_rampa%1000)/100;
   600  007F74  0E03               	movlw	3
   601  007F76  6E12               	movwf	___lwmod@divisor+1,c
   602  007F78  0EE8               	movlw	232
   603  007F7A  6E11               	movwf	___lwmod@divisor,c
   604  007F7C  C02B  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   605  007F80  C02C  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   606  007F84  EC0D  F03E         	call	___lwmod	;wreg free
   607  007F88  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   608  007F8C  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   609  007F90  0E00               	movlw	0
   610  007F92  6E17               	movwf	___lwdiv@divisor+1,c
   611  007F94  0E64               	movlw	100
   612  007F96  6E16               	movwf	___lwdiv@divisor,c
   613  007F98  EC56  F03E         	call	___lwdiv	;wreg free
   614  007F9C  5014               	movf	?___lwdiv,w,c
   615  007F9E  6E24               	movwf	main@paquete+1,c
   616                           
   617                           ;main.c: 106: paquete[2]=(tiempo_rampa%100)/10;
   618  007FA0  0E00               	movlw	0
   619  007FA2  6E12               	movwf	___lwmod@divisor+1,c
   620  007FA4  0E64               	movlw	100
   621  007FA6  6E11               	movwf	___lwmod@divisor,c
   622  007FA8  C02B  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   623  007FAC  C02C  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   624  007FB0  EC0D  F03E         	call	___lwmod	;wreg free
   625  007FB4  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   626  007FB8  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   627  007FBC  0E00               	movlw	0
   628  007FBE  6E17               	movwf	___lwdiv@divisor+1,c
   629  007FC0  0E0A               	movlw	10
   630  007FC2  6E16               	movwf	___lwdiv@divisor,c
   631  007FC4  EC56  F03E         	call	___lwdiv	;wreg free
   632  007FC8  5014               	movf	?___lwdiv,w,c
   633  007FCA  6E25               	movwf	main@paquete+2,c
   634                           
   635                           ;main.c: 107: paquete[3]=tiempo_rampa%10;
   636  007FCC  C02B  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   637  007FD0  C02C  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   638  007FD4  0E00               	movlw	0
   639  007FD6  6E12               	movwf	___lwmod@divisor+1,c
   640  007FD8  0E0A               	movlw	10
   641  007FDA  6E11               	movwf	___lwmod@divisor,c
   642  007FDC  EC0D  F03E         	call	___lwmod	;wreg free
   643  007FE0  500F               	movf	?___lwmod,w,c
   644  007FE2  6E26               	movwf	main@paquete+3,c
   645                           
   646                           ;main.c: 109: backup_tiempo_rampa=tiempo_rampa;
   647  007FE4  C02B  F01F         	movff	_tiempo_rampa,main@backup_tiempo_rampa
   648  007FE8  C02C  F020         	movff	_tiempo_rampa+1,main@backup_tiempo_rampa+1
   649  007FEC                     l79:
   650                           
   651                           ;main.c: 110: }
   652                           ;main.c: 111: Send_4Disp(paquete[0],paquete[1],paquete[2],paquete[3]);
   653  007FEC  C024  F011         	movff	main@paquete+1,Send_4Disp@Cent
   654  007FF0  C025  F012         	movff	main@paquete+2,Send_4Disp@Dec
   655  007FF4  C026  F013         	movff	main@paquete+3,Send_4Disp@Uni
   656  007FF8  5023               	movf	main@paquete,w,c
   657  007FFA  ECB8  F03E         	call	_Send_4Disp
   658  007FFE  D763               	goto	l1230
   659  008000                     __end_of_main:
   660                           	opt stack 0
   661                           tblptru	equ	0xFF8
   662                           tblptrh	equ	0xFF7
   663                           tblptrl	equ	0xFF6
   664                           tablat	equ	0xFF5
   665                           intcon	equ	0xFF2
   666                           postinc0	equ	0xFEE
   667                           wreg	equ	0xFE8
   668                           status	equ	0xFD8
   669                           
   670 ;; *************** function _usart_ini13 *****************
   671 ;; Defined at:
   672 ;;		line 77 in file "Ap_ini.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;		None               void
   679 ;; Registers used:
   680 ;;		wreg, status,2
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   686 ;;      Params:         0       0       0       0       0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0
   689 ;;      Totals:         0       0       0       0       0       0       0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; Hardware stack levels required when called:    2
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text1
   701  007B54                     __ptext1:
   702                           	opt stack 0
   703  007B54                     _usart_ini13:
   704                           	opt stack 28
   705                           
   706                           ;Ap_ini.c: 82: TXSTAbits.BRGH = 1;
   707                           
   708                           ;incstack = 0
   709  007B54  84AC               	bsf	4012,2,c	;volatile
   710                           
   711                           ;Ap_ini.c: 83: BAUDCONbits.BRG16=1;
   712  007B56  86B8               	bsf	4024,3,c	;volatile
   713                           
   714                           ;Ap_ini.c: 84: TXSTAbits.SYNC = 0;
   715  007B58  98AC               	bcf	4012,4,c	;volatile
   716                           
   717                           ;Ap_ini.c: 85: SPBRG = 0xE1;
   718  007B5A  0EE1               	movlw	225
   719  007B5C  6EAF               	movwf	4015,c	;volatile
   720                           
   721                           ;Ap_ini.c: 86: SPBRGH = 0x04;
   722  007B5E  0E04               	movlw	4
   723  007B60  6EB0               	movwf	4016,c	;volatile
   724                           
   725                           ;Ap_ini.c: 87: RCSTAbits.SPEN = 1;
   726  007B62  8EAB               	bsf	4011,7,c	;volatile
   727                           
   728                           ;Ap_ini.c: 90: TXSTAbits.TX9 = 0;
   729  007B64  9CAC               	bcf	4012,6,c	;volatile
   730                           
   731                           ;Ap_ini.c: 91: TXSTAbits.TXEN = 1;
   732  007B66  8AAC               	bsf	4012,5,c	;volatile
   733                           
   734                           ;Ap_ini.c: 94: (void) RCREG;
   735  007B68  50AE               	movf	4014,w,c	;volatile
   736                           
   737                           ;Ap_ini.c: 95: (void) RCREG;
   738  007B6A  50AE               	movf	4014,w,c	;volatile
   739                           
   740                           ;Ap_ini.c: 96: (void) RCREG;
   741  007B6C  50AE               	movf	4014,w,c	;volatile
   742                           
   743                           ;Ap_ini.c: 97: RCSTAbits.RX9 = 0 ;
   744  007B6E  9CAB               	bcf	4011,6,c	;volatile
   745                           
   746                           ;Ap_ini.c: 98: PIE1bits.RCIE = 1;
   747  007B70  8A9D               	bsf	3997,5,c	;volatile
   748                           
   749                           ;Ap_ini.c: 99: RCSTAbits.CREN = 1;
   750  007B72  88AB               	bsf	4011,4,c	;volatile
   751                           
   752                           ;Ap_ini.c: 100: INTCONbits.PEIE = 1;
   753  007B74  8CF2               	bsf	intcon,6,c	;volatile
   754                           
   755                           ;Ap_ini.c: 102: TRISCbits.RC6 = 1;
   756  007B76  8C94               	bsf	3988,6,c	;volatile
   757                           
   758                           ;Ap_ini.c: 103: TRISCbits.RC7 = 1;
   759  007B78  8E94               	bsf	3988,7,c	;volatile
   760  007B7A  0012               	return	
   761  007B7C                     __end_of_usart_ini13:
   762                           	opt stack 0
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           intcon	equ	0xFF2
   768                           postinc0	equ	0xFEE
   769                           wreg	equ	0xFE8
   770                           status	equ	0xFD8
   771                           
   772 ;; *************** function _timer_ini13 *****************
   773 ;; Defined at:
   774 ;;		line 37 in file "Ap_ini.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;		None               void
   781 ;; Registers used:
   782 ;;		wreg, status,2
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   788 ;;      Params:         0       0       0       0       0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0
   791 ;;      Totals:         0       0       0       0       0       0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    2
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text2
   803  007B1E                     __ptext2:
   804                           	opt stack 0
   805  007B1E                     _timer_ini13:
   806                           	opt stack 28
   807                           
   808                           ;Ap_ini.c: 38: T0CONbits.TMR0ON = 0;
   809                           
   810                           ;incstack = 0
   811  007B1E  9ED5               	bcf	4053,7,c	;volatile
   812                           
   813                           ;Ap_ini.c: 39: T0CONbits.T08BIT = 1;
   814  007B20  8CD5               	bsf	4053,6,c	;volatile
   815                           
   816                           ;Ap_ini.c: 40: T0CONbits.T0CS = 0;
   817  007B22  9AD5               	bcf	4053,5,c	;volatile
   818                           
   819                           ;Ap_ini.c: 41: T0CONbits.PSA = 0;
   820  007B24  96D5               	bcf	4053,3,c	;volatile
   821                           
   822                           ;Ap_ini.c: 42: T0CONbits.T0PS0 = 1;
   823  007B26  80D5               	bsf	4053,0,c	;volatile
   824                           
   825                           ;Ap_ini.c: 43: T0CONbits.T0PS1 = 1;
   826  007B28  82D5               	bsf	4053,1,c	;volatile
   827                           
   828                           ;Ap_ini.c: 44: T0CONbits.T0PS2 = 1;
   829  007B2A  84D5               	bsf	4053,2,c	;volatile
   830                           
   831                           ;Ap_ini.c: 45: TMR0L = 209;
   832  007B2C  0ED1               	movlw	209
   833  007B2E  6ED6               	movwf	4054,c	;volatile
   834                           
   835                           ;Ap_ini.c: 46: TMR0H = 0xFF;
   836  007B30  68D7               	setf	4055,c	;volatile
   837                           
   838                           ;Ap_ini.c: 47: INTCONbits.TMR0IE = 1;
   839  007B32  8AF2               	bsf	intcon,5,c	;volatile
   840                           
   841                           ;Ap_ini.c: 48: T0CONbits.TMR0ON = 1;
   842  007B34  8ED5               	bsf	4053,7,c	;volatile
   843  007B36  0012               	return	
   844  007B38                     __end_of_timer_ini13:
   845                           	opt stack 0
   846                           tblptru	equ	0xFF8
   847                           tblptrh	equ	0xFF7
   848                           tblptrl	equ	0xFF6
   849                           tablat	equ	0xFF5
   850                           intcon	equ	0xFF2
   851                           postinc0	equ	0xFEE
   852                           wreg	equ	0xFE8
   853                           status	equ	0xFD8
   854                           
   855 ;; *************** function _timer1_ini13 *****************
   856 ;; Defined at:
   857 ;;		line 51 in file "Ap_ini.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;		None               void
   864 ;; Registers used:
   865 ;;		wreg, status,2
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   871 ;;      Params:         0       0       0       0       0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    2
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text3
   886  007B0C                     __ptext3:
   887                           	opt stack 0
   888  007B0C                     _timer1_ini13:
   889                           	opt stack 28
   890                           
   891                           ;Ap_ini.c: 53: T1CONbits.T1CKPS0=0;
   892                           
   893                           ;incstack = 0
   894  007B0C  98CD               	bcf	4045,4,c	;volatile
   895                           
   896                           ;Ap_ini.c: 54: T1CONbits.T1CKPS1=0;
   897  007B0E  9ACD               	bcf	4045,5,c	;volatile
   898                           
   899                           ;Ap_ini.c: 55: TMR1L=145;
   900  007B10  0E91               	movlw	145
   901  007B12  6ECE               	movwf	4046,c	;volatile
   902                           
   903                           ;Ap_ini.c: 56: TMR1H=0xFF;
   904  007B14  68CF               	setf	4047,c	;volatile
   905                           
   906                           ;Ap_ini.c: 57: PIR1bits.TMR1IF=0;
   907  007B16  909E               	bcf	3998,0,c	;volatile
   908                           
   909                           ;Ap_ini.c: 58: PIE1bits.TMR1IE=1;
   910  007B18  809D               	bsf	3997,0,c	;volatile
   911                           
   912                           ;Ap_ini.c: 59: T1CONbits.TMR1ON = 1;
   913  007B1A  80CD               	bsf	4045,0,c	;volatile
   914  007B1C  0012               	return	
   915  007B1E                     __end_of_timer1_ini13:
   916                           	opt stack 0
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           tblptrl	equ	0xFF6
   920                           tablat	equ	0xFF5
   921                           intcon	equ	0xFF2
   922                           postinc0	equ	0xFEE
   923                           wreg	equ	0xFE8
   924                           status	equ	0xFD8
   925                           
   926 ;; *************** function _rampa_ini13 *****************
   927 ;; Defined at:
   928 ;;		line 5 in file "rampa.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;		None               void
   935 ;; Registers used:
   936 ;;		wreg, status,2
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   942 ;;      Params:         0       0       0       0       0       0       0       0       0
   943 ;;      Locals:         0       0       0       0       0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0       0       0
   945 ;;      Totals:         0       0       0       0       0       0       0       0       0
   946 ;;Total ram usage:        0 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:    2
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text4
   957  007AFA                     __ptext4:
   958                           	opt stack 0
   959  007AFA                     _rampa_ini13:
   960                           	opt stack 28
   961                           
   962                           ;rampa.c: 6: rampa_status = 0;
   963                           
   964                           ;incstack = 0
   965  007AFA  0E00               	movlw	0
   966  007AFC  6E34               	movwf	_rampa_status,c
   967                           
   968                           ;rampa.c: 7: tiempo_rampa = 0;
   969  007AFE  0E00               	movlw	0
   970  007B00  6E2C               	movwf	_tiempo_rampa+1,c
   971  007B02  0E00               	movlw	0
   972  007B04  6E2B               	movwf	_tiempo_rampa,c
   973                           
   974                           ;rampa.c: 8: TRISBbits.RB7 = 0;
   975  007B06  9E93               	bcf	3987,7,c	;volatile
   976                           
   977                           ;rampa.c: 9: INTCON2bits.INTEDG0=0;
   978  007B08  9CF1               	bcf	intcon2,6,c	;volatile
   979  007B0A  0012               	return	
   980  007B0C                     __end_of_rampa_ini13:
   981                           	opt stack 0
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           intcon	equ	0xFF2
   987                           intcon2	equ	0xFF1
   988                           postinc0	equ	0xFEE
   989                           wreg	equ	0xFE8
   990                           status	equ	0xFD8
   991                           
   992 ;; *************** function _pic_ini13 *****************
   993 ;; Defined at:
   994 ;;		line 9 in file "Ap_ini.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;		None               void
  1001 ;; Registers used:
  1002 ;;		wreg, status,2
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1008 ;;      Params:         0       0       0       0       0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1011 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1012 ;;Total ram usage:        0 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    2
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text5
  1023  007B7C                     __ptext5:
  1024                           	opt stack 0
  1025  007B7C                     _pic_ini13:
  1026                           	opt stack 28
  1027                           
  1028                           ;Ap_ini.c: 12: LATA = 0x00;
  1029                           
  1030                           ;incstack = 0
  1031  007B7C  0E00               	movlw	0
  1032  007B7E  6E89               	movwf	3977,c	;volatile
  1033                           
  1034                           ;Ap_ini.c: 13: LATB = 0x00;
  1035  007B80  0E00               	movlw	0
  1036  007B82  6E8A               	movwf	3978,c	;volatile
  1037                           
  1038                           ;Ap_ini.c: 14: LATC = 0x00;
  1039  007B84  0E00               	movlw	0
  1040  007B86  6E8B               	movwf	3979,c	;volatile
  1041                           
  1042                           ;Ap_ini.c: 15: LATD = 0x00;
  1043  007B88  0E00               	movlw	0
  1044  007B8A  6E8C               	movwf	3980,c	;volatile
  1045                           
  1046                           ;Ap_ini.c: 16: LATE = 0x00;
  1047  007B8C  0E00               	movlw	0
  1048  007B8E  6E8D               	movwf	3981,c	;volatile
  1049                           
  1050                           ;Ap_ini.c: 20: TRISD = 0xF0;
  1051  007B90  0EF0               	movlw	240
  1052  007B92  6E95               	movwf	3989,c	;volatile
  1053                           
  1054                           ;Ap_ini.c: 21: TRISCbits.RC6 = 0;
  1055  007B94  9C94               	bcf	3988,6,c	;volatile
  1056                           
  1057                           ;Ap_ini.c: 22: TRISCbits.RC7 = 0;
  1058  007B96  9E94               	bcf	3988,7,c	;volatile
  1059                           
  1060                           ;Ap_ini.c: 26: CMCON = 0x07;
  1061  007B98  0E07               	movlw	7
  1062  007B9A  6EB4               	movwf	4020,c	;volatile
  1063                           
  1064                           ;Ap_ini.c: 27: ADCON1 = 0x0F;
  1065  007B9C  0E0F               	movlw	15
  1066  007B9E  6EC1               	movwf	4033,c	;volatile
  1067                           
  1068                           ;Ap_ini.c: 28: TRISA = 0xC0;
  1069  007BA0  0EC0               	movlw	192
  1070  007BA2  6E92               	movwf	3986,c	;volatile
  1071                           
  1072                           ;Ap_ini.c: 29: TRISE = 0x00;
  1073  007BA4  0E00               	movlw	0
  1074  007BA6  6E96               	movwf	3990,c	;volatile
  1075                           
  1076                           ;Ap_ini.c: 33: TRISB = 0xFF;
  1077  007BA8  6893               	setf	3987,c	;volatile
  1078  007BAA  0012               	return	
  1079  007BAC                     __end_of_pic_ini13:
  1080                           	opt stack 0
  1081                           tblptru	equ	0xFF8
  1082                           tblptrh	equ	0xFF7
  1083                           tblptrl	equ	0xFF6
  1084                           tablat	equ	0xFF5
  1085                           intcon	equ	0xFF2
  1086                           intcon2	equ	0xFF1
  1087                           postinc0	equ	0xFEE
  1088                           wreg	equ	0xFE8
  1089                           status	equ	0xFD8
  1090                           
  1091 ;; *************** function _informar *****************
  1092 ;; Defined at:
  1093 ;;		line 63 in file "rampa.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  dato            2   15[COMRAM] PTR unsigned char 
  1096 ;;		 -> main@paquete(4), 
  1097 ;;  longitud        1   17[COMRAM] unsigned char 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  i               1   18[COMRAM] unsigned char 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;		None               void
  1102 ;; Registers used:
  1103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1109 ;;      Params:         3       0       0       0       0       0       0       0       0
  1110 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1112 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1113 ;;Total ram usage:        4 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    3
  1116 ;; This function calls:
  1117 ;;		_transmitir
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text6
  1124  007BE0                     __ptext6:
  1125                           	opt stack 0
  1126  007BE0                     _informar:
  1127                           	opt stack 27
  1128                           
  1129                           ;rampa.c: 64: char i=0;
  1130                           
  1131                           ;incstack = 0
  1132  007BE0  0E00               	movlw	0
  1133  007BE2  6E13               	movwf	informar@i,c
  1134                           
  1135                           ;rampa.c: 65: transmitir(slave_id);
  1136  007BE4  503B               	movf	_slave_id,w,c
  1137  007BE6  EC6C  F03D         	call	_transmitir
  1138                           
  1139                           ;rampa.c: 66: for(i=0;i<longitud;i++) transmitir(*(dato+i)+48);
  1140  007BEA  0E00               	movlw	0
  1141  007BEC  6E13               	movwf	informar@i,c
  1142  007BEE  D00D               	goto	l1084
  1143  007BF0                     l1080:
  1144  007BF0  5013               	movf	informar@i,w,c
  1145  007BF2  0D01               	mullw	1
  1146  007BF4  50F3               	movf	prodl,w,c
  1147  007BF6  2410               	addwf	informar@dato,w,c
  1148  007BF8  6ED9               	movwf	fsr2l,c
  1149  007BFA  50F4               	movf	prodh,w,c
  1150  007BFC  2011               	addwfc	informar@dato+1,w,c
  1151  007BFE  6EDA               	movwf	fsr2h,c
  1152  007C00  50DF               	movf	indf2,w,c
  1153  007C02  0F30               	addlw	48
  1154  007C04  EC6C  F03D         	call	_transmitir
  1155  007C08  2A13               	incf	informar@i,f,c
  1156  007C0A                     l1084:
  1157  007C0A  5012               	movf	informar@longitud,w,c
  1158  007C0C  5C13               	subwf	informar@i,w,c
  1159  007C0E  A0D8               	btfss	status,0,c
  1160  007C10  D7EF               	goto	l1080
  1161                           
  1162                           ;rampa.c: 68: transmitir('f');
  1163  007C12  0E66               	movlw	102
  1164  007C14  EC6C  F03D         	call	_transmitir
  1165  007C18  0012               	return	
  1166  007C1A                     __end_of_informar:
  1167                           	opt stack 0
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           prodh	equ	0xFF4
  1173                           prodl	equ	0xFF3
  1174                           intcon	equ	0xFF2
  1175                           intcon2	equ	0xFF1
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           indf2	equ	0xFDF
  1179                           fsr2h	equ	0xFDA
  1180                           fsr2l	equ	0xFD9
  1181                           status	equ	0xFD8
  1182                           
  1183 ;; *************** function _transmitir *****************
  1184 ;; Defined at:
  1185 ;;		line 71 in file "rampa.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  Dato            1    wreg     unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  Dato            1   14[COMRAM] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;		None               void
  1192 ;; Registers used:
  1193 ;;		wreg
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1199 ;;      Params:         0       0       0       0       0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1202 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1203 ;;Total ram usage:        1 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    2
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_informar
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text7
  1214  007AD8                     __ptext7:
  1215                           	opt stack 0
  1216  007AD8                     _transmitir:
  1217                           	opt stack 27
  1218                           
  1219                           ;incstack = 0
  1220                           ;transmitir@Dato stored from wreg
  1221  007AD8  6E0F               	movwf	transmitir@Dato,c
  1222  007ADA                     l315:
  1223  007ADA  A2AC               	btfss	4012,1,c	;volatile
  1224  007ADC  D7FE               	goto	l315
  1225                           
  1226                           ;rampa.c: 74: TXREG = Dato;
  1227  007ADE  C00F  FFAD         	movff	transmitir@Dato,4013	;volatile
  1228  007AE2                     l318:
  1229  007AE2  B2AC               	btfsc	4012,1,c	;volatile
  1230  007AE4  0012               	return	
  1231  007AE6  D7FD               	goto	l318
  1232  007AE8                     __end_of_transmitir:
  1233                           	opt stack 0
  1234                           tblptru	equ	0xFF8
  1235                           tblptrh	equ	0xFF7
  1236                           tblptrl	equ	0xFF6
  1237                           tablat	equ	0xFF5
  1238                           prodh	equ	0xFF4
  1239                           prodl	equ	0xFF3
  1240                           intcon	equ	0xFF2
  1241                           intcon2	equ	0xFF1
  1242                           postinc0	equ	0xFEE
  1243                           wreg	equ	0xFE8
  1244                           indf2	equ	0xFDF
  1245                           fsr2h	equ	0xFDA
  1246                           fsr2l	equ	0xFD9
  1247                           status	equ	0xFD8
  1248                           
  1249 ;; *************** function _decode *****************
  1250 ;; Defined at:
  1251 ;;		line 19 in file "rampa.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;  dato_a_decod    1    wreg     unsigned char 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  dato_a_decod    1   15[COMRAM] unsigned char 
  1256 ;;  retorno         1   14[COMRAM] unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      unsigned char 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1266 ;;      Params:         0       0       0       0       0       0       0       0       0
  1267 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1269 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1270 ;;Total ram usage:        2 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    2
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text8
  1281  007CFE                     __ptext8:
  1282                           	opt stack 0
  1283  007CFE                     _decode:
  1284                           	opt stack 28
  1285                           
  1286                           ;incstack = 0
  1287                           ;decode@dato_a_decod stored from wreg
  1288  007CFE  6E10               	movwf	decode@dato_a_decod,c
  1289                           
  1290                           ;rampa.c: 23: static unsigned char est_rec=address;
  1291                           ;rampa.c: 25: static char com_rec;
  1292                           ;rampa.c: 26: unsigned char retorno;
  1293                           ;rampa.c: 28: switch(est_rec){
  1294  007D00  D02B               	goto	l1124
  1295  007D02                     l1090:
  1296                           
  1297                           ;rampa.c: 30: if(dato_a_decod==slave_id ){
  1298  007D02  503B               	movf	_slave_id,w,c
  1299  007D04  6210               	cpfseq	decode@dato_a_decod,c
  1300  007D06  D005               	goto	l1098
  1301                           
  1302                           ;rampa.c: 31: est_rec++;
  1303  007D08  2A36               	incf	decode@est_rec,f,c
  1304                           
  1305                           ;rampa.c: 32: dato_a_decod = 0;
  1306  007D0A  0E00               	movlw	0
  1307  007D0C  6E10               	movwf	decode@dato_a_decod,c
  1308                           
  1309                           ;rampa.c: 33: retorno='p';
  1310  007D0E  0E70               	movlw	112
  1311  007D10  D016               	goto	L3
  1312  007D12                     l1098:
  1313                           
  1314                           ;rampa.c: 35: else if(dato_a_decod == broadcast_id){
  1315  007D12  0E1D               	movlw	low _broadcast_id
  1316  007D14  6EF6               	movwf	tblptrl,c
  1317  007D16                     	if	1	;There is more than 1 active tblptr byte
  1318  007D16  0E20               	movlw	high _broadcast_id
  1319  007D18  6EF7               	movwf	tblptrh,c
  1320  007D1A                     	endif
  1321  007D1A                     	if	0	;There are less than 3 active tblptr bytes
  1322  007D1A                     	endif
  1323  007D1A  0008               	tblrd		*
  1324  007D1C  50F5               	movf	tablat,w,c
  1325  007D1E  6210               	cpfseq	decode@dato_a_decod,c
  1326  007D20  D025               	goto	l1126
  1327                           
  1328                           ;rampa.c: 36: est_rec++;
  1329  007D22  2A36               	incf	decode@est_rec,f,c
  1330                           
  1331                           ;rampa.c: 37: dato_a_decod = 0;
  1332  007D24  0E00               	movlw	0
  1333  007D26  6E10               	movwf	decode@dato_a_decod,c
  1334                           
  1335                           ;rampa.c: 38: retorno='b';
  1336  007D28  0E62               	movlw	98
  1337  007D2A  D009               	goto	L3
  1338  007D2C                     l1106:
  1339                           
  1340                           ;rampa.c: 43: if(dato_a_decod){
  1341  007D2C  5010               	movf	decode@dato_a_decod,w,c
  1342  007D2E  B4D8               	btfsc	status,2,c
  1343  007D30  D01D               	goto	l1126
  1344                           
  1345                           ;rampa.c: 44: com_rec=dato_a_decod;
  1346  007D32  C010  F035         	movff	decode@dato_a_decod,decode@com_rec
  1347                           
  1348                           ;rampa.c: 45: est_rec++;
  1349  007D36  2A36               	incf	decode@est_rec,f,c
  1350                           
  1351                           ;rampa.c: 46: dato_a_decod = 0;
  1352  007D38  0E00               	movlw	0
  1353  007D3A  6E10               	movwf	decode@dato_a_decod,c
  1354                           
  1355                           ;rampa.c: 47: retorno=0;
  1356  007D3C  0E00               	movlw	0
  1357  007D3E                     L3:
  1358  007D3E  6E0F               	movwf	decode@retorno,c
  1359  007D40  D015               	goto	l1126
  1360  007D42                     l1116:
  1361                           
  1362                           ;rampa.c: 53: if(dato_a_decod=='f'){
  1363  007D42  5010               	movf	decode@dato_a_decod,w,c
  1364  007D44  0A66               	xorlw	102
  1365  007D46  A4D8               	btfss	status,2,c
  1366  007D48  D011               	goto	l1126
  1367                           
  1368                           ;rampa.c: 54: est_rec=address;
  1369  007D4A  0E00               	movlw	0
  1370  007D4C  6E36               	movwf	decode@est_rec,c
  1371                           
  1372                           ;rampa.c: 55: retorno = com_rec;
  1373  007D4E  C035  F00F         	movff	decode@com_rec,decode@retorno
  1374                           
  1375                           ;rampa.c: 56: com_rec=0;
  1376  007D52  0E00               	movlw	0
  1377  007D54  6E35               	movwf	decode@com_rec,c
  1378  007D56  D00A               	goto	l1126
  1379  007D58                     l1124:
  1380  007D58  5036               	movf	decode@est_rec,w,c
  1381                           
  1382                           ; Switch size 1, requested type "space"
  1383                           ; Number of cases is 3, Range of values is 0 to 2
  1384                           ; switch strategies available:
  1385                           ; Name         Instructions Cycles
  1386                           ; simple_byte           10     6 (average)
  1387                           ;	Chosen strategy is simple_byte
  1388  007D5A  0A00               	xorlw	0	; case 0
  1389  007D5C  B4D8               	btfsc	status,2,c
  1390  007D5E  D7D1               	goto	l1090
  1391  007D60  0A01               	xorlw	1	; case 1
  1392  007D62  B4D8               	btfsc	status,2,c
  1393  007D64  D7E3               	goto	l1106
  1394  007D66  0A03               	xorlw	3	; case 2
  1395  007D68  B4D8               	btfsc	status,2,c
  1396  007D6A  D7EB               	goto	l1116
  1397  007D6C                     l1126:
  1398                           
  1399                           ;rampa.c: 61: return retorno;
  1400  007D6C  500F               	movf	decode@retorno,w,c
  1401  007D6E  0012               	return	
  1402  007D70                     __end_of_decode:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           prodh	equ	0xFF4
  1409                           prodl	equ	0xFF3
  1410                           intcon	equ	0xFF2
  1411                           intcon2	equ	0xFF1
  1412                           postinc0	equ	0xFEE
  1413                           wreg	equ	0xFE8
  1414                           indf2	equ	0xFDF
  1415                           fsr2h	equ	0xFDA
  1416                           fsr2l	equ	0xFD9
  1417                           status	equ	0xFD8
  1418                           
  1419 ;; *************** function _assign_id *****************
  1420 ;; Defined at:
  1421 ;;		line 12 in file "rampa.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  id              1    wreg     unsigned char 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  id              1   14[COMRAM] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;		None               void
  1428 ;; Registers used:
  1429 ;;		wreg
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1435 ;;      Params:         0       0       0       0       0       0       0       0       0
  1436 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1438 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1439 ;;Total ram usage:        1 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    2
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_main
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text9
  1450  007AD0                     __ptext9:
  1451                           	opt stack 0
  1452  007AD0                     _assign_id:
  1453                           	opt stack 28
  1454                           
  1455                           ;incstack = 0
  1456                           ;assign_id@id stored from wreg
  1457  007AD0  6E0F               	movwf	assign_id@id,c
  1458                           
  1459                           ;rampa.c: 13: slave_id=id;
  1460  007AD2  C00F  F03B         	movff	assign_id@id,_slave_id
  1461  007AD6  0012               	return	
  1462  007AD8                     __end_of_assign_id:
  1463                           	opt stack 0
  1464                           tblptru	equ	0xFF8
  1465                           tblptrh	equ	0xFF7
  1466                           tblptrl	equ	0xFF6
  1467                           tablat	equ	0xFF5
  1468                           prodh	equ	0xFF4
  1469                           prodl	equ	0xFF3
  1470                           intcon	equ	0xFF2
  1471                           intcon2	equ	0xFF1
  1472                           postinc0	equ	0xFEE
  1473                           wreg	equ	0xFE8
  1474                           indf2	equ	0xFDF
  1475                           fsr2h	equ	0xFDA
  1476                           fsr2l	equ	0xFD9
  1477                           status	equ	0xFD8
  1478                           
  1479 ;; *************** function ___lwmod *****************
  1480 ;; Defined at:
  1481 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/lwmod.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  dividend        2   14[COMRAM] unsigned int 
  1484 ;;  divisor         2   16[COMRAM] unsigned int 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  counter         1   18[COMRAM] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  2   14[COMRAM] unsigned int 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1496 ;;      Params:         4       0       0       0       0       0       0       0       0
  1497 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1499 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1500 ;;Total ram usage:        5 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    2
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text10
  1511  007C1A                     __ptext10:
  1512                           	opt stack 0
  1513  007C1A                     ___lwmod:
  1514                           	opt stack 28
  1515                           
  1516                           ;incstack = 0
  1517  007C1A  5012               	movf	___lwmod@divisor+1,w,c
  1518  007C1C  1011               	iorwf	___lwmod@divisor,w,c
  1519  007C1E  B4D8               	btfsc	status,2,c
  1520  007C20  D018               	goto	l921
  1521  007C22  0E01               	movlw	1
  1522  007C24  6E13               	movwf	___lwmod@counter,c
  1523  007C26  D004               	goto	l1204
  1524  007C28                     l1202:
  1525  007C28  90D8               	bcf	status,0,c
  1526  007C2A  3611               	rlcf	___lwmod@divisor,f,c
  1527  007C2C  3612               	rlcf	___lwmod@divisor+1,f,c
  1528  007C2E  2A13               	incf	___lwmod@counter,f,c
  1529  007C30                     l1204:
  1530  007C30  AE12               	btfss	___lwmod@divisor+1,7,c
  1531  007C32  D7FA               	goto	l1202
  1532  007C34                     l1206:
  1533  007C34  5011               	movf	___lwmod@divisor,w,c
  1534  007C36  5C0F               	subwf	___lwmod@dividend,w,c
  1535  007C38  5012               	movf	___lwmod@divisor+1,w,c
  1536  007C3A  5810               	subwfb	___lwmod@dividend+1,w,c
  1537  007C3C  A0D8               	btfss	status,0,c
  1538  007C3E  D004               	goto	l1210
  1539  007C40  5011               	movf	___lwmod@divisor,w,c
  1540  007C42  5E0F               	subwf	___lwmod@dividend,f,c
  1541  007C44  5012               	movf	___lwmod@divisor+1,w,c
  1542  007C46  5A10               	subwfb	___lwmod@dividend+1,f,c
  1543  007C48                     l1210:
  1544  007C48  90D8               	bcf	status,0,c
  1545  007C4A  3212               	rrcf	___lwmod@divisor+1,f,c
  1546  007C4C  3211               	rrcf	___lwmod@divisor,f,c
  1547  007C4E  2E13               	decfsz	___lwmod@counter,f,c
  1548  007C50  D7F1               	goto	l1206
  1549  007C52                     l921:
  1550  007C52  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  1551  007C56  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  1552  007C5A  0012               	return	
  1553  007C5C                     __end_of___lwmod:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           prodh	equ	0xFF4
  1560                           prodl	equ	0xFF3
  1561                           intcon	equ	0xFF2
  1562                           intcon2	equ	0xFF1
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           indf2	equ	0xFDF
  1566                           fsr2h	equ	0xFDA
  1567                           fsr2l	equ	0xFD9
  1568                           status	equ	0xFD8
  1569                           
  1570 ;; *************** function ___lwdiv *****************
  1571 ;; Defined at:
  1572 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/lwdiv.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  dividend        2   19[COMRAM] unsigned int 
  1575 ;;  divisor         2   21[COMRAM] unsigned int 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  quotient        2   23[COMRAM] unsigned int 
  1578 ;;  counter         1   25[COMRAM] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  2   19[COMRAM] unsigned int 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1588 ;;      Params:         4       0       0       0       0       0       0       0       0
  1589 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1591 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1592 ;;Total ram usage:        7 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    2
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text11
  1603  007CAC                     __ptext11:
  1604                           	opt stack 0
  1605  007CAC                     ___lwdiv:
  1606                           	opt stack 28
  1607                           
  1608                           ;incstack = 0
  1609  007CAC  0E00               	movlw	0
  1610  007CAE  6E19               	movwf	___lwdiv@quotient+1,c
  1611  007CB0  0E00               	movlw	0
  1612  007CB2  6E18               	movwf	___lwdiv@quotient,c
  1613  007CB4  5017               	movf	___lwdiv@divisor+1,w,c
  1614  007CB6  1016               	iorwf	___lwdiv@divisor,w,c
  1615  007CB8  B4D8               	btfsc	status,2,c
  1616  007CBA  D01C               	goto	l911
  1617  007CBC  0E01               	movlw	1
  1618  007CBE  6E1A               	movwf	___lwdiv@counter,c
  1619  007CC0  D004               	goto	l1184
  1620  007CC2                     l1182:
  1621  007CC2  90D8               	bcf	status,0,c
  1622  007CC4  3616               	rlcf	___lwdiv@divisor,f,c
  1623  007CC6  3617               	rlcf	___lwdiv@divisor+1,f,c
  1624  007CC8  2A1A               	incf	___lwdiv@counter,f,c
  1625  007CCA                     l1184:
  1626  007CCA  AE17               	btfss	___lwdiv@divisor+1,7,c
  1627  007CCC  D7FA               	goto	l1182
  1628  007CCE                     l1186:
  1629  007CCE  90D8               	bcf	status,0,c
  1630  007CD0  3618               	rlcf	___lwdiv@quotient,f,c
  1631  007CD2  3619               	rlcf	___lwdiv@quotient+1,f,c
  1632  007CD4  5016               	movf	___lwdiv@divisor,w,c
  1633  007CD6  5C14               	subwf	___lwdiv@dividend,w,c
  1634  007CD8  5017               	movf	___lwdiv@divisor+1,w,c
  1635  007CDA  5815               	subwfb	___lwdiv@dividend+1,w,c
  1636  007CDC  A0D8               	btfss	status,0,c
  1637  007CDE  D005               	goto	l1194
  1638  007CE0  5016               	movf	___lwdiv@divisor,w,c
  1639  007CE2  5E14               	subwf	___lwdiv@dividend,f,c
  1640  007CE4  5017               	movf	___lwdiv@divisor+1,w,c
  1641  007CE6  5A15               	subwfb	___lwdiv@dividend+1,f,c
  1642  007CE8  8018               	bsf	___lwdiv@quotient,0,c
  1643  007CEA                     l1194:
  1644  007CEA  90D8               	bcf	status,0,c
  1645  007CEC  3217               	rrcf	___lwdiv@divisor+1,f,c
  1646  007CEE  3216               	rrcf	___lwdiv@divisor,f,c
  1647  007CF0  2E1A               	decfsz	___lwdiv@counter,f,c
  1648  007CF2  D7ED               	goto	l1186
  1649  007CF4                     l911:
  1650  007CF4  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  1651  007CF8  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1652  007CFC  0012               	return	
  1653  007CFE                     __end_of___lwdiv:
  1654                           	opt stack 0
  1655                           tblptru	equ	0xFF8
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           prodh	equ	0xFF4
  1660                           prodl	equ	0xFF3
  1661                           intcon	equ	0xFF2
  1662                           intcon2	equ	0xFF1
  1663                           postinc0	equ	0xFEE
  1664                           wreg	equ	0xFE8
  1665                           indf2	equ	0xFDF
  1666                           fsr2h	equ	0xFDA
  1667                           fsr2l	equ	0xFD9
  1668                           status	equ	0xFD8
  1669                           
  1670 ;; *************** function _Send_4Disp *****************
  1671 ;; Defined at:
  1672 ;;		line 74 in file "Lemos.C"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  Umil            1    wreg     unsigned char 
  1675 ;;  Cent            1   16[COMRAM] unsigned char 
  1676 ;;  Dec             1   17[COMRAM] unsigned char 
  1677 ;;  Uni             1   18[COMRAM] unsigned char 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  Umil            1   19[COMRAM] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;		None               void
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, status,0, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1689 ;;      Params:         3       0       0       0       0       0       0       0       0
  1690 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1692 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1693 ;;Total ram usage:        4 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    3
  1696 ;; This function calls:
  1697 ;;		_Send_Disp
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text12
  1704  007D70                     __ptext12:
  1705                           	opt stack 0
  1706  007D70                     _Send_4Disp:
  1707                           	opt stack 27
  1708                           
  1709                           ;incstack = 0
  1710                           ;Send_4Disp@Umil stored from wreg
  1711  007D70  6E14               	movwf	Send_4Disp@Umil,c
  1712                           
  1713                           ;Lemos.C: 76: static unsigned char Nro_Disp=1;
  1714                           ;Lemos.C: 78: switch(Nro_Disp){
  1715  007D72  D02F               	goto	l1158
  1716  007D74                     l220:
  1717                           
  1718                           ;Lemos.C: 80: if(!mux_tout){
  1719  007D74  6633               	tstfsz	_mux_tout,c
  1720  007D76  D03B               	goto	l230
  1721                           
  1722                           ;Lemos.C: 81: Send_Disp(1,Umil);
  1723  007D78  C014  F00F         	movff	Send_4Disp@Umil,Send_Disp@Dato
  1724  007D7C  0E01               	movlw	1
  1725  007D7E  EC2E  F03E         	call	_Send_Disp
  1726                           
  1727                           ;Lemos.C: 82: mux_tout = 4;;
  1728  007D82  0E04               	movlw	4
  1729  007D84  6E33               	movwf	_mux_tout,c
  1730                           
  1731                           ;Lemos.C: 83: Nro_Disp = 2;
  1732  007D86  0E02               	movlw	2
  1733  007D88  D01E               	goto	L6
  1734  007D8A                     l223:
  1735                           
  1736                           ;Lemos.C: 88: if(!mux_tout){
  1737  007D8A  6633               	tstfsz	_mux_tout,c
  1738  007D8C  D030               	goto	l230
  1739                           
  1740                           ;Lemos.C: 89: Send_Disp(2,Cent);
  1741  007D8E  C011  F00F         	movff	Send_4Disp@Cent,Send_Disp@Dato
  1742  007D92  0E02               	movlw	2
  1743  007D94  EC2E  F03E         	call	_Send_Disp
  1744                           
  1745                           ;Lemos.C: 90: mux_tout = 4;;
  1746  007D98  0E04               	movlw	4
  1747  007D9A  6E33               	movwf	_mux_tout,c
  1748                           
  1749                           ;Lemos.C: 91: Nro_Disp = 3;
  1750  007D9C  0E03               	movlw	3
  1751  007D9E  D013               	goto	L6
  1752  007DA0                     l225:
  1753                           
  1754                           ;Lemos.C: 96: if(!mux_tout){
  1755  007DA0  6633               	tstfsz	_mux_tout,c
  1756  007DA2  D025               	goto	l230
  1757                           
  1758                           ;Lemos.C: 97: Send_Disp(3,Dec);
  1759  007DA4  C012  F00F         	movff	Send_4Disp@Dec,Send_Disp@Dato
  1760  007DA8  0E03               	movlw	3
  1761  007DAA  EC2E  F03E         	call	_Send_Disp
  1762                           
  1763                           ;Lemos.C: 98: mux_tout = 4;;
  1764  007DAE  0E04               	movlw	4
  1765  007DB0  6E33               	movwf	_mux_tout,c
  1766                           
  1767                           ;Lemos.C: 99: Nro_Disp = 4;
  1768  007DB2  0E04               	movlw	4
  1769  007DB4  D008               	goto	L6
  1770  007DB6                     l227:
  1771                           
  1772                           ;Lemos.C: 104: if(!mux_tout){
  1773  007DB6  6633               	tstfsz	_mux_tout,c
  1774  007DB8  D01A               	goto	l230
  1775                           
  1776                           ;Lemos.C: 105: Send_Disp(4,Uni);
  1777  007DBA  C013  F00F         	movff	Send_4Disp@Uni,Send_Disp@Dato
  1778  007DBE  0E04               	movlw	4
  1779  007DC0  EC2E  F03E         	call	_Send_Disp
  1780  007DC4  D002               	goto	l1156
  1781  007DC6                     L6:
  1782  007DC6  6E38               	movwf	Send_4Disp@Nro_Disp,c
  1783  007DC8  D012               	goto	l230
  1784  007DCA                     l1156:
  1785                           
  1786                           ;Lemos.C: 112: mux_tout = 4;;
  1787  007DCA  0E04               	movlw	4
  1788  007DCC  6E33               	movwf	_mux_tout,c
  1789                           
  1790                           ;Lemos.C: 113: Nro_Disp = 1;
  1791  007DCE  0E01               	movlw	1
  1792  007DD0  D7FA               	goto	L6
  1793  007DD2                     l1158:
  1794  007DD2  5038               	movf	Send_4Disp@Nro_Disp,w,c
  1795                           
  1796                           ; Switch size 1, requested type "space"
  1797                           ; Number of cases is 4, Range of values is 1 to 4
  1798                           ; switch strategies available:
  1799                           ; Name         Instructions Cycles
  1800                           ; simple_byte           13     7 (average)
  1801                           ;	Chosen strategy is simple_byte
  1802  007DD4  0A01               	xorlw	1	; case 1
  1803  007DD6  B4D8               	btfsc	status,2,c
  1804  007DD8  D7CD               	goto	l220
  1805  007DDA  0A03               	xorlw	3	; case 2
  1806  007DDC  B4D8               	btfsc	status,2,c
  1807  007DDE  D7D5               	goto	l223
  1808  007DE0  0A01               	xorlw	1	; case 3
  1809  007DE2  B4D8               	btfsc	status,2,c
  1810  007DE4  D7DD               	goto	l225
  1811  007DE6  0A07               	xorlw	7	; case 4
  1812  007DE8  B4D8               	btfsc	status,2,c
  1813  007DEA  D7E5               	goto	l227
  1814  007DEC  D7EE               	goto	l1156
  1815  007DEE                     l230:
  1816  007DEE  0012               	return	
  1817  007DF0                     __end_of_Send_4Disp:
  1818                           	opt stack 0
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           prodh	equ	0xFF4
  1824                           prodl	equ	0xFF3
  1825                           intcon	equ	0xFF2
  1826                           intcon2	equ	0xFF1
  1827                           postinc0	equ	0xFEE
  1828                           wreg	equ	0xFE8
  1829                           indf2	equ	0xFDF
  1830                           fsr2h	equ	0xFDA
  1831                           fsr2l	equ	0xFD9
  1832                           status	equ	0xFD8
  1833                           
  1834 ;; *************** function _Send_Disp *****************
  1835 ;; Defined at:
  1836 ;;		line 43 in file "Lemos.C"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  NroDisp         1    wreg     unsigned char 
  1839 ;;  Dato            1   14[COMRAM] unsigned char 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  NroDisp         1   15[COMRAM] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;		None               void
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1851 ;;      Params:         1       0       0       0       0       0       0       0       0
  1852 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1854 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1855 ;;Total ram usage:        2 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    2
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_Send_4Disp
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text13
  1866  007C5C                     __ptext13:
  1867                           	opt stack 0
  1868  007C5C                     _Send_Disp:
  1869                           	opt stack 27
  1870                           
  1871                           ;incstack = 0
  1872                           ;Send_Disp@NroDisp stored from wreg
  1873  007C5C  6E10               	movwf	Send_Disp@NroDisp,c
  1874                           
  1875                           ;Lemos.C: 45: LATA = 0;
  1876  007C5E  0E00               	movlw	0
  1877  007C60  6E89               	movwf	3977,c	;volatile
  1878                           
  1879                           ;Lemos.C: 47: LATAbits.LA4 = 0;
  1880  007C62  9889               	bcf	3977,4,c	;volatile
  1881                           
  1882                           ;Lemos.C: 48: LATAbits.LA5 = 0;
  1883  007C64  9A89               	bcf	3977,5,c	;volatile
  1884                           
  1885                           ;Lemos.C: 49: LATEbits.LATE0 = 0;
  1886  007C66  908D               	bcf	3981,0,c	;volatile
  1887                           
  1888                           ;Lemos.C: 50: LATEbits.LATE1 = 0;
  1889  007C68  928D               	bcf	3981,1,c	;volatile
  1890                           
  1891                           ;Lemos.C: 52: switch(NroDisp){
  1892  007C6A  D008               	goto	l1000
  1893  007C6C                     l210:
  1894                           
  1895                           ;Lemos.C: 57: LATAbits.LA5 = 1;
  1896  007C6C  8A89               	bsf	3977,5,c	;volatile
  1897                           
  1898                           ;Lemos.C: 58: }break;
  1899  007C6E  D014               	goto	l1002
  1900  007C70                     l211:
  1901                           
  1902                           ;Lemos.C: 60: LATEbits.LATE0 = 1;
  1903  007C70  808D               	bsf	3981,0,c	;volatile
  1904                           
  1905                           ;Lemos.C: 61: }break;
  1906  007C72  D012               	goto	l1002
  1907  007C74                     l212:
  1908                           
  1909                           ;Lemos.C: 63: LATEbits.LATE1 = 1;
  1910  007C74  828D               	bsf	3981,1,c	;volatile
  1911                           
  1912                           ;Lemos.C: 64: }break;
  1913  007C76  D010               	goto	l1002
  1914  007C78                     l213:
  1915                           
  1916                           ;Lemos.C: 66: LATAbits.LA4 = 1;
  1917  007C78  8889               	bsf	3977,4,c	;volatile
  1918                           
  1919                           ;Lemos.C: 67: }break;
  1920  007C7A  D00E               	goto	l1002
  1921  007C7C                     l1000:
  1922  007C7C  5010               	movf	Send_Disp@NroDisp,w,c
  1923                           
  1924                           ; Switch size 1, requested type "space"
  1925                           ; Number of cases is 4, Range of values is 1 to 4
  1926                           ; switch strategies available:
  1927                           ; Name         Instructions Cycles
  1928                           ; simple_byte           13     7 (average)
  1929                           ;	Chosen strategy is simple_byte
  1930  007C7E  0A01               	xorlw	1	; case 1
  1931  007C80  B4D8               	btfsc	status,2,c
  1932  007C82  D7FA               	goto	l213
  1933  007C84  0A03               	xorlw	3	; case 2
  1934  007C86  B4D8               	btfsc	status,2,c
  1935  007C88  D7F1               	goto	l210
  1936  007C8A  0A01               	xorlw	1	; case 3
  1937  007C8C  B4D8               	btfsc	status,2,c
  1938  007C8E  D7F0               	goto	l211
  1939  007C90  0A07               	xorlw	7	; case 4
  1940  007C92  B4D8               	btfsc	status,2,c
  1941  007C94  D7EF               	goto	l212
  1942  007C96  D7F0               	goto	l213
  1943  007C98                     l1002:
  1944                           
  1945                           ;Lemos.C: 69: Dato = Dato & 0x0F;
  1946  007C98  500F               	movf	Send_Disp@Dato,w,c
  1947  007C9A  0B0F               	andlw	15
  1948  007C9C  6E0F               	movwf	Send_Disp@Dato,c
  1949                           
  1950                           ;Lemos.C: 70: LATA = LATA & 0xF0;
  1951  007C9E  5089               	movf	3977,w,c	;volatile
  1952  007CA0  0BF0               	andlw	240
  1953  007CA2  6E89               	movwf	3977,c	;volatile
  1954                           
  1955                           ;Lemos.C: 71: LATA = LATA | Dato;
  1956  007CA4  5089               	movf	3977,w,c	;volatile
  1957  007CA6  100F               	iorwf	Send_Disp@Dato,w,c
  1958  007CA8  6E89               	movwf	3977,c	;volatile
  1959  007CAA  0012               	return	
  1960  007CAC                     __end_of_Send_Disp:
  1961                           	opt stack 0
  1962                           tblptru	equ	0xFF8
  1963                           tblptrh	equ	0xFF7
  1964                           tblptrl	equ	0xFF6
  1965                           tablat	equ	0xFF5
  1966                           prodh	equ	0xFF4
  1967                           prodl	equ	0xFF3
  1968                           intcon	equ	0xFF2
  1969                           intcon2	equ	0xFF1
  1970                           postinc0	equ	0xFEE
  1971                           wreg	equ	0xFE8
  1972                           indf2	equ	0xFDF
  1973                           fsr2h	equ	0xFDA
  1974                           fsr2l	equ	0xFD9
  1975                           status	equ	0xFD8
  1976                           
  1977 ;; *************** function _myISR *****************
  1978 ;; Defined at:
  1979 ;;		line 115 in file "main.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;		None               void
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1993 ;;      Params:         0       0       0       0       0       0       0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1995 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1996 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1997 ;;Total ram usage:       14 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:    1
  2000 ;; This function calls:
  2001 ;;		_RAMPA_tic
  2002 ;;		_tic_timer0
  2003 ;; This function is called by:
  2004 ;;		Interrupt level 2
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	intcode
  2009  002008                     __pintcode:
  2010                           	opt stack 0
  2011  002008                     _myISR:
  2012                           	opt stack 27
  2013                           
  2014                           ;incstack = 0
  2015  002008  CFFA F001          	movff	pclath,??_myISR
  2016  00200C  CFFB F002          	movff	pclatu,??_myISR+1
  2017  002010  CFE9 F003          	movff	fsr0l,??_myISR+2
  2018  002014  EDF8  F03E         	call	int_func,f	;refresh shadow registers
  2019                           pclatu	equ	0xFFB
  2020                           pclath	equ	0xFFA
  2021                           tblptru	equ	0xFF8
  2022                           tblptrh	equ	0xFF7
  2023                           tblptrl	equ	0xFF6
  2024                           tablat	equ	0xFF5
  2025                           prodh	equ	0xFF4
  2026                           prodl	equ	0xFF3
  2027                           intcon	equ	0xFF2
  2028                           intcon2	equ	0xFF1
  2029                           postinc0	equ	0xFEE
  2030                           fsr0l	equ	0xFE9
  2031                           wreg	equ	0xFE8
  2032                           indf2	equ	0xFDF
  2033                           fsr2h	equ	0xFDA
  2034                           fsr2l	equ	0xFD9
  2035                           status	equ	0xFD8
  2036                           
  2037                           	psect	intcode_body
  2038  007DF0                     __pintcode_body:
  2039                           	opt stack 27
  2040  007DF0                     int_func:
  2041                           	opt stack 27
  2042  007DF0  0006               	pop		; remove dummy address from shadow register refresh
  2043  007DF2  CFEA F004          	movff	fsr0h,??_myISR+3
  2044  007DF6  CFE1 F005          	movff	fsr1l,??_myISR+4
  2045  007DFA  CFE2 F006          	movff	fsr1h,??_myISR+5
  2046  007DFE  CFD9 F007          	movff	fsr2l,??_myISR+6
  2047  007E02  CFDA F008          	movff	fsr2h,??_myISR+7
  2048  007E06  CFF3 F009          	movff	prodl,??_myISR+8
  2049  007E0A  CFF4 F00A          	movff	prodh,??_myISR+9
  2050  007E0E  CFF6 F00B          	movff	tblptrl,??_myISR+10
  2051  007E12  CFF7 F00C          	movff	tblptrh,??_myISR+11
  2052  007E16  CFF8 F00D          	movff	tblptru,??_myISR+12
  2053  007E1A  CFF5 F00E          	movff	tablat,??_myISR+13
  2054                           
  2055                           ;main.c: 124: if(TMR0IF){
  2056  007E1E  A4F2               	btfss	intcon,2,c	;volatile
  2057  007E20  D00A               	goto	i2l1276
  2058                           
  2059                           ;main.c: 125: INTCONbits.TMR0IF = 0;
  2060  007E22  94F2               	bcf	intcon,2,c	;volatile
  2061                           
  2062                           ;main.c: 126: TMR0L = 209;
  2063  007E24  0ED1               	movlw	209
  2064  007E26  6ED6               	movwf	4054,c	;volatile
  2065                           
  2066                           ;main.c: 127: TMR0H = 0xFF;
  2067  007E28  68D7               	setf	4055,c	;volatile
  2068                           
  2069                           ;main.c: 129: tic_timer0();
  2070  007E2A  EC9C  F03D         	call	_tic_timer0	;wreg free
  2071                           
  2072                           ;main.c: 135: if(rampa_status) RAMPA_tic();
  2073  007E2E  5034               	movf	_rampa_status,w,c
  2074  007E30  A4D8               	btfss	status,2,c
  2075  007E32  EC74  F03D         	call	_RAMPA_tic	;wreg free
  2076  007E36                     i2l1276:
  2077                           
  2078                           ;main.c: 138: }
  2079                           ;main.c: 141: if(TMR1IF){
  2080  007E36  A09E               	btfss	3998,0,c	;volatile
  2081  007E38  D005               	goto	i2l1286
  2082                           
  2083                           ;main.c: 142: PIR1bits.TMR1IF = 0;
  2084  007E3A  909E               	bcf	3998,0,c	;volatile
  2085                           
  2086                           ;main.c: 143: TMR1L=144;
  2087  007E3C  0E90               	movlw	144
  2088  007E3E  6ECE               	movwf	4046,c	;volatile
  2089                           
  2090                           ;main.c: 144: TMR1H=0xFF;
  2091  007E40  68CF               	setf	4047,c	;volatile
  2092                           
  2093                           ;main.c: 145: LATBbits.LATB7 =~ LATBbits.LATB7;
  2094  007E42  7E8A               	btg	3978,7,c	;volatile
  2095  007E44                     i2l1286:
  2096                           
  2097                           ;main.c: 146: }
  2098                           ;main.c: 147: if(RCIF){
  2099  007E44  AA9E               	btfss	3998,5,c	;volatile
  2100  007E46  D004               	goto	i2l1292
  2101                           
  2102                           ;main.c: 148: RCIF=0;
  2103  007E48  9A9E               	bcf	3998,5,c	;volatile
  2104                           
  2105                           ;main.c: 149: caracter_recibido=RCREG;
  2106  007E4A  CFAE F032          	movff	4014,_caracter_recibido	;volatile
  2107                           
  2108                           ;main.c: 150: (void) RCREG;
  2109  007E4E  50AE               	movf	4014,w,c	;volatile
  2110  007E50                     i2l1292:
  2111                           
  2112                           ;main.c: 151: }
  2113                           ;main.c: 152: if(INT0IF){
  2114  007E50  A2F2               	btfss	intcon,1,c	;volatile
  2115  007E52  D004               	goto	i2l90
  2116                           
  2117                           ;main.c: 153: rampa_status=0;
  2118  007E54  0E00               	movlw	0
  2119  007E56  6E34               	movwf	_rampa_status,c
  2120                           
  2121                           ;main.c: 154: INTCONbits.INT0IE=0;
  2122  007E58  98F2               	bcf	intcon,4,c	;volatile
  2123                           
  2124                           ;main.c: 155: INTCONbits.INT0IF=0;
  2125  007E5A  92F2               	bcf	intcon,1,c	;volatile
  2126  007E5C                     i2l90:
  2127  007E5C  C00E  FFF5         	movff	??_myISR+13,tablat
  2128  007E60  C00D  FFF8         	movff	??_myISR+12,tblptru
  2129  007E64  C00C  FFF7         	movff	??_myISR+11,tblptrh
  2130  007E68  C00B  FFF6         	movff	??_myISR+10,tblptrl
  2131  007E6C  C00A  FFF4         	movff	??_myISR+9,prodh
  2132  007E70  C009  FFF3         	movff	??_myISR+8,prodl
  2133  007E74  C008  FFDA         	movff	??_myISR+7,fsr2h
  2134  007E78  C007  FFD9         	movff	??_myISR+6,fsr2l
  2135  007E7C  C006  FFE2         	movff	??_myISR+5,fsr1h
  2136  007E80  C005  FFE1         	movff	??_myISR+4,fsr1l
  2137  007E84  C004  FFEA         	movff	??_myISR+3,fsr0h
  2138  007E88  C003  FFE9         	movff	??_myISR+2,fsr0l
  2139  007E8C  C002  FFFB         	movff	??_myISR+1,pclatu
  2140  007E90  C001  FFFA         	movff	??_myISR,pclath
  2141  007E94  0011               	retfie		f
  2142  007E96                     __end_of_myISR:
  2143                           	opt stack 0
  2144                           pclatu	equ	0xFFB
  2145                           pclath	equ	0xFFA
  2146                           tblptru	equ	0xFF8
  2147                           tblptrh	equ	0xFF7
  2148                           tblptrl	equ	0xFF6
  2149                           tablat	equ	0xFF5
  2150                           prodh	equ	0xFF4
  2151                           prodl	equ	0xFF3
  2152                           intcon	equ	0xFF2
  2153                           intcon2	equ	0xFF1
  2154                           postinc0	equ	0xFEE
  2155                           fsr0h	equ	0xFEA
  2156                           fsr0l	equ	0xFE9
  2157                           wreg	equ	0xFE8
  2158                           fsr1h	equ	0xFE2
  2159                           fsr1l	equ	0xFE1
  2160                           indf2	equ	0xFDF
  2161                           fsr2h	equ	0xFDA
  2162                           fsr2l	equ	0xFD9
  2163                           status	equ	0xFD8
  2164                           
  2165 ;; *************** function _tic_timer0 *****************
  2166 ;; Defined at:
  2167 ;;		line 117 in file "Lemos.C"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;		None               void
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2181 ;;      Params:         0       0       0       0       0       0       0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2184 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_myISR
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text15
  2195  007B38                     __ptext15:
  2196                           	opt stack 0
  2197  007B38                     _tic_timer0:
  2198                           	opt stack 27
  2199                           
  2200                           ;Lemos.C: 118: if(mux_tout)mux_tout--;
  2201                           
  2202                           ;incstack = 0
  2203  007B38  5033               	movf	_mux_tout,w,c
  2204  007B3A  A4D8               	btfss	status,2,c
  2205  007B3C  0633               	decf	_mux_tout,f,c
  2206                           
  2207                           ;Lemos.C: 119: if(bot_tout)bot_tout--;
  2208  007B3E  5031               	movf	_bot_tout,w,c
  2209  007B40  A4D8               	btfss	status,2,c
  2210  007B42  0631               	decf	_bot_tout,f,c
  2211                           
  2212                           ;Lemos.C: 120: if(led_tout)led_tout--;
  2213  007B44  502A               	movf	_led_tout+1,w,c
  2214  007B46  1029               	iorwf	_led_tout,w,c
  2215  007B48  B4D8               	btfsc	status,2,c
  2216  007B4A  D003               	goto	i2l236
  2217  007B4C  0629               	decf	_led_tout,f,c
  2218  007B4E  A0D8               	btfss	status,0,c
  2219  007B50  062A               	decf	_led_tout+1,f,c
  2220  007B52                     i2l236:
  2221  007B52  0012               	return	
  2222  007B54                     __end_of_tic_timer0:
  2223                           	opt stack 0
  2224                           pclatu	equ	0xFFB
  2225                           pclath	equ	0xFFA
  2226                           tblptru	equ	0xFF8
  2227                           tblptrh	equ	0xFF7
  2228                           tblptrl	equ	0xFF6
  2229                           tablat	equ	0xFF5
  2230                           prodh	equ	0xFF4
  2231                           prodl	equ	0xFF3
  2232                           intcon	equ	0xFF2
  2233                           intcon2	equ	0xFF1
  2234                           postinc0	equ	0xFEE
  2235                           fsr0h	equ	0xFEA
  2236                           fsr0l	equ	0xFE9
  2237                           wreg	equ	0xFE8
  2238                           fsr1h	equ	0xFE2
  2239                           fsr1l	equ	0xFE1
  2240                           indf2	equ	0xFDF
  2241                           fsr2h	equ	0xFDA
  2242                           fsr2l	equ	0xFD9
  2243                           status	equ	0xFD8
  2244                           
  2245 ;; *************** function _RAMPA_tic *****************
  2246 ;; Defined at:
  2247 ;;		line 15 in file "rampa.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;		None               void
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2261 ;;      Params:         0       0       0       0       0       0       0       0       0
  2262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2264 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2265 ;;Total ram usage:        0 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_myISR
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text16
  2275  007AE8                     __ptext16:
  2276                           	opt stack 0
  2277  007AE8                     _RAMPA_tic:
  2278                           	opt stack 27
  2279                           
  2280                           ;rampa.c: 16: if(tiempo_rampa<9999)tiempo_rampa++;
  2281                           
  2282                           ;incstack = 0
  2283  007AE8  0E0F               	movlw	15
  2284  007AEA  5C2B               	subwf	_tiempo_rampa,w,c
  2285  007AEC  0E27               	movlw	39
  2286  007AEE  582C               	subwfb	_tiempo_rampa+1,w,c
  2287  007AF0  B0D8               	btfsc	status,0,c
  2288  007AF2  D002               	goto	i2l289
  2289  007AF4  4A2B               	infsnz	_tiempo_rampa,f,c
  2290  007AF6  2A2C               	incf	_tiempo_rampa+1,f,c
  2291  007AF8                     i2l289:
  2292  007AF8  0012               	return	
  2293  007AFA                     __end_of_RAMPA_tic:
  2294                           	opt stack 0
  2295                           pclatu	equ	0xFFB
  2296                           pclath	equ	0xFFA
  2297                           tblptru	equ	0xFF8
  2298                           tblptrh	equ	0xFF7
  2299                           tblptrl	equ	0xFF6
  2300                           tablat	equ	0xFF5
  2301                           prodh	equ	0xFF4
  2302                           prodl	equ	0xFF3
  2303                           intcon	equ	0xFF2
  2304                           intcon2	equ	0xFF1
  2305                           postinc0	equ	0xFEE
  2306                           fsr0h	equ	0xFEA
  2307                           fsr0l	equ	0xFE9
  2308                           wreg	equ	0xFE8
  2309                           fsr1h	equ	0xFE2
  2310                           fsr1l	equ	0xFE1
  2311                           indf2	equ	0xFDF
  2312                           fsr2h	equ	0xFDA
  2313                           fsr2l	equ	0xFD9
  2314                           status	equ	0xFD8
  2315                           pclatu	equ	0xFFB
  2316                           pclath	equ	0xFFA
  2317                           tblptru	equ	0xFF8
  2318                           tblptrh	equ	0xFF7
  2319                           tblptrl	equ	0xFF6
  2320                           tablat	equ	0xFF5
  2321                           prodh	equ	0xFF4
  2322                           prodl	equ	0xFF3
  2323                           intcon	equ	0xFF2
  2324                           intcon2	equ	0xFF1
  2325                           postinc0	equ	0xFEE
  2326                           fsr0h	equ	0xFEA
  2327                           fsr0l	equ	0xFE9
  2328                           wreg	equ	0xFE8
  2329                           fsr1h	equ	0xFE2
  2330                           fsr1l	equ	0xFE1
  2331                           indf2	equ	0xFDF
  2332                           fsr2h	equ	0xFDA
  2333                           fsr2l	equ	0xFD9
  2334                           status	equ	0xFD8
  2335                           
  2336                           	psect	rparam
  2337  0000                     pclatu	equ	0xFFB
  2338                           pclath	equ	0xFFA
  2339                           tblptru	equ	0xFF8
  2340                           tblptrh	equ	0xFF7
  2341                           tblptrl	equ	0xFF6
  2342                           tablat	equ	0xFF5
  2343                           prodh	equ	0xFF4
  2344                           prodl	equ	0xFF3
  2345                           intcon	equ	0xFF2
  2346                           intcon2	equ	0xFF1
  2347                           postinc0	equ	0xFEE
  2348                           fsr0h	equ	0xFEA
  2349                           fsr0l	equ	0xFE9
  2350                           wreg	equ	0xFE8
  2351                           fsr1h	equ	0xFE2
  2352                           fsr1l	equ	0xFE1
  2353                           indf2	equ	0xFDF
  2354                           fsr2h	equ	0xFDA
  2355                           fsr2l	equ	0xFD9
  2356                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1
    Data        3
    BSS         17
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    informar@dato	PTR unsigned char  size(2) Largest target is 4
		 -> main@paquete(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    _informar->_transmitir
    ___lwdiv->___lwmod
    _Send_4Disp->_Send_Disp

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    1773
                                             26 COMRAM    12    12      0
                         _Send_4Disp
                            ___lwdiv
                            ___lwmod
                          _assign_id
                             _decode
                           _informar
                          _pic_ini13
                        _rampa_ini13
                       _timer1_ini13
                        _timer_ini13
                        _usart_ini13
 ---------------------------------------------------------------------------------
 (1) _usart_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_ini13                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rampa_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pic_ini13                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _informar                                             4     1      3     181
                                             15 COMRAM     4     1      3
                         _transmitir
 ---------------------------------------------------------------------------------
 (2) _transmitir                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _decode                                               2     2      0      90
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _assign_id                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     423
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     423
                                             19 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Send_4Disp                                           4     1      3     476
                                             16 COMRAM     4     1      3
                          _Send_Disp
 ---------------------------------------------------------------------------------
 (2) _Send_Disp                                            2     1      1     257
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                               14    14      0       0
                                              0 COMRAM    14    14      0
                          _RAMPA_tic
                         _tic_timer0
 ---------------------------------------------------------------------------------
 (4) _tic_timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RAMPA_tic                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_4Disp
     _Send_Disp
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _assign_id
   _decode
   _informar
     _transmitir
   _pic_ini13
   _rampa_ini13
   _timer1_ini13
   _timer_ini13
   _usart_ini13

 _myISR (ROOT)
   _RAMPA_tic
   _tic_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      3B       1       62.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B      20        0.0%
DATA                 0      0      3B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun May 31 23:23:33 2015

                        l74 7EDE                          l75 7EEC                          l76 7EF6  
                        l78 7F10                          l79 7FEC                 __CFG_BOR$ON 000000  
               __CFG_BORV$3 000000                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
                       l210 7C6C                         l211 7C70                         l212 7C74  
                       l220 7D74                         l213 7C78                         l230 7DEE  
                       l223 7D8A                         l225 7DA0                         l227 7DB6  
                       l315 7ADA                         l318 7AE2                         _DEC 002E  
                       l911 7CF4                         l921 7C52                __CFG_CPB$OFF 000000  
                       u245 7F58                         _PR2 000FCB                         _UNI 0030  
                       wreg 000FE8               Send_Disp@Dato 000F                __CFG_LVP$OFF 000000  
              __CFG_WDT$OFF 000000                        l1000 7C7C                        l1002 7C98  
                      l1210 7C48                        l1202 7C28                        l1106 7D2C  
                      l1204 7C30                        l1116 7D42                        l1124 7D58  
                      l1206 7C34                        l1126 7D6C                        l1230 7EC6  
                      l1080 7BF0                        l1090 7D02                        l1234 7ED4  
                      l1156 7DCA                        l1084 7C0A                        l1236 7ED8  
                      l1158 7DD2                        l1182 7CC2                        l1254 7F1E  
                      l1184 7CCA                        l1256 7F4E                        l1194 7CEA  
                      l1186 7CCE                        l1098 7D12                        _CENT 002D  
                      _LATA 000F89                        _LATB 000F8A                        _LATC 000F8B  
                      _LATD 000F8C                        _LATE 000F8D                        _RCIF 007CF5  
                      i2l90 7E5C                        _UMIL 002F                 _usart_ini13 7B54  
               main@paquete 0023                        _main 7E96                        fsr0h 000FEA  
                      fsr1h 000FE2                        fsr0l 000FE9                        fsr2h 000FDA  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
                      pclat 000FFA                        prodh 000FF4                        prodl 000FF3  
                      start 2018               __CFG_IESO$OFF 000000               __CFG_MCLRE$ON 000000  
        __size_of_RAMPA_tic 0012               __CFG_PLLDIV$5 000000                 assign_id@id 000F  
                     ?_main 0001                       _CMCON 000FB4             __end_of___lwdiv 7CFE  
           __end_of___lwmod 7C5C                       i2l236 7B52                       i2l289 7AF8  
                     _RCREG 000FAE                       _TMR0H 000FD7                       _TMR1H 000FCF  
                     _TMR0L 000FD6                       _TMR1L 000FCE                       _SPBRG 000FAF  
             __CFG_USBDIV$2 000000                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISD 000F95                       _TRISE 000F96                       _TXREG 000FAD  
             __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000              __CFG_EBTRB$OFF 000000  
                     _myISR 2008                       leds@i 003A                       tablat 000FF5  
                     status 000FD8             __initialization 7BAC  main@backup_ultimo_caracter 0021  
              ?_rampa_ini13 0001                __end_of_main 8000                      ??_main 001B  
             __activetblptr 000002                  _Send_4Disp 7D70                      _ADCON1 000FC1  
                    ?_myISR 0001                      _CCPR1L 000FBE           __end_of_RAMPA_tic 7AFA  
                    _INT0IF 007F91                      _MEMDIG 0039                      i2l1292 7E50  
                    i2l1276 7E36                      i2l1286 7E44                      _TMR0IF 007F92  
                    _TMR1IF 007CF0                      _SPBRGH 000FB0              __CFG_VREGEN$ON 000000  
            __CFG_XINST$OFF 000000          __size_of_Send_Disp 0050              __CFG_STVREN$ON 000000  
                    _decode 7CFE                   ??___lwdiv 0018                   ??___lwmod 0013  
          __end_of_informar 7C1A                      clear_0 7BB2        __end_of_broadcast_id 201E  
              __pdataCOMRAM 0038                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                ?_timer_ini13 0001  
             decode@com_rec 0035               decode@est_rec 0036                  __accesstop 0060  
   __end_of__initialization 7BD6             __CFG_PBADEN$OFF 000000            Send_Disp@NroDisp 0010  
             decode@retorno 000F              __pcstackCOMRAM 0001               __end_of_myISR 7E96  
        main@broadcast_flag 0022                 ?_Send_4Disp 0011                     ??_myISR 0001  
         __end_of_Send_Disp 7CAC          __size_of_assign_id 0008                ?_usart_ini13 0001  
                __pnvCOMRAM 003B          __size_of_pic_ini13 0030                     ?_decode 0001  
        Send_4Disp@Nro_Disp 0038        __size_of_rampa_ini13 0012                   ?_informar 0010  
                   __Hparam 0000                     __Lparam 0000         __size_of_Send_4Disp 0080  
           __size_of_decode 0072                     ___lwdiv 7CAC                     ___lwmod 7C1A  
         __end_of_assign_id 7AD8                __psmallconst 201C                     __pcinit 7BAC  
             ?_timer1_ini13 0001                     __ramtop 0800                     __ptext0 7E96  
                   __ptext1 7B54                     __ptext2 7B1E                     __ptext3 7B0C  
                   __ptext4 7AFA                     __ptext5 7B7C                     __ptext6 7BE0  
                   __ptext7 7AD8                     __ptext8 7CFE                     __ptext9 7AD0  
              informar@dato 0010                   _T0CONbits 000FD5                   _T1CONbits 000FCD  
                 _T2CONbits 000FCA           __end_of_pic_ini13 7BAC         mux_display@contdisp 0037  
                   main@dec 001C                     main@mil 001E                     main@seg 001B  
            __pintcode_body 7DF0        __size_of_timer_ini13 001A        end_of_initialization 7BD6  
                ??_informar 0013               __Lmediumconst 0000                     int_func 7DF0  
              _broadcast_id 201D                   _RAMPA_tic 7AE8                  _tic_timer0 7B38  
                 _RCSTAbits 000FAB                     postinc0 000FEE              ??_timer1_ini13 000F  
                 _PORTBbits 000F81                   _TRISBbits 000F93                   _TRISCbits 000F94  
                _transmitir 7AD8                 _CCP1CONbits 000FBD                   _TXSTAbits 000FAC  
                ?_RAMPA_tic 0001        __size_of_usart_ini13 0028          decode@dato_a_decod 0010  
            __end_of_decode 7D70                 _BAUDCONbits 000FB8               __pidataCOMRAM 7ACD  
              ??_Send_4Disp 0014         start_initialization 7BAC                   _Send_Disp 7C5C  
               ?_tic_timer0 0001          __end_of_Send_4Disp 7DF0                    ??_decode 000F  
          __CFG_LPT1OSC$OFF 000000                 __pbssCOMRAM 0027                 ?_transmitir 0001  
      __end_of_timer1_ini13 7B1E                  ?_Send_Disp 000F                 ??_RAMPA_tic 0001  
         __size_of_informar 003A            ___lwdiv@dividend 0014               ??_rampa_ini13 000F  
                 __pintcode 2008                    ?___lwdiv 0014                    ?___lwmod 000F  
                 _assign_id 7AD0                 __smallconst 201C         __size_of_tic_timer0 001C  
          ___lwdiv@quotient 0018              __size_of_myISR 5E8E                   _pic_ini13 7B7C  
                  _LATAbits 000F89                    _LATBbits 000F8A                    _LATCbits 000F8B  
                  _LATDbits 000F8C                    _LATEbits 000F8D                    _LCD_tout 0027  
                  _PIE1bits 000F9D                    _PIR1bits 000F9E            __CFG_WDTPS$32768 000000  
          informar@longitud 0012         __size_of_transmitir 0010         __end_of_rampa_ini13 7B0C  
              _rampa_status 0034                  ?_assign_id 0001               ??_timer_ini13 000F  
            Send_4Disp@Cent 0011              Send_4Disp@Umil 0014                 _INTCON2bits 000FF1  
                ?_pic_ini13 0001                 ??_Send_Disp 0010                    __Hrparam 0000  
                  __Lrparam 0000                   informar@i 0013           _caracter_recibido 0032  
          __size_of___lwdiv 0052            __size_of___lwmod 0042             ___lwdiv@divisor 0016  
     __size_of_timer1_ini13 0012             ___lwdiv@counter 001A                    __ptext10 7C1A  
                  __ptext11 7CAC                    __ptext12 7D70                    __ptext13 7C5C  
                  __ptext15 7B38                    __ptext16 7AE8                    _bot_tout 0031  
             ??_usart_ini13 000F                    _led_tout 0029         __end_of_timer_ini13 7B38  
                  _informar 7BE0               __size_of_main 016A                ??_tic_timer0 0001  
                  _slave_id 003B                 _rampa_ini13 7AFA                    _mux_tout 0033  
                  main@cent 001D                _timer1_ini13 7B0C               Send_4Disp@Dec 0012  
             Send_4Disp@Uni 0013       __CFG_CPUDIV$OSC1_PLL2 000000                 ??_assign_id 000F  
                _INTCONbits 000FF2          __end_of_tic_timer0 7B54                 ??_pic_ini13 000F  
              ??_transmitir 000F                    intlevel2 0000                _tiempo_rampa 002B  
            transmitir@Dato 000F            ___lwmod@dividend 000F         __end_of_usart_ini13 7B7C  
        __end_of_transmitir 7AE8             ___lwmod@divisor 0011             ___lwmod@counter 0013  
               _timer_ini13 7B1E          __CFG_FOSC$HSPLL_HS 000000     main@backup_tiempo_rampa 001F  
