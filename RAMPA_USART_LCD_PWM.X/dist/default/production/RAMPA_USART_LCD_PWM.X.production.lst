

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Jun  9 23:57:34 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           	psect	idataCOMRAM
    34  007AD1                     __pidataCOMRAM:
    35                           	opt stack 0
    36                           
    37                           ;initializer for Send_4Disp@Nro_Disp
    38  007AD1  01                 	db	1
    39                           
    40                           ;initializer for _MEMDIG
    41  007AD2  01                 	db	1
    42                           
    43                           ;initializer for leds@i
    44  007AD3  01                 	db	1
    45                           
    46                           	psect	smallconst
    47  00201C                     __psmallconst:
    48                           	opt stack 0
    49  00201C  00                 	db	0
    50  00201D                     _broadcast_id:
    51                           	opt stack 0
    52  00201D  6D                 	db	109
    53  00201E                     __end_of_broadcast_id:
    54                           	opt stack 0
    55  0000                     _ADCON1	set	4033
    56  0000                     _BAUDCONbits	set	4024
    57  0000                     _CCP1CONbits	set	4029
    58  0000                     _CCPR1L	set	4030
    59  0000                     _CMCON	set	4020
    60  0000                     _INTCON2bits	set	4081
    61  0000                     _INTCONbits	set	4082
    62  0000                     _LATA	set	3977
    63  0000                     _LATAbits	set	3977
    64  0000                     _LATB	set	3978
    65  0000                     _LATBbits	set	3978
    66  0000                     _LATC	set	3979
    67  0000                     _LATCbits	set	3979
    68  0000                     _LATD	set	3980
    69  0000                     _LATDbits	set	3980
    70  0000                     _LATE	set	3981
    71  0000                     _LATEbits	set	3981
    72  0000                     _PIE1bits	set	3997
    73  0000                     _PIR1bits	set	3998
    74  0000                     _PORTBbits	set	3969
    75  0000                     _PR2	set	4043
    76  0000                     _RCREG	set	4014
    77  0000                     _RCSTAbits	set	4011
    78  0000                     _SPBRG	set	4015
    79  0000                     _SPBRGH	set	4016
    80  0000                     _T0CONbits	set	4053
    81  0000                     _T1CONbits	set	4045
    82  0000                     _T2CONbits	set	4042
    83  0000                     _TMR0H	set	4055
    84  0000                     _TMR0L	set	4054
    85  0000                     _TMR1H	set	4047
    86  0000                     _TMR1L	set	4046
    87  0000                     _TRISA	set	3986
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISBbits	set	3987
    90  0000                     _TRISCbits	set	3988
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISE	set	3990
    93  0000                     _TXREG	set	4013
    94  0000                     _TXSTAbits	set	4012
    95  0000                     _INT0IF	set	32657
    96  0000                     _RCIF	set	31989
    97  0000                     _TMR0IF	set	32658
    98  0000                     _TMR1IF	set	31984
    99  00201E  00                 	db	0	; dummy byte at the end
   100  0000                     
   101                           	psect	nvCOMRAM
   102  00003B                     __pnvCOMRAM:
   103                           	opt stack 0
   104  00003B                     _slave_id:
   105                           	opt stack 0
   106  00003B                     	ds	1
   107                           
   108                           ; #config settings
   109  0000                     
   110                           	psect	cinit
   111  007BB4                     __pcinit:
   112                           	opt stack 0
   113  007BB4                     start_initialization:
   114                           	opt stack 0
   115  007BB4                     __initialization:
   116                           	opt stack 0
   117                           
   118                           ; Clear objects allocated to COMRAM (17 bytes)
   119  007BB4  EE00  F027         	lfsr	0,__pbssCOMRAM
   120  007BB8  0E11               	movlw	17
   121  007BBA                     clear_0:
   122  007BBA  6AEE               	clrf	postinc0,c
   123  007BBC  06E8               	decf	wreg,f,c
   124  007BBE  E1FD               	bnz	clear_0
   125                           
   126                           ; Initialize objects allocated to COMRAM (3 bytes)
   127                           ; load TBLPTR registers with __pidataCOMRAM
   128  007BC0  0ED1               	movlw	low __pidataCOMRAM
   129  007BC2  6EF6               	movwf	tblptrl,c
   130  007BC4  0E7A               	movlw	high __pidataCOMRAM
   131  007BC6  6EF7               	movwf	tblptrh,c
   132  007BC8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   133  007BCA  6EF8               	movwf	tblptru,c
   134  007BCC  0009               	tblrd		*+	;fetch initializer
   135  007BCE  CFF5 F038          	movff	tablat,__pdataCOMRAM
   136  007BD2  0009               	tblrd		*+	;fetch initializer
   137  007BD4  CFF5 F039          	movff	tablat,__pdataCOMRAM+1
   138  007BD8  0009               	tblrd		*+	;fetch initializer
   139  007BDA  CFF5 F03A          	movff	tablat,__pdataCOMRAM+2
   140  007BDE                     end_of_initialization:
   141                           	opt stack 0
   142  007BDE                     __end_of__initialization:
   143                           	opt stack 0
   144  007BDE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   145  007BE0  6EF8               	movwf	tblptru,c
   146  007BE2  0100               	movlb	0
   147  007BE4  EF4F  F03F         	goto	_main	;jump to C main() function
   148                           tblptru	equ	0xFF8
   149                           tblptrh	equ	0xFF7
   150                           tblptrl	equ	0xFF6
   151                           tablat	equ	0xFF5
   152                           postinc0	equ	0xFEE
   153                           wreg	equ	0xFE8
   154                           
   155                           	psect	bssCOMRAM
   156  000027                     __pbssCOMRAM:
   157                           	opt stack 0
   158  000027                     _LCD_tout:
   159                           	opt stack 0
   160  000027                     	ds	2
   161  000029                     _led_tout:
   162                           	opt stack 0
   163  000029                     	ds	2
   164  00002B                     _tiempo_rampa:
   165                           	opt stack 0
   166  00002B                     	ds	2
   167  00002D                     _CENT:
   168                           	opt stack 0
   169  00002D                     	ds	1
   170  00002E                     _DEC:
   171                           	opt stack 0
   172  00002E                     	ds	1
   173  00002F                     _UMIL:
   174                           	opt stack 0
   175  00002F                     	ds	1
   176  000030                     _UNI:
   177                           	opt stack 0
   178  000030                     	ds	1
   179  000031                     _bot_tout:
   180                           	opt stack 0
   181  000031                     	ds	1
   182  000032                     _caracter_recibido:
   183                           	opt stack 0
   184  000032                     	ds	1
   185  000033                     _mux_tout:
   186                           	opt stack 0
   187  000033                     	ds	1
   188  000034                     _rampa_status:
   189                           	opt stack 0
   190  000034                     	ds	1
   191  000035                     decode@com_rec:
   192                           	opt stack 0
   193  000035                     	ds	1
   194  000036                     decode@est_rec:
   195                           	opt stack 0
   196  000036                     	ds	1
   197  000037                     mux_display@contdisp:
   198                           	opt stack 0
   199  000037                     	ds	1
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           
   207                           	psect	dataCOMRAM
   208  000038                     __pdataCOMRAM:
   209                           	opt stack 0
   210  000038                     Send_4Disp@Nro_Disp:
   211                           	opt stack 0
   212  000038                     	ds	1
   213  000039                     _MEMDIG:
   214                           	opt stack 0
   215  000039                     	ds	1
   216  00003A                     leds@i:
   217                           	opt stack 0
   218  00003A                     	ds	1
   219                           tblptru	equ	0xFF8
   220                           tblptrh	equ	0xFF7
   221                           tblptrl	equ	0xFF6
   222                           tablat	equ	0xFF5
   223                           postinc0	equ	0xFEE
   224                           wreg	equ	0xFE8
   225                           
   226                           	psect	cstackCOMRAM
   227  000001                     __pcstackCOMRAM:
   228                           	opt stack 0
   229  000001                     ??_myISR:
   230  000001                     
   231                           ; 1 bytes @ 0x0
   232  000001                     	ds	14
   233  00000F                     ?___lwmod:
   234                           	opt stack 0
   235  00000F                     Send_Disp@Dato:
   236                           	opt stack 0
   237  00000F                     assign_id@id:
   238                           	opt stack 0
   239  00000F                     decode@retorno:
   240                           	opt stack 0
   241  00000F                     transmitir@Dato:
   242                           	opt stack 0
   243  00000F                     ___lwmod@dividend:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0xE
   247  00000F                     	ds	1
   248  000010                     Send_Disp@NroDisp:
   249                           	opt stack 0
   250  000010                     decode@dato_a_decod:
   251                           	opt stack 0
   252  000010                     informar@dato:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0xF
   256  000010                     	ds	1
   257  000011                     Send_4Disp@Cent:
   258                           	opt stack 0
   259  000011                     ___lwmod@divisor:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x10
   263  000011                     	ds	1
   264  000012                     Send_4Disp@Dec:
   265                           	opt stack 0
   266  000012                     informar@longitud:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x11
   270  000012                     	ds	1
   271  000013                     Send_4Disp@Uni:
   272                           	opt stack 0
   273  000013                     informar@i:
   274                           	opt stack 0
   275  000013                     ___lwmod@counter:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x12
   279  000013                     	ds	1
   280  000014                     ?___lwdiv:
   281                           	opt stack 0
   282  000014                     Send_4Disp@Umil:
   283                           	opt stack 0
   284  000014                     ___lwdiv@dividend:
   285                           	opt stack 0
   286                           
   287                           ; 2 bytes @ 0x13
   288  000014                     	ds	2
   289  000016                     ___lwdiv@divisor:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x15
   293  000016                     	ds	2
   294  000018                     ___lwdiv@quotient:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x17
   298  000018                     	ds	2
   299  00001A                     ___lwdiv@counter:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x19
   303  00001A                     	ds	1
   304  00001B                     main@seg:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x1A
   308  00001B                     	ds	1
   309  00001C                     main@dec:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x1B
   313  00001C                     	ds	1
   314  00001D                     main@cent:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x1C
   318  00001D                     	ds	1
   319  00001E                     main@mil:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x1D
   323  00001E                     	ds	1
   324  00001F                     main@backup_tiempo_rampa:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x1E
   328  00001F                     	ds	2
   329  000021                     main@backup_ultimo_caracter:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x20
   333  000021                     	ds	1
   334  000022                     main@broadcast_flag:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x21
   338  000022                     	ds	1
   339  000023                     main@paquete:
   340                           	opt stack 0
   341                           
   342                           ; 4 bytes @ 0x22
   343  000023                     	ds	4
   344                           tblptru	equ	0xFF8
   345                           tblptrh	equ	0xFF7
   346                           tblptrl	equ	0xFF6
   347                           tablat	equ	0xFF5
   348                           postinc0	equ	0xFEE
   349                           wreg	equ	0xFE8
   350                           
   351 ;;
   352 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   353 ;;
   354 ;; *************** function _main *****************
   355 ;; Defined at:
   356 ;;		line 35 in file "main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;  paquete         4   34[COMRAM] unsigned char [4]
   361 ;;  backup_tiemp    2   30[COMRAM] unsigned int 
   362 ;;  broadcast_fl    1   33[COMRAM] unsigned char 
   363 ;;  backup_ultim    1   32[COMRAM] unsigned char 
   364 ;;  mil             1   29[COMRAM] unsigned char 
   365 ;;  cent            1   28[COMRAM] unsigned char 
   366 ;;  dec             1   27[COMRAM] unsigned char 
   367 ;;  seg             1   26[COMRAM] unsigned char 
   368 ;; Return value:  Size  Location     Type
   369 ;;		None               void
   370 ;; Registers used:
   371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   377 ;;      Params:         0       0       0       0       0       0       0       0       0
   378 ;;      Locals:        12       0       0       0       0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0       0       0       0       0
   380 ;;      Totals:        12       0       0       0       0       0       0       0       0
   381 ;;Total ram usage:       12 bytes
   382 ;; Hardware stack levels required when called:    4
   383 ;; This function calls:
   384 ;;		_Send_4Disp
   385 ;;		___lwdiv
   386 ;;		___lwmod
   387 ;;		_assign_id
   388 ;;		_decode
   389 ;;		_informar
   390 ;;		_pic_ini13
   391 ;;		_rampa_ini13
   392 ;;		_timer1_ini13
   393 ;;		_timer_ini13
   394 ;;		_usart_ini13
   395 ;; This function is called by:
   396 ;;		Startup code after reset
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text0
   401  007E9E                     __ptext0:
   402                           	opt stack 0
   403  007E9E                     _main:
   404                           	opt stack 27
   405                           
   406                           ;main.c: 36: unsigned char backup_ultimo_caracter;
   407                           ;main.c: 37: unsigned int backup_tiempo_rampa;
   408                           ;main.c: 38: char seg=0,dec=0,cent=0,mil=0;
   409                           
   410                           ;incstack = 0
   411  007E9E  0E00               	movlw	0
   412  007EA0  6E1B               	movwf	main@seg,c
   413  007EA2  0E00               	movlw	0
   414  007EA4  6E1C               	movwf	main@dec,c
   415  007EA6  0E00               	movlw	0
   416  007EA8  6E1D               	movwf	main@cent,c
   417  007EAA  0E00               	movlw	0
   418  007EAC  6E1E               	movwf	main@mil,c
   419                           
   420                           ;main.c: 39: char paquete[4];
   421                           ;main.c: 40: unsigned char broadcast_flag=0;
   422  007EAE  0E00               	movlw	0
   423  007EB0  6E22               	movwf	main@broadcast_flag,c
   424                           
   425                           ;main.c: 42: pic_ini13();
   426  007EB2  ECC2  F03D         	call	_pic_ini13	;wreg free
   427                           
   428                           ;main.c: 43: timer_ini13();
   429  007EB6  EC93  F03D         	call	_timer_ini13	;wreg free
   430                           
   431                           ;main.c: 45: timer1_ini13();
   432  007EBA  EC80  F03D         	call	_timer1_ini13	;wreg free
   433                           
   434                           ;main.c: 46: usart_ini13();
   435  007EBE  ECAE  F03D         	call	_usart_ini13	;wreg free
   436                           
   437                           ;main.c: 47: (INTCONbits.GIE = 1);
   438  007EC2  8EF2               	bsf	intcon,7,c	;volatile
   439                           
   440                           ;main.c: 49: assign_id('a');
   441  007EC4  0E61               	movlw	97
   442  007EC6  EC6A  F03D         	call	_assign_id
   443                           
   444                           ;main.c: 51: rampa_ini13();
   445  007ECA  EC77  F03D         	call	_rampa_ini13	;wreg free
   446  007ECE                     l1232:
   447                           
   448                           ;main.c: 54: if(caracter_recibido != backup_ultimo_caracter){
   449  007ECE  5032               	movf	_caracter_recibido,w,c
   450  007ED0  1821               	xorwf	main@backup_ultimo_caracter,w,c
   451  007ED2  B4D8               	btfsc	status,2,c
   452  007ED4  D03C               	goto	l1258
   453                           
   454                           ;main.c: 55: backup_ultimo_caracter=caracter_recibido;
   455  007ED6  C032  F021         	movff	_caracter_recibido,main@backup_ultimo_caracter
   456                           
   457                           ;main.c: 65: switch(decode(caracter_recibido)){
   458  007EDA  D021               	goto	l1256
   459  007EDC                     l1236:
   460                           
   461                           ;main.c: 69: broadcast_flag=0;
   462  007EDC  0E00               	movlw	0
   463  007EDE  D001               	goto	L1
   464  007EE0                     l1238:
   465                           
   466                           ;main.c: 72: broadcast_flag=1;
   467  007EE0  0E01               	movlw	1
   468  007EE2                     L1:
   469  007EE2  6E22               	movwf	main@broadcast_flag,c
   470                           
   471                           ;main.c: 73: }break;
   472  007EE4  D034               	goto	l1258
   473  007EE6                     l74:
   474                           
   475                           ;main.c: 75: LATDbits.LD2=1;
   476  007EE6  848C               	bsf	3980,2,c	;volatile
   477                           
   478                           ;main.c: 77: rampa_status=1;
   479  007EE8  0E01               	movlw	1
   480  007EEA  6E34               	movwf	_rampa_status,c
   481                           
   482                           ;main.c: 78: INTCONbits.INT0IF=0;
   483  007EEC  92F2               	bcf	intcon,1,c	;volatile
   484                           
   485                           ;main.c: 79: INTCONbits.INT0IE=1;
   486  007EEE  88F2               	bsf	intcon,4,c	;volatile
   487                           
   488                           ;main.c: 80: }break;
   489  007EF0  D02E               	goto	l1258
   490  007EF2                     l75:
   491                           
   492                           ;main.c: 82: LATDbits.LD2=0;
   493  007EF2  948C               	bcf	3980,2,c	;volatile
   494                           
   495                           ;main.c: 84: rampa_status=0;
   496  007EF4  0E00               	movlw	0
   497  007EF6  6E34               	movwf	_rampa_status,c
   498                           
   499                           ;main.c: 85: }break;
   500  007EF8  D02A               	goto	l1258
   501  007EFA                     l76:
   502                           
   503                           ;main.c: 87: if(!broadcast_flag){
   504  007EFA  6622               	tstfsz	main@broadcast_flag,c
   505  007EFC  D028               	goto	l1258
   506                           
   507                           ;main.c: 88: LATDbits.LD2=1;
   508  007EFE  848C               	bsf	3980,2,c	;volatile
   509                           
   510                           ;main.c: 90: informar(paquete,4);
   511  007F00  0E00               	movlw	high main@paquete
   512  007F02  6E11               	movwf	informar@dato+1,c
   513  007F04  0E23               	movlw	low main@paquete
   514  007F06  6E10               	movwf	informar@dato,c
   515  007F08  0E04               	movlw	4
   516  007F0A  6E12               	movwf	informar@longitud,c
   517  007F0C  ECF4  F03D         	call	_informar	;wreg free
   518  007F10  D01E               	goto	l1258
   519  007F12                     l78:
   520                           
   521                           ;main.c: 94: LATDbits.LD2=0;
   522  007F12  948C               	bcf	3980,2,c	;volatile
   523                           
   524                           ;main.c: 96: tiempo_rampa=0;
   525  007F14  0E00               	movlw	0
   526  007F16  6E2C               	movwf	_tiempo_rampa+1,c
   527  007F18  0E00               	movlw	0
   528  007F1A  6E2B               	movwf	_tiempo_rampa,c
   529                           
   530                           ;main.c: 97: }break;
   531  007F1C  D018               	goto	l1258
   532  007F1E                     l1256:
   533  007F1E  5032               	movf	_caracter_recibido,w,c
   534  007F20  EC83  F03E         	call	_decode
   535                           
   536                           ; Switch size 1, requested type "space"
   537                           ; Number of cases is 7, Range of values is 0 to 115
   538                           ; switch strategies available:
   539                           ; Name         Instructions Cycles
   540                           ; simple_byte           22    12 (average)
   541                           ;	Chosen strategy is simple_byte
   542  007F24  0A00               	xorlw	0	; case 0
   543  007F26  B4D8               	btfsc	status,2,c
   544  007F28  D012               	goto	l1258
   545  007F2A  0A62               	xorlw	98	; case 98
   546  007F2C  B4D8               	btfsc	status,2,c
   547  007F2E  D7D8               	goto	l1238
   548  007F30  0A06               	xorlw	6	; case 100
   549  007F32  B4D8               	btfsc	status,2,c
   550  007F34  D7DE               	goto	l75
   551  007F36  0A08               	xorlw	8	; case 108
   552  007F38  B4D8               	btfsc	status,2,c
   553  007F3A  D7DF               	goto	l76
   554  007F3C  0A1C               	xorlw	28	; case 112
   555  007F3E  B4D8               	btfsc	status,2,c
   556  007F40  D7CD               	goto	l1236
   557  007F42  0A02               	xorlw	2	; case 114
   558  007F44  B4D8               	btfsc	status,2,c
   559  007F46  D7E5               	goto	l78
   560  007F48  0A01               	xorlw	1	; case 115
   561  007F4A  B4D8               	btfsc	status,2,c
   562  007F4C  D7CC               	goto	l74
   563  007F4E                     l1258:
   564                           
   565                           ;main.c: 99: }
   566                           ;main.c: 102: if(tiempo_rampa !=backup_tiempo_rampa){
   567  007F4E  5020               	movf	main@backup_tiempo_rampa+1,w,c
   568  007F50  182C               	xorwf	_tiempo_rampa+1,w,c
   569  007F52  E102               	bnz	u245
   570  007F54  501F               	movf	main@backup_tiempo_rampa,w,c
   571  007F56  182B               	xorwf	_tiempo_rampa,w,c
   572  007F58                     u245:
   573  007F58  B4D8               	btfsc	status,2,c
   574  007F5A  D048               	goto	l79
   575                           
   576                           ;main.c: 104: paquete[0]=tiempo_rampa/1000;
   577  007F5C  C02B  F014         	movff	_tiempo_rampa,___lwdiv@dividend
   578  007F60  C02C  F015         	movff	_tiempo_rampa+1,___lwdiv@dividend+1
   579  007F64  0E03               	movlw	3
   580  007F66  6E17               	movwf	___lwdiv@divisor+1,c
   581  007F68  0EE8               	movlw	232
   582  007F6A  6E16               	movwf	___lwdiv@divisor,c
   583  007F6C  EC5A  F03E         	call	___lwdiv	;wreg free
   584  007F70  5014               	movf	?___lwdiv,w,c
   585  007F72  6E23               	movwf	main@paquete,c
   586                           
   587                           ;main.c: 105: paquete[1]=(tiempo_rampa%1000)/100;
   588  007F74  0E03               	movlw	3
   589  007F76  6E12               	movwf	___lwmod@divisor+1,c
   590  007F78  0EE8               	movlw	232
   591  007F7A  6E11               	movwf	___lwmod@divisor,c
   592  007F7C  C02B  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   593  007F80  C02C  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   594  007F84  EC11  F03E         	call	___lwmod	;wreg free
   595  007F88  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   596  007F8C  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   597  007F90  0E00               	movlw	0
   598  007F92  6E17               	movwf	___lwdiv@divisor+1,c
   599  007F94  0E64               	movlw	100
   600  007F96  6E16               	movwf	___lwdiv@divisor,c
   601  007F98  EC5A  F03E         	call	___lwdiv	;wreg free
   602  007F9C  5014               	movf	?___lwdiv,w,c
   603  007F9E  6E24               	movwf	main@paquete+1,c
   604                           
   605                           ;main.c: 106: paquete[2]=(tiempo_rampa%100)/10;
   606  007FA0  0E00               	movlw	0
   607  007FA2  6E12               	movwf	___lwmod@divisor+1,c
   608  007FA4  0E64               	movlw	100
   609  007FA6  6E11               	movwf	___lwmod@divisor,c
   610  007FA8  C02B  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   611  007FAC  C02C  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   612  007FB0  EC11  F03E         	call	___lwmod	;wreg free
   613  007FB4  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   614  007FB8  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   615  007FBC  0E00               	movlw	0
   616  007FBE  6E17               	movwf	___lwdiv@divisor+1,c
   617  007FC0  0E0A               	movlw	10
   618  007FC2  6E16               	movwf	___lwdiv@divisor,c
   619  007FC4  EC5A  F03E         	call	___lwdiv	;wreg free
   620  007FC8  5014               	movf	?___lwdiv,w,c
   621  007FCA  6E25               	movwf	main@paquete+2,c
   622                           
   623                           ;main.c: 107: paquete[3]=tiempo_rampa%10;
   624  007FCC  C02B  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   625  007FD0  C02C  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   626  007FD4  0E00               	movlw	0
   627  007FD6  6E12               	movwf	___lwmod@divisor+1,c
   628  007FD8  0E0A               	movlw	10
   629  007FDA  6E11               	movwf	___lwmod@divisor,c
   630  007FDC  EC11  F03E         	call	___lwmod	;wreg free
   631  007FE0  500F               	movf	?___lwmod,w,c
   632  007FE2  6E26               	movwf	main@paquete+3,c
   633                           
   634                           ;main.c: 109: backup_tiempo_rampa=tiempo_rampa;
   635  007FE4  C02B  F01F         	movff	_tiempo_rampa,main@backup_tiempo_rampa
   636  007FE8  C02C  F020         	movff	_tiempo_rampa+1,main@backup_tiempo_rampa+1
   637  007FEC                     l79:
   638                           
   639                           ;main.c: 110: }
   640                           ;main.c: 111: Send_4Disp(paquete[0],paquete[1],paquete[2],paquete[3]);
   641  007FEC  C024  F011         	movff	main@paquete+1,Send_4Disp@Cent
   642  007FF0  C025  F012         	movff	main@paquete+2,Send_4Disp@Dec
   643  007FF4  C026  F013         	movff	main@paquete+3,Send_4Disp@Uni
   644  007FF8  5023               	movf	main@paquete,w,c
   645  007FFA  ECBC  F03E         	call	_Send_4Disp
   646  007FFE  D767               	goto	l1232
   647  008000                     __end_of_main:
   648                           	opt stack 0
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           intcon	equ	0xFF2
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           status	equ	0xFD8
   657                           
   658 ;; *************** function _usart_ini13 *****************
   659 ;; Defined at:
   660 ;;		line 77 in file "Ap_ini.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;		None               void
   667 ;; Registers used:
   668 ;;		wreg, status,2
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   674 ;;      Params:         0       0       0       0       0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0       0       0       0       0
   677 ;;      Totals:         0       0       0       0       0       0       0       0       0
   678 ;;Total ram usage:        0 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; Hardware stack levels required when called:    2
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_main
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text1
   689  007B5C                     __ptext1:
   690                           	opt stack 0
   691  007B5C                     _usart_ini13:
   692                           	opt stack 28
   693                           
   694                           ;Ap_ini.c: 82: TXSTAbits.BRGH = 1;
   695                           
   696                           ;incstack = 0
   697  007B5C  84AC               	bsf	4012,2,c	;volatile
   698                           
   699                           ;Ap_ini.c: 83: BAUDCONbits.BRG16=1;
   700  007B5E  86B8               	bsf	4024,3,c	;volatile
   701                           
   702                           ;Ap_ini.c: 84: TXSTAbits.SYNC = 0;
   703  007B60  98AC               	bcf	4012,4,c	;volatile
   704                           
   705                           ;Ap_ini.c: 85: SPBRG = 0xE1;
   706  007B62  0EE1               	movlw	225
   707  007B64  6EAF               	movwf	4015,c	;volatile
   708                           
   709                           ;Ap_ini.c: 86: SPBRGH = 0x04;
   710  007B66  0E04               	movlw	4
   711  007B68  6EB0               	movwf	4016,c	;volatile
   712                           
   713                           ;Ap_ini.c: 87: RCSTAbits.SPEN = 1;
   714  007B6A  8EAB               	bsf	4011,7,c	;volatile
   715                           
   716                           ;Ap_ini.c: 90: TXSTAbits.TX9 = 0;
   717  007B6C  9CAC               	bcf	4012,6,c	;volatile
   718                           
   719                           ;Ap_ini.c: 91: TXSTAbits.TXEN = 1;
   720  007B6E  8AAC               	bsf	4012,5,c	;volatile
   721                           
   722                           ;Ap_ini.c: 94: (void) RCREG;
   723  007B70  50AE               	movf	4014,w,c	;volatile
   724                           
   725                           ;Ap_ini.c: 95: (void) RCREG;
   726  007B72  50AE               	movf	4014,w,c	;volatile
   727                           
   728                           ;Ap_ini.c: 96: (void) RCREG;
   729  007B74  50AE               	movf	4014,w,c	;volatile
   730                           
   731                           ;Ap_ini.c: 97: RCSTAbits.RX9 = 0 ;
   732  007B76  9CAB               	bcf	4011,6,c	;volatile
   733                           
   734                           ;Ap_ini.c: 98: PIE1bits.RCIE = 1;
   735  007B78  8A9D               	bsf	3997,5,c	;volatile
   736                           
   737                           ;Ap_ini.c: 99: RCSTAbits.CREN = 1;
   738  007B7A  88AB               	bsf	4011,4,c	;volatile
   739                           
   740                           ;Ap_ini.c: 100: INTCONbits.PEIE = 1;
   741  007B7C  8CF2               	bsf	intcon,6,c	;volatile
   742                           
   743                           ;Ap_ini.c: 102: TRISCbits.RC6 = 1;
   744  007B7E  8C94               	bsf	3988,6,c	;volatile
   745                           
   746                           ;Ap_ini.c: 103: TRISCbits.RC7 = 1;
   747  007B80  8E94               	bsf	3988,7,c	;volatile
   748  007B82  0012               	return	
   749  007B84                     __end_of_usart_ini13:
   750                           	opt stack 0
   751                           tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           intcon	equ	0xFF2
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           status	equ	0xFD8
   759                           
   760 ;; *************** function _timer_ini13 *****************
   761 ;; Defined at:
   762 ;;		line 37 in file "Ap_ini.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;		None               void
   769 ;; Registers used:
   770 ;;		wreg, status,2
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   776 ;;      Params:         0       0       0       0       0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0       0       0       0       0
   779 ;;      Totals:         0       0       0       0       0       0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; Hardware stack levels required when called:    2
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text2
   791  007B26                     __ptext2:
   792                           	opt stack 0
   793  007B26                     _timer_ini13:
   794                           	opt stack 28
   795                           
   796                           ;Ap_ini.c: 38: T0CONbits.TMR0ON = 0;
   797                           
   798                           ;incstack = 0
   799  007B26  9ED5               	bcf	4053,7,c	;volatile
   800                           
   801                           ;Ap_ini.c: 39: T0CONbits.T08BIT = 1;
   802  007B28  8CD5               	bsf	4053,6,c	;volatile
   803                           
   804                           ;Ap_ini.c: 40: T0CONbits.T0CS = 0;
   805  007B2A  9AD5               	bcf	4053,5,c	;volatile
   806                           
   807                           ;Ap_ini.c: 41: T0CONbits.PSA = 0;
   808  007B2C  96D5               	bcf	4053,3,c	;volatile
   809                           
   810                           ;Ap_ini.c: 42: T0CONbits.T0PS0 = 1;
   811  007B2E  80D5               	bsf	4053,0,c	;volatile
   812                           
   813                           ;Ap_ini.c: 43: T0CONbits.T0PS1 = 1;
   814  007B30  82D5               	bsf	4053,1,c	;volatile
   815                           
   816                           ;Ap_ini.c: 44: T0CONbits.T0PS2 = 1;
   817  007B32  84D5               	bsf	4053,2,c	;volatile
   818                           
   819                           ;Ap_ini.c: 45: TMR0L = 209;
   820  007B34  0ED1               	movlw	209
   821  007B36  6ED6               	movwf	4054,c	;volatile
   822                           
   823                           ;Ap_ini.c: 46: TMR0H = 0xFF;
   824  007B38  68D7               	setf	4055,c	;volatile
   825                           
   826                           ;Ap_ini.c: 47: INTCONbits.TMR0IE = 1;
   827  007B3A  8AF2               	bsf	intcon,5,c	;volatile
   828                           
   829                           ;Ap_ini.c: 48: T0CONbits.TMR0ON = 1;
   830  007B3C  8ED5               	bsf	4053,7,c	;volatile
   831  007B3E  0012               	return	
   832  007B40                     __end_of_timer_ini13:
   833                           	opt stack 0
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           intcon	equ	0xFF2
   839                           postinc0	equ	0xFEE
   840                           wreg	equ	0xFE8
   841                           status	equ	0xFD8
   842                           
   843 ;; *************** function _timer1_ini13 *****************
   844 ;; Defined at:
   845 ;;		line 51 in file "Ap_ini.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;		None               void
   852 ;; Registers used:
   853 ;;		wreg, status,2
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   859 ;;      Params:         0       0       0       0       0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    2
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text3
   874  007B00                     __ptext3:
   875                           	opt stack 0
   876  007B00                     _timer1_ini13:
   877                           	opt stack 28
   878                           
   879                           ;Ap_ini.c: 53: T1CONbits.T1CKPS0=0;
   880                           
   881                           ;incstack = 0
   882  007B00  98CD               	bcf	4045,4,c	;volatile
   883                           
   884                           ;Ap_ini.c: 54: T1CONbits.T1CKPS1=0;
   885  007B02  9ACD               	bcf	4045,5,c	;volatile
   886                           
   887                           ;Ap_ini.c: 55: TMR1L=145;
   888  007B04  0E91               	movlw	145
   889  007B06  6ECE               	movwf	4046,c	;volatile
   890                           
   891                           ;Ap_ini.c: 56: TMR1H=0xFF;
   892  007B08  68CF               	setf	4047,c	;volatile
   893                           
   894                           ;Ap_ini.c: 57: PIR1bits.TMR1IF=0;
   895  007B0A  909E               	bcf	3998,0,c	;volatile
   896                           
   897                           ;Ap_ini.c: 58: PIE1bits.TMR1IE=1;
   898  007B0C  809D               	bsf	3997,0,c	;volatile
   899                           
   900                           ;Ap_ini.c: 59: T1CONbits.TMR1ON = 1;
   901  007B0E  80CD               	bsf	4045,0,c	;volatile
   902  007B10  0012               	return	
   903  007B12                     __end_of_timer1_ini13:
   904                           	opt stack 0
   905                           tblptru	equ	0xFF8
   906                           tblptrh	equ	0xFF7
   907                           tblptrl	equ	0xFF6
   908                           tablat	equ	0xFF5
   909                           intcon	equ	0xFF2
   910                           postinc0	equ	0xFEE
   911                           wreg	equ	0xFE8
   912                           status	equ	0xFD8
   913                           
   914 ;; *************** function _rampa_ini13 *****************
   915 ;; Defined at:
   916 ;;		line 5 in file "rampa.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;		None               void
   923 ;; Registers used:
   924 ;;		wreg, status,2
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   930 ;;      Params:         0       0       0       0       0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0
   933 ;;      Totals:         0       0       0       0       0       0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    2
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text4
   945  007AEE                     __ptext4:
   946                           	opt stack 0
   947  007AEE                     _rampa_ini13:
   948                           	opt stack 28
   949                           
   950                           ;rampa.c: 6: rampa_status = 0;
   951                           
   952                           ;incstack = 0
   953  007AEE  0E00               	movlw	0
   954  007AF0  6E34               	movwf	_rampa_status,c
   955                           
   956                           ;rampa.c: 7: tiempo_rampa = 0;
   957  007AF2  0E00               	movlw	0
   958  007AF4  6E2C               	movwf	_tiempo_rampa+1,c
   959  007AF6  0E00               	movlw	0
   960  007AF8  6E2B               	movwf	_tiempo_rampa,c
   961                           
   962                           ;rampa.c: 8: TRISBbits.RB7 = 0;
   963  007AFA  9E93               	bcf	3987,7,c	;volatile
   964                           
   965                           ;rampa.c: 9: INTCON2bits.INTEDG0=0;
   966  007AFC  9CF1               	bcf	intcon2,6,c	;volatile
   967  007AFE  0012               	return	
   968  007B00                     __end_of_rampa_ini13:
   969                           	opt stack 0
   970                           tblptru	equ	0xFF8
   971                           tblptrh	equ	0xFF7
   972                           tblptrl	equ	0xFF6
   973                           tablat	equ	0xFF5
   974                           intcon	equ	0xFF2
   975                           intcon2	equ	0xFF1
   976                           postinc0	equ	0xFEE
   977                           wreg	equ	0xFE8
   978                           status	equ	0xFD8
   979                           
   980 ;; *************** function _pic_ini13 *****************
   981 ;; Defined at:
   982 ;;		line 9 in file "Ap_ini.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;		None               void
   989 ;; Registers used:
   990 ;;		wreg, status,2
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   996 ;;      Params:         0       0       0       0       0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0       0       0       0       0
   999 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1000 ;;Total ram usage:        0 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    2
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text5
  1011  007B84                     __ptext5:
  1012                           	opt stack 0
  1013  007B84                     _pic_ini13:
  1014                           	opt stack 28
  1015                           
  1016                           ;Ap_ini.c: 12: LATA = 0x00;
  1017                           
  1018                           ;incstack = 0
  1019  007B84  0E00               	movlw	0
  1020  007B86  6E89               	movwf	3977,c	;volatile
  1021                           
  1022                           ;Ap_ini.c: 13: LATB = 0x00;
  1023  007B88  0E00               	movlw	0
  1024  007B8A  6E8A               	movwf	3978,c	;volatile
  1025                           
  1026                           ;Ap_ini.c: 14: LATC = 0x00;
  1027  007B8C  0E00               	movlw	0
  1028  007B8E  6E8B               	movwf	3979,c	;volatile
  1029                           
  1030                           ;Ap_ini.c: 15: LATD = 0x00;
  1031  007B90  0E00               	movlw	0
  1032  007B92  6E8C               	movwf	3980,c	;volatile
  1033                           
  1034                           ;Ap_ini.c: 16: LATE = 0x00;
  1035  007B94  0E00               	movlw	0
  1036  007B96  6E8D               	movwf	3981,c	;volatile
  1037                           
  1038                           ;Ap_ini.c: 20: TRISD = 0xF0;
  1039  007B98  0EF0               	movlw	240
  1040  007B9A  6E95               	movwf	3989,c	;volatile
  1041                           
  1042                           ;Ap_ini.c: 21: TRISCbits.RC6 = 0;
  1043  007B9C  9C94               	bcf	3988,6,c	;volatile
  1044                           
  1045                           ;Ap_ini.c: 22: TRISCbits.RC7 = 0;
  1046  007B9E  9E94               	bcf	3988,7,c	;volatile
  1047                           
  1048                           ;Ap_ini.c: 26: CMCON = 0x07;
  1049  007BA0  0E07               	movlw	7
  1050  007BA2  6EB4               	movwf	4020,c	;volatile
  1051                           
  1052                           ;Ap_ini.c: 27: ADCON1 = 0x0F;
  1053  007BA4  0E0F               	movlw	15
  1054  007BA6  6EC1               	movwf	4033,c	;volatile
  1055                           
  1056                           ;Ap_ini.c: 28: TRISA = 0xC0;
  1057  007BA8  0EC0               	movlw	192
  1058  007BAA  6E92               	movwf	3986,c	;volatile
  1059                           
  1060                           ;Ap_ini.c: 29: TRISE = 0x00;
  1061  007BAC  0E00               	movlw	0
  1062  007BAE  6E96               	movwf	3990,c	;volatile
  1063                           
  1064                           ;Ap_ini.c: 33: TRISB = 0xFF;
  1065  007BB0  6893               	setf	3987,c	;volatile
  1066  007BB2  0012               	return	
  1067  007BB4                     __end_of_pic_ini13:
  1068                           	opt stack 0
  1069                           tblptru	equ	0xFF8
  1070                           tblptrh	equ	0xFF7
  1071                           tblptrl	equ	0xFF6
  1072                           tablat	equ	0xFF5
  1073                           intcon	equ	0xFF2
  1074                           intcon2	equ	0xFF1
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _informar *****************
  1080 ;; Defined at:
  1081 ;;		line 63 in file "rampa.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  dato            2   15[COMRAM] PTR unsigned char 
  1084 ;;		 -> main@paquete(4), 
  1085 ;;  longitud        1   17[COMRAM] unsigned char 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  i               1   18[COMRAM] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;		None               void
  1090 ;; Registers used:
  1091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1097 ;;      Params:         3       0       0       0       0       0       0       0       0
  1098 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1100 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1101 ;;Total ram usage:        4 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    3
  1104 ;; This function calls:
  1105 ;;		_transmitir
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text6
  1112  007BE8                     __ptext6:
  1113                           	opt stack 0
  1114  007BE8                     _informar:
  1115                           	opt stack 27
  1116                           
  1117                           ;rampa.c: 64: char i=0;
  1118                           
  1119                           ;incstack = 0
  1120  007BE8  0E00               	movlw	0
  1121  007BEA  6E13               	movwf	informar@i,c
  1122                           
  1123                           ;rampa.c: 65: transmitir(slave_id);
  1124  007BEC  503B               	movf	_slave_id,w,c
  1125  007BEE  EC89  F03D         	call	_transmitir
  1126                           
  1127                           ;rampa.c: 66: for(i=0;i<longitud;i++) transmitir(*(dato+i)+48);
  1128  007BF2  0E00               	movlw	0
  1129  007BF4  6E13               	movwf	informar@i,c
  1130  007BF6  D00D               	goto	l1086
  1131  007BF8                     l1082:
  1132  007BF8  5013               	movf	informar@i,w,c
  1133  007BFA  0D01               	mullw	1
  1134  007BFC  50F3               	movf	prodl,w,c
  1135  007BFE  2410               	addwf	informar@dato,w,c
  1136  007C00  6ED9               	movwf	fsr2l,c
  1137  007C02  50F4               	movf	prodh,w,c
  1138  007C04  2011               	addwfc	informar@dato+1,w,c
  1139  007C06  6EDA               	movwf	fsr2h,c
  1140  007C08  50DF               	movf	indf2,w,c
  1141  007C0A  0F30               	addlw	48
  1142  007C0C  EC89  F03D         	call	_transmitir
  1143  007C10  2A13               	incf	informar@i,f,c
  1144  007C12                     l1086:
  1145  007C12  5012               	movf	informar@longitud,w,c
  1146  007C14  5C13               	subwf	informar@i,w,c
  1147  007C16  A0D8               	btfss	status,0,c
  1148  007C18  D7EF               	goto	l1082
  1149                           
  1150                           ;rampa.c: 68: transmitir('f');
  1151  007C1A  0E66               	movlw	102
  1152  007C1C  EC89  F03D         	call	_transmitir
  1153  007C20  0012               	return	
  1154  007C22                     __end_of_informar:
  1155                           	opt stack 0
  1156                           tblptru	equ	0xFF8
  1157                           tblptrh	equ	0xFF7
  1158                           tblptrl	equ	0xFF6
  1159                           tablat	equ	0xFF5
  1160                           prodh	equ	0xFF4
  1161                           prodl	equ	0xFF3
  1162                           intcon	equ	0xFF2
  1163                           intcon2	equ	0xFF1
  1164                           postinc0	equ	0xFEE
  1165                           wreg	equ	0xFE8
  1166                           indf2	equ	0xFDF
  1167                           fsr2h	equ	0xFDA
  1168                           fsr2l	equ	0xFD9
  1169                           status	equ	0xFD8
  1170                           
  1171 ;; *************** function _transmitir *****************
  1172 ;; Defined at:
  1173 ;;		line 71 in file "rampa.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  Dato            1    wreg     unsigned char 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  Dato            1   14[COMRAM] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;		None               void
  1180 ;; Registers used:
  1181 ;;		wreg
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1187 ;;      Params:         0       0       0       0       0       0       0       0       0
  1188 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1190 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1191 ;;Total ram usage:        1 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    2
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_informar
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text7
  1202  007B12                     __ptext7:
  1203                           	opt stack 0
  1204  007B12                     _transmitir:
  1205                           	opt stack 27
  1206                           
  1207                           ;incstack = 0
  1208                           ;transmitir@Dato stored from wreg
  1209  007B12  6E0F               	movwf	transmitir@Dato,c
  1210                           
  1211                           ;rampa.c: 72: LATDbits.LD3=1;
  1212  007B14  868C               	bsf	3980,3,c	;volatile
  1213  007B16                     l317:
  1214  007B16  A2AC               	btfss	4012,1,c	;volatile
  1215  007B18  D7FE               	goto	l317
  1216                           
  1217                           ;rampa.c: 74: TXREG = Dato;
  1218  007B1A  C00F  FFAD         	movff	transmitir@Dato,4013	;volatile
  1219  007B1E                     l320:
  1220  007B1E  A2AC               	btfss	4012,1,c	;volatile
  1221  007B20  D7FE               	goto	l320
  1222                           
  1223                           ;rampa.c: 76: LATDbits.LD3=0;
  1224  007B22  968C               	bcf	3980,3,c	;volatile
  1225  007B24  0012               	return	
  1226  007B26                     __end_of_transmitir:
  1227                           	opt stack 0
  1228                           tblptru	equ	0xFF8
  1229                           tblptrh	equ	0xFF7
  1230                           tblptrl	equ	0xFF6
  1231                           tablat	equ	0xFF5
  1232                           prodh	equ	0xFF4
  1233                           prodl	equ	0xFF3
  1234                           intcon	equ	0xFF2
  1235                           intcon2	equ	0xFF1
  1236                           postinc0	equ	0xFEE
  1237                           wreg	equ	0xFE8
  1238                           indf2	equ	0xFDF
  1239                           fsr2h	equ	0xFDA
  1240                           fsr2l	equ	0xFD9
  1241                           status	equ	0xFD8
  1242                           
  1243 ;; *************** function _decode *****************
  1244 ;; Defined at:
  1245 ;;		line 19 in file "rampa.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  dato_a_decod    1    wreg     unsigned char 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  dato_a_decod    1   15[COMRAM] unsigned char 
  1250 ;;  retorno         1   14[COMRAM] unsigned char 
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      unsigned char 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1260 ;;      Params:         0       0       0       0       0       0       0       0       0
  1261 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1263 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1264 ;;Total ram usage:        2 bytes
  1265 ;; Hardware stack levels used:    1
  1266 ;; Hardware stack levels required when called:    2
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_main
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text8
  1275  007D06                     __ptext8:
  1276                           	opt stack 0
  1277  007D06                     _decode:
  1278                           	opt stack 28
  1279                           
  1280                           ;incstack = 0
  1281                           ;decode@dato_a_decod stored from wreg
  1282  007D06  6E10               	movwf	decode@dato_a_decod,c
  1283                           
  1284                           ;rampa.c: 23: static unsigned char est_rec=address;
  1285                           ;rampa.c: 25: static char com_rec;
  1286                           ;rampa.c: 26: unsigned char retorno;
  1287                           ;rampa.c: 28: switch(est_rec){
  1288  007D08  D02B               	goto	l1126
  1289  007D0A                     l1092:
  1290                           
  1291                           ;rampa.c: 30: if(dato_a_decod==slave_id ){
  1292  007D0A  503B               	movf	_slave_id,w,c
  1293  007D0C  6210               	cpfseq	decode@dato_a_decod,c
  1294  007D0E  D005               	goto	l1100
  1295                           
  1296                           ;rampa.c: 31: est_rec++;
  1297  007D10  2A36               	incf	decode@est_rec,f,c
  1298                           
  1299                           ;rampa.c: 32: dato_a_decod = 0;
  1300  007D12  0E00               	movlw	0
  1301  007D14  6E10               	movwf	decode@dato_a_decod,c
  1302                           
  1303                           ;rampa.c: 33: retorno='p';
  1304  007D16  0E70               	movlw	112
  1305  007D18  D016               	goto	L3
  1306  007D1A                     l1100:
  1307                           
  1308                           ;rampa.c: 35: else if(dato_a_decod == broadcast_id){
  1309  007D1A  0E1D               	movlw	low _broadcast_id
  1310  007D1C  6EF6               	movwf	tblptrl,c
  1311  007D1E                     	if	1	;There is more than 1 active tblptr byte
  1312  007D1E  0E20               	movlw	high _broadcast_id
  1313  007D20  6EF7               	movwf	tblptrh,c
  1314  007D22                     	endif
  1315  007D22                     	if	0	;There are less than 3 active tblptr bytes
  1316  007D22                     	endif
  1317  007D22  0008               	tblrd		*
  1318  007D24  50F5               	movf	tablat,w,c
  1319  007D26  6210               	cpfseq	decode@dato_a_decod,c
  1320  007D28  D025               	goto	l1128
  1321                           
  1322                           ;rampa.c: 36: est_rec++;
  1323  007D2A  2A36               	incf	decode@est_rec,f,c
  1324                           
  1325                           ;rampa.c: 37: dato_a_decod = 0;
  1326  007D2C  0E00               	movlw	0
  1327  007D2E  6E10               	movwf	decode@dato_a_decod,c
  1328                           
  1329                           ;rampa.c: 38: retorno='b';
  1330  007D30  0E62               	movlw	98
  1331  007D32  D009               	goto	L3
  1332  007D34                     l1108:
  1333                           
  1334                           ;rampa.c: 43: if(dato_a_decod){
  1335  007D34  5010               	movf	decode@dato_a_decod,w,c
  1336  007D36  B4D8               	btfsc	status,2,c
  1337  007D38  D01D               	goto	l1128
  1338                           
  1339                           ;rampa.c: 44: com_rec=dato_a_decod;
  1340  007D3A  C010  F035         	movff	decode@dato_a_decod,decode@com_rec
  1341                           
  1342                           ;rampa.c: 45: est_rec++;
  1343  007D3E  2A36               	incf	decode@est_rec,f,c
  1344                           
  1345                           ;rampa.c: 46: dato_a_decod = 0;
  1346  007D40  0E00               	movlw	0
  1347  007D42  6E10               	movwf	decode@dato_a_decod,c
  1348                           
  1349                           ;rampa.c: 47: retorno=0;
  1350  007D44  0E00               	movlw	0
  1351  007D46                     L3:
  1352  007D46  6E0F               	movwf	decode@retorno,c
  1353  007D48  D015               	goto	l1128
  1354  007D4A                     l1118:
  1355                           
  1356                           ;rampa.c: 53: if(dato_a_decod=='f'){
  1357  007D4A  5010               	movf	decode@dato_a_decod,w,c
  1358  007D4C  0A66               	xorlw	102
  1359  007D4E  A4D8               	btfss	status,2,c
  1360  007D50  D011               	goto	l1128
  1361                           
  1362                           ;rampa.c: 54: est_rec=address;
  1363  007D52  0E00               	movlw	0
  1364  007D54  6E36               	movwf	decode@est_rec,c
  1365                           
  1366                           ;rampa.c: 55: retorno = com_rec;
  1367  007D56  C035  F00F         	movff	decode@com_rec,decode@retorno
  1368                           
  1369                           ;rampa.c: 56: com_rec=0;
  1370  007D5A  0E00               	movlw	0
  1371  007D5C  6E35               	movwf	decode@com_rec,c
  1372  007D5E  D00A               	goto	l1128
  1373  007D60                     l1126:
  1374  007D60  5036               	movf	decode@est_rec,w,c
  1375                           
  1376                           ; Switch size 1, requested type "space"
  1377                           ; Number of cases is 3, Range of values is 0 to 2
  1378                           ; switch strategies available:
  1379                           ; Name         Instructions Cycles
  1380                           ; simple_byte           10     6 (average)
  1381                           ;	Chosen strategy is simple_byte
  1382  007D62  0A00               	xorlw	0	; case 0
  1383  007D64  B4D8               	btfsc	status,2,c
  1384  007D66  D7D1               	goto	l1092
  1385  007D68  0A01               	xorlw	1	; case 1
  1386  007D6A  B4D8               	btfsc	status,2,c
  1387  007D6C  D7E3               	goto	l1108
  1388  007D6E  0A03               	xorlw	3	; case 2
  1389  007D70  B4D8               	btfsc	status,2,c
  1390  007D72  D7EB               	goto	l1118
  1391  007D74                     l1128:
  1392                           
  1393                           ;rampa.c: 61: return retorno;
  1394  007D74  500F               	movf	decode@retorno,w,c
  1395  007D76  0012               	return	
  1396  007D78                     __end_of_decode:
  1397                           	opt stack 0
  1398                           tblptru	equ	0xFF8
  1399                           tblptrh	equ	0xFF7
  1400                           tblptrl	equ	0xFF6
  1401                           tablat	equ	0xFF5
  1402                           prodh	equ	0xFF4
  1403                           prodl	equ	0xFF3
  1404                           intcon	equ	0xFF2
  1405                           intcon2	equ	0xFF1
  1406                           postinc0	equ	0xFEE
  1407                           wreg	equ	0xFE8
  1408                           indf2	equ	0xFDF
  1409                           fsr2h	equ	0xFDA
  1410                           fsr2l	equ	0xFD9
  1411                           status	equ	0xFD8
  1412                           
  1413 ;; *************** function _assign_id *****************
  1414 ;; Defined at:
  1415 ;;		line 12 in file "rampa.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  id              1    wreg     unsigned char 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  id              1   14[COMRAM] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;		None               void
  1422 ;; Registers used:
  1423 ;;		wreg
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1429 ;;      Params:         0       0       0       0       0       0       0       0       0
  1430 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1432 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1433 ;;Total ram usage:        1 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    2
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text9
  1444  007AD4                     __ptext9:
  1445                           	opt stack 0
  1446  007AD4                     _assign_id:
  1447                           	opt stack 28
  1448                           
  1449                           ;incstack = 0
  1450                           ;assign_id@id stored from wreg
  1451  007AD4  6E0F               	movwf	assign_id@id,c
  1452                           
  1453                           ;rampa.c: 13: slave_id=id;
  1454  007AD6  C00F  F03B         	movff	assign_id@id,_slave_id
  1455  007ADA  0012               	return	
  1456  007ADC                     __end_of_assign_id:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           prodh	equ	0xFF4
  1463                           prodl	equ	0xFF3
  1464                           intcon	equ	0xFF2
  1465                           intcon2	equ	0xFF1
  1466                           postinc0	equ	0xFEE
  1467                           wreg	equ	0xFE8
  1468                           indf2	equ	0xFDF
  1469                           fsr2h	equ	0xFDA
  1470                           fsr2l	equ	0xFD9
  1471                           status	equ	0xFD8
  1472                           
  1473 ;; *************** function ___lwmod *****************
  1474 ;; Defined at:
  1475 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/lwmod.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  dividend        2   14[COMRAM] unsigned int 
  1478 ;;  divisor         2   16[COMRAM] unsigned int 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  counter         1   18[COMRAM] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  2   14[COMRAM] unsigned int 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1490 ;;      Params:         4       0       0       0       0       0       0       0       0
  1491 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1493 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1494 ;;Total ram usage:        5 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    2
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text10
  1505  007C22                     __ptext10:
  1506                           	opt stack 0
  1507  007C22                     ___lwmod:
  1508                           	opt stack 28
  1509                           
  1510                           ;incstack = 0
  1511  007C22  5012               	movf	___lwmod@divisor+1,w,c
  1512  007C24  1011               	iorwf	___lwmod@divisor,w,c
  1513  007C26  B4D8               	btfsc	status,2,c
  1514  007C28  D018               	goto	l923
  1515  007C2A  0E01               	movlw	1
  1516  007C2C  6E13               	movwf	___lwmod@counter,c
  1517  007C2E  D004               	goto	l1206
  1518  007C30                     l1204:
  1519  007C30  90D8               	bcf	status,0,c
  1520  007C32  3611               	rlcf	___lwmod@divisor,f,c
  1521  007C34  3612               	rlcf	___lwmod@divisor+1,f,c
  1522  007C36  2A13               	incf	___lwmod@counter,f,c
  1523  007C38                     l1206:
  1524  007C38  AE12               	btfss	___lwmod@divisor+1,7,c
  1525  007C3A  D7FA               	goto	l1204
  1526  007C3C                     l1208:
  1527  007C3C  5011               	movf	___lwmod@divisor,w,c
  1528  007C3E  5C0F               	subwf	___lwmod@dividend,w,c
  1529  007C40  5012               	movf	___lwmod@divisor+1,w,c
  1530  007C42  5810               	subwfb	___lwmod@dividend+1,w,c
  1531  007C44  A0D8               	btfss	status,0,c
  1532  007C46  D004               	goto	l1212
  1533  007C48  5011               	movf	___lwmod@divisor,w,c
  1534  007C4A  5E0F               	subwf	___lwmod@dividend,f,c
  1535  007C4C  5012               	movf	___lwmod@divisor+1,w,c
  1536  007C4E  5A10               	subwfb	___lwmod@dividend+1,f,c
  1537  007C50                     l1212:
  1538  007C50  90D8               	bcf	status,0,c
  1539  007C52  3212               	rrcf	___lwmod@divisor+1,f,c
  1540  007C54  3211               	rrcf	___lwmod@divisor,f,c
  1541  007C56  2E13               	decfsz	___lwmod@counter,f,c
  1542  007C58  D7F1               	goto	l1208
  1543  007C5A                     l923:
  1544  007C5A  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  1545  007C5E  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  1546  007C62  0012               	return	
  1547  007C64                     __end_of___lwmod:
  1548                           	opt stack 0
  1549                           tblptru	equ	0xFF8
  1550                           tblptrh	equ	0xFF7
  1551                           tblptrl	equ	0xFF6
  1552                           tablat	equ	0xFF5
  1553                           prodh	equ	0xFF4
  1554                           prodl	equ	0xFF3
  1555                           intcon	equ	0xFF2
  1556                           intcon2	equ	0xFF1
  1557                           postinc0	equ	0xFEE
  1558                           wreg	equ	0xFE8
  1559                           indf2	equ	0xFDF
  1560                           fsr2h	equ	0xFDA
  1561                           fsr2l	equ	0xFD9
  1562                           status	equ	0xFD8
  1563                           
  1564 ;; *************** function ___lwdiv *****************
  1565 ;; Defined at:
  1566 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/lwdiv.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  dividend        2   19[COMRAM] unsigned int 
  1569 ;;  divisor         2   21[COMRAM] unsigned int 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  quotient        2   23[COMRAM] unsigned int 
  1572 ;;  counter         1   25[COMRAM] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  2   19[COMRAM] unsigned int 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1582 ;;      Params:         4       0       0       0       0       0       0       0       0
  1583 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1585 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1586 ;;Total ram usage:        7 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    2
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text11
  1597  007CB4                     __ptext11:
  1598                           	opt stack 0
  1599  007CB4                     ___lwdiv:
  1600                           	opt stack 28
  1601                           
  1602                           ;incstack = 0
  1603  007CB4  0E00               	movlw	0
  1604  007CB6  6E19               	movwf	___lwdiv@quotient+1,c
  1605  007CB8  0E00               	movlw	0
  1606  007CBA  6E18               	movwf	___lwdiv@quotient,c
  1607  007CBC  5017               	movf	___lwdiv@divisor+1,w,c
  1608  007CBE  1016               	iorwf	___lwdiv@divisor,w,c
  1609  007CC0  B4D8               	btfsc	status,2,c
  1610  007CC2  D01C               	goto	l913
  1611  007CC4  0E01               	movlw	1
  1612  007CC6  6E1A               	movwf	___lwdiv@counter,c
  1613  007CC8  D004               	goto	l1186
  1614  007CCA                     l1184:
  1615  007CCA  90D8               	bcf	status,0,c
  1616  007CCC  3616               	rlcf	___lwdiv@divisor,f,c
  1617  007CCE  3617               	rlcf	___lwdiv@divisor+1,f,c
  1618  007CD0  2A1A               	incf	___lwdiv@counter,f,c
  1619  007CD2                     l1186:
  1620  007CD2  AE17               	btfss	___lwdiv@divisor+1,7,c
  1621  007CD4  D7FA               	goto	l1184
  1622  007CD6                     l1188:
  1623  007CD6  90D8               	bcf	status,0,c
  1624  007CD8  3618               	rlcf	___lwdiv@quotient,f,c
  1625  007CDA  3619               	rlcf	___lwdiv@quotient+1,f,c
  1626  007CDC  5016               	movf	___lwdiv@divisor,w,c
  1627  007CDE  5C14               	subwf	___lwdiv@dividend,w,c
  1628  007CE0  5017               	movf	___lwdiv@divisor+1,w,c
  1629  007CE2  5815               	subwfb	___lwdiv@dividend+1,w,c
  1630  007CE4  A0D8               	btfss	status,0,c
  1631  007CE6  D005               	goto	l1196
  1632  007CE8  5016               	movf	___lwdiv@divisor,w,c
  1633  007CEA  5E14               	subwf	___lwdiv@dividend,f,c
  1634  007CEC  5017               	movf	___lwdiv@divisor+1,w,c
  1635  007CEE  5A15               	subwfb	___lwdiv@dividend+1,f,c
  1636  007CF0  8018               	bsf	___lwdiv@quotient,0,c
  1637  007CF2                     l1196:
  1638  007CF2  90D8               	bcf	status,0,c
  1639  007CF4  3217               	rrcf	___lwdiv@divisor+1,f,c
  1640  007CF6  3216               	rrcf	___lwdiv@divisor,f,c
  1641  007CF8  2E1A               	decfsz	___lwdiv@counter,f,c
  1642  007CFA  D7ED               	goto	l1188
  1643  007CFC                     l913:
  1644  007CFC  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  1645  007D00  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1646  007D04  0012               	return	
  1647  007D06                     __end_of___lwdiv:
  1648                           	opt stack 0
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           prodh	equ	0xFF4
  1654                           prodl	equ	0xFF3
  1655                           intcon	equ	0xFF2
  1656                           intcon2	equ	0xFF1
  1657                           postinc0	equ	0xFEE
  1658                           wreg	equ	0xFE8
  1659                           indf2	equ	0xFDF
  1660                           fsr2h	equ	0xFDA
  1661                           fsr2l	equ	0xFD9
  1662                           status	equ	0xFD8
  1663                           
  1664 ;; *************** function _Send_4Disp *****************
  1665 ;; Defined at:
  1666 ;;		line 74 in file "Lemos.C"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  Umil            1    wreg     unsigned char 
  1669 ;;  Cent            1   16[COMRAM] unsigned char 
  1670 ;;  Dec             1   17[COMRAM] unsigned char 
  1671 ;;  Uni             1   18[COMRAM] unsigned char 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  Umil            1   19[COMRAM] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1683 ;;      Params:         3       0       0       0       0       0       0       0       0
  1684 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1686 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1687 ;;Total ram usage:        4 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    3
  1690 ;; This function calls:
  1691 ;;		_Send_Disp
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text12
  1698  007D78                     __ptext12:
  1699                           	opt stack 0
  1700  007D78                     _Send_4Disp:
  1701                           	opt stack 27
  1702                           
  1703                           ;incstack = 0
  1704                           ;Send_4Disp@Umil stored from wreg
  1705  007D78  6E14               	movwf	Send_4Disp@Umil,c
  1706                           
  1707                           ;Lemos.C: 76: static unsigned char Nro_Disp=1;
  1708                           ;Lemos.C: 78: switch(Nro_Disp){
  1709  007D7A  D02F               	goto	l1160
  1710  007D7C                     l220:
  1711                           
  1712                           ;Lemos.C: 80: if(!mux_tout){
  1713  007D7C  6633               	tstfsz	_mux_tout,c
  1714  007D7E  D03B               	goto	l230
  1715                           
  1716                           ;Lemos.C: 81: Send_Disp(1,Umil);
  1717  007D80  C014  F00F         	movff	Send_4Disp@Umil,Send_Disp@Dato
  1718  007D84  0E01               	movlw	1
  1719  007D86  EC32  F03E         	call	_Send_Disp
  1720                           
  1721                           ;Lemos.C: 82: mux_tout = 4;;
  1722  007D8A  0E04               	movlw	4
  1723  007D8C  6E33               	movwf	_mux_tout,c
  1724                           
  1725                           ;Lemos.C: 83: Nro_Disp = 2;
  1726  007D8E  0E02               	movlw	2
  1727  007D90  D01E               	goto	L6
  1728  007D92                     l223:
  1729                           
  1730                           ;Lemos.C: 88: if(!mux_tout){
  1731  007D92  6633               	tstfsz	_mux_tout,c
  1732  007D94  D030               	goto	l230
  1733                           
  1734                           ;Lemos.C: 89: Send_Disp(2,Cent);
  1735  007D96  C011  F00F         	movff	Send_4Disp@Cent,Send_Disp@Dato
  1736  007D9A  0E02               	movlw	2
  1737  007D9C  EC32  F03E         	call	_Send_Disp
  1738                           
  1739                           ;Lemos.C: 90: mux_tout = 4;;
  1740  007DA0  0E04               	movlw	4
  1741  007DA2  6E33               	movwf	_mux_tout,c
  1742                           
  1743                           ;Lemos.C: 91: Nro_Disp = 3;
  1744  007DA4  0E03               	movlw	3
  1745  007DA6  D013               	goto	L6
  1746  007DA8                     l225:
  1747                           
  1748                           ;Lemos.C: 96: if(!mux_tout){
  1749  007DA8  6633               	tstfsz	_mux_tout,c
  1750  007DAA  D025               	goto	l230
  1751                           
  1752                           ;Lemos.C: 97: Send_Disp(3,Dec);
  1753  007DAC  C012  F00F         	movff	Send_4Disp@Dec,Send_Disp@Dato
  1754  007DB0  0E03               	movlw	3
  1755  007DB2  EC32  F03E         	call	_Send_Disp
  1756                           
  1757                           ;Lemos.C: 98: mux_tout = 4;;
  1758  007DB6  0E04               	movlw	4
  1759  007DB8  6E33               	movwf	_mux_tout,c
  1760                           
  1761                           ;Lemos.C: 99: Nro_Disp = 4;
  1762  007DBA  0E04               	movlw	4
  1763  007DBC  D008               	goto	L6
  1764  007DBE                     l227:
  1765                           
  1766                           ;Lemos.C: 104: if(!mux_tout){
  1767  007DBE  6633               	tstfsz	_mux_tout,c
  1768  007DC0  D01A               	goto	l230
  1769                           
  1770                           ;Lemos.C: 105: Send_Disp(4,Uni);
  1771  007DC2  C013  F00F         	movff	Send_4Disp@Uni,Send_Disp@Dato
  1772  007DC6  0E04               	movlw	4
  1773  007DC8  EC32  F03E         	call	_Send_Disp
  1774  007DCC  D002               	goto	l1158
  1775  007DCE                     L6:
  1776  007DCE  6E38               	movwf	Send_4Disp@Nro_Disp,c
  1777  007DD0  D012               	goto	l230
  1778  007DD2                     l1158:
  1779                           
  1780                           ;Lemos.C: 112: mux_tout = 4;;
  1781  007DD2  0E04               	movlw	4
  1782  007DD4  6E33               	movwf	_mux_tout,c
  1783                           
  1784                           ;Lemos.C: 113: Nro_Disp = 1;
  1785  007DD6  0E01               	movlw	1
  1786  007DD8  D7FA               	goto	L6
  1787  007DDA                     l1160:
  1788  007DDA  5038               	movf	Send_4Disp@Nro_Disp,w,c
  1789                           
  1790                           ; Switch size 1, requested type "space"
  1791                           ; Number of cases is 4, Range of values is 1 to 4
  1792                           ; switch strategies available:
  1793                           ; Name         Instructions Cycles
  1794                           ; simple_byte           13     7 (average)
  1795                           ;	Chosen strategy is simple_byte
  1796  007DDC  0A01               	xorlw	1	; case 1
  1797  007DDE  B4D8               	btfsc	status,2,c
  1798  007DE0  D7CD               	goto	l220
  1799  007DE2  0A03               	xorlw	3	; case 2
  1800  007DE4  B4D8               	btfsc	status,2,c
  1801  007DE6  D7D5               	goto	l223
  1802  007DE8  0A01               	xorlw	1	; case 3
  1803  007DEA  B4D8               	btfsc	status,2,c
  1804  007DEC  D7DD               	goto	l225
  1805  007DEE  0A07               	xorlw	7	; case 4
  1806  007DF0  B4D8               	btfsc	status,2,c
  1807  007DF2  D7E5               	goto	l227
  1808  007DF4  D7EE               	goto	l1158
  1809  007DF6                     l230:
  1810  007DF6  0012               	return	
  1811  007DF8                     __end_of_Send_4Disp:
  1812                           	opt stack 0
  1813                           tblptru	equ	0xFF8
  1814                           tblptrh	equ	0xFF7
  1815                           tblptrl	equ	0xFF6
  1816                           tablat	equ	0xFF5
  1817                           prodh	equ	0xFF4
  1818                           prodl	equ	0xFF3
  1819                           intcon	equ	0xFF2
  1820                           intcon2	equ	0xFF1
  1821                           postinc0	equ	0xFEE
  1822                           wreg	equ	0xFE8
  1823                           indf2	equ	0xFDF
  1824                           fsr2h	equ	0xFDA
  1825                           fsr2l	equ	0xFD9
  1826                           status	equ	0xFD8
  1827                           
  1828 ;; *************** function _Send_Disp *****************
  1829 ;; Defined at:
  1830 ;;		line 43 in file "Lemos.C"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  NroDisp         1    wreg     unsigned char 
  1833 ;;  Dato            1   14[COMRAM] unsigned char 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  NroDisp         1   15[COMRAM] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;		None               void
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1845 ;;      Params:         1       0       0       0       0       0       0       0       0
  1846 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1848 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1849 ;;Total ram usage:        2 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    2
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_Send_4Disp
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text13
  1860  007C64                     __ptext13:
  1861                           	opt stack 0
  1862  007C64                     _Send_Disp:
  1863                           	opt stack 27
  1864                           
  1865                           ;incstack = 0
  1866                           ;Send_Disp@NroDisp stored from wreg
  1867  007C64  6E10               	movwf	Send_Disp@NroDisp,c
  1868                           
  1869                           ;Lemos.C: 45: LATA = 0;
  1870  007C66  0E00               	movlw	0
  1871  007C68  6E89               	movwf	3977,c	;volatile
  1872                           
  1873                           ;Lemos.C: 47: LATAbits.LA4 = 0;
  1874  007C6A  9889               	bcf	3977,4,c	;volatile
  1875                           
  1876                           ;Lemos.C: 48: LATAbits.LA5 = 0;
  1877  007C6C  9A89               	bcf	3977,5,c	;volatile
  1878                           
  1879                           ;Lemos.C: 49: LATEbits.LATE0 = 0;
  1880  007C6E  908D               	bcf	3981,0,c	;volatile
  1881                           
  1882                           ;Lemos.C: 50: LATEbits.LATE1 = 0;
  1883  007C70  928D               	bcf	3981,1,c	;volatile
  1884                           
  1885                           ;Lemos.C: 52: switch(NroDisp){
  1886  007C72  D008               	goto	l1002
  1887  007C74                     l210:
  1888                           
  1889                           ;Lemos.C: 57: LATAbits.LA5 = 1;
  1890  007C74  8A89               	bsf	3977,5,c	;volatile
  1891                           
  1892                           ;Lemos.C: 58: }break;
  1893  007C76  D014               	goto	l1004
  1894  007C78                     l211:
  1895                           
  1896                           ;Lemos.C: 60: LATEbits.LATE0 = 1;
  1897  007C78  808D               	bsf	3981,0,c	;volatile
  1898                           
  1899                           ;Lemos.C: 61: }break;
  1900  007C7A  D012               	goto	l1004
  1901  007C7C                     l212:
  1902                           
  1903                           ;Lemos.C: 63: LATEbits.LATE1 = 1;
  1904  007C7C  828D               	bsf	3981,1,c	;volatile
  1905                           
  1906                           ;Lemos.C: 64: }break;
  1907  007C7E  D010               	goto	l1004
  1908  007C80                     l213:
  1909                           
  1910                           ;Lemos.C: 66: LATAbits.LA4 = 1;
  1911  007C80  8889               	bsf	3977,4,c	;volatile
  1912                           
  1913                           ;Lemos.C: 67: }break;
  1914  007C82  D00E               	goto	l1004
  1915  007C84                     l1002:
  1916  007C84  5010               	movf	Send_Disp@NroDisp,w,c
  1917                           
  1918                           ; Switch size 1, requested type "space"
  1919                           ; Number of cases is 4, Range of values is 1 to 4
  1920                           ; switch strategies available:
  1921                           ; Name         Instructions Cycles
  1922                           ; simple_byte           13     7 (average)
  1923                           ;	Chosen strategy is simple_byte
  1924  007C86  0A01               	xorlw	1	; case 1
  1925  007C88  B4D8               	btfsc	status,2,c
  1926  007C8A  D7FA               	goto	l213
  1927  007C8C  0A03               	xorlw	3	; case 2
  1928  007C8E  B4D8               	btfsc	status,2,c
  1929  007C90  D7F1               	goto	l210
  1930  007C92  0A01               	xorlw	1	; case 3
  1931  007C94  B4D8               	btfsc	status,2,c
  1932  007C96  D7F0               	goto	l211
  1933  007C98  0A07               	xorlw	7	; case 4
  1934  007C9A  B4D8               	btfsc	status,2,c
  1935  007C9C  D7EF               	goto	l212
  1936  007C9E  D7F0               	goto	l213
  1937  007CA0                     l1004:
  1938                           
  1939                           ;Lemos.C: 69: Dato = Dato & 0x0F;
  1940  007CA0  500F               	movf	Send_Disp@Dato,w,c
  1941  007CA2  0B0F               	andlw	15
  1942  007CA4  6E0F               	movwf	Send_Disp@Dato,c
  1943                           
  1944                           ;Lemos.C: 70: LATA = LATA & 0xF0;
  1945  007CA6  5089               	movf	3977,w,c	;volatile
  1946  007CA8  0BF0               	andlw	240
  1947  007CAA  6E89               	movwf	3977,c	;volatile
  1948                           
  1949                           ;Lemos.C: 71: LATA = LATA | Dato;
  1950  007CAC  5089               	movf	3977,w,c	;volatile
  1951  007CAE  100F               	iorwf	Send_Disp@Dato,w,c
  1952  007CB0  6E89               	movwf	3977,c	;volatile
  1953  007CB2  0012               	return	
  1954  007CB4                     __end_of_Send_Disp:
  1955                           	opt stack 0
  1956                           tblptru	equ	0xFF8
  1957                           tblptrh	equ	0xFF7
  1958                           tblptrl	equ	0xFF6
  1959                           tablat	equ	0xFF5
  1960                           prodh	equ	0xFF4
  1961                           prodl	equ	0xFF3
  1962                           intcon	equ	0xFF2
  1963                           intcon2	equ	0xFF1
  1964                           postinc0	equ	0xFEE
  1965                           wreg	equ	0xFE8
  1966                           indf2	equ	0xFDF
  1967                           fsr2h	equ	0xFDA
  1968                           fsr2l	equ	0xFD9
  1969                           status	equ	0xFD8
  1970                           
  1971 ;; *************** function _myISR *****************
  1972 ;; Defined at:
  1973 ;;		line 115 in file "main.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;		None               void
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1987 ;;      Params:         0       0       0       0       0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1989 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1990 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1991 ;;Total ram usage:       14 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    1
  1994 ;; This function calls:
  1995 ;;		_RAMPA_tic
  1996 ;;		_tic_timer0
  1997 ;; This function is called by:
  1998 ;;		Interrupt level 2
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	intcode
  2003  002008                     __pintcode:
  2004                           	opt stack 0
  2005  002008                     _myISR:
  2006                           	opt stack 27
  2007                           
  2008                           ;incstack = 0
  2009  002008  CFFA F001          	movff	pclath,??_myISR
  2010  00200C  CFFB F002          	movff	pclatu,??_myISR+1
  2011  002010  CFE9 F003          	movff	fsr0l,??_myISR+2
  2012  002014  EDFC  F03E         	call	int_func,f	;refresh shadow registers
  2013                           pclatu	equ	0xFFB
  2014                           pclath	equ	0xFFA
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           prodh	equ	0xFF4
  2020                           prodl	equ	0xFF3
  2021                           intcon	equ	0xFF2
  2022                           intcon2	equ	0xFF1
  2023                           postinc0	equ	0xFEE
  2024                           fsr0l	equ	0xFE9
  2025                           wreg	equ	0xFE8
  2026                           indf2	equ	0xFDF
  2027                           fsr2h	equ	0xFDA
  2028                           fsr2l	equ	0xFD9
  2029                           status	equ	0xFD8
  2030                           
  2031                           	psect	intcode_body
  2032  007DF8                     __pintcode_body:
  2033                           	opt stack 27
  2034  007DF8                     int_func:
  2035                           	opt stack 27
  2036  007DF8  0006               	pop		; remove dummy address from shadow register refresh
  2037  007DFA  CFEA F004          	movff	fsr0h,??_myISR+3
  2038  007DFE  CFE1 F005          	movff	fsr1l,??_myISR+4
  2039  007E02  CFE2 F006          	movff	fsr1h,??_myISR+5
  2040  007E06  CFD9 F007          	movff	fsr2l,??_myISR+6
  2041  007E0A  CFDA F008          	movff	fsr2h,??_myISR+7
  2042  007E0E  CFF3 F009          	movff	prodl,??_myISR+8
  2043  007E12  CFF4 F00A          	movff	prodh,??_myISR+9
  2044  007E16  CFF6 F00B          	movff	tblptrl,??_myISR+10
  2045  007E1A  CFF7 F00C          	movff	tblptrh,??_myISR+11
  2046  007E1E  CFF8 F00D          	movff	tblptru,??_myISR+12
  2047  007E22  CFF5 F00E          	movff	tablat,??_myISR+13
  2048                           
  2049                           ;main.c: 124: if(TMR0IF){
  2050  007E26  A4F2               	btfss	intcon,2,c	;volatile
  2051  007E28  D00A               	goto	i2l1278
  2052                           
  2053                           ;main.c: 125: INTCONbits.TMR0IF = 0;
  2054  007E2A  94F2               	bcf	intcon,2,c	;volatile
  2055                           
  2056                           ;main.c: 126: TMR0L = 209;
  2057  007E2C  0ED1               	movlw	209
  2058  007E2E  6ED6               	movwf	4054,c	;volatile
  2059                           
  2060                           ;main.c: 127: TMR0H = 0xFF;
  2061  007E30  68D7               	setf	4055,c	;volatile
  2062                           
  2063                           ;main.c: 129: tic_timer0();
  2064  007E32  ECA0  F03D         	call	_tic_timer0	;wreg free
  2065                           
  2066                           ;main.c: 135: if(rampa_status) RAMPA_tic();
  2067  007E36  5034               	movf	_rampa_status,w,c
  2068  007E38  A4D8               	btfss	status,2,c
  2069  007E3A  EC6E  F03D         	call	_RAMPA_tic	;wreg free
  2070  007E3E                     i2l1278:
  2071                           
  2072                           ;main.c: 138: }
  2073                           ;main.c: 141: if(TMR1IF){
  2074  007E3E  A09E               	btfss	3998,0,c	;volatile
  2075  007E40  D005               	goto	i2l1288
  2076                           
  2077                           ;main.c: 142: PIR1bits.TMR1IF = 0;
  2078  007E42  909E               	bcf	3998,0,c	;volatile
  2079                           
  2080                           ;main.c: 143: TMR1L=144;
  2081  007E44  0E90               	movlw	144
  2082  007E46  6ECE               	movwf	4046,c	;volatile
  2083                           
  2084                           ;main.c: 144: TMR1H=0xFF;
  2085  007E48  68CF               	setf	4047,c	;volatile
  2086                           
  2087                           ;main.c: 145: LATBbits.LATB7 =~ LATBbits.LATB7;
  2088  007E4A  7E8A               	btg	3978,7,c	;volatile
  2089  007E4C                     i2l1288:
  2090                           
  2091                           ;main.c: 146: }
  2092                           ;main.c: 147: if(RCIF){
  2093  007E4C  AA9E               	btfss	3998,5,c	;volatile
  2094  007E4E  D004               	goto	i2l1294
  2095                           
  2096                           ;main.c: 148: RCIF=0;
  2097  007E50  9A9E               	bcf	3998,5,c	;volatile
  2098                           
  2099                           ;main.c: 149: caracter_recibido=RCREG;
  2100  007E52  CFAE F032          	movff	4014,_caracter_recibido	;volatile
  2101                           
  2102                           ;main.c: 150: (void) RCREG;
  2103  007E56  50AE               	movf	4014,w,c	;volatile
  2104  007E58                     i2l1294:
  2105                           
  2106                           ;main.c: 151: }
  2107                           ;main.c: 152: if(INT0IF){
  2108  007E58  A2F2               	btfss	intcon,1,c	;volatile
  2109  007E5A  D004               	goto	i2l90
  2110                           
  2111                           ;main.c: 153: rampa_status=0;
  2112  007E5C  0E00               	movlw	0
  2113  007E5E  6E34               	movwf	_rampa_status,c
  2114                           
  2115                           ;main.c: 154: INTCONbits.INT0IE=0;
  2116  007E60  98F2               	bcf	intcon,4,c	;volatile
  2117                           
  2118                           ;main.c: 155: INTCONbits.INT0IF=0;
  2119  007E62  92F2               	bcf	intcon,1,c	;volatile
  2120  007E64                     i2l90:
  2121  007E64  C00E  FFF5         	movff	??_myISR+13,tablat
  2122  007E68  C00D  FFF8         	movff	??_myISR+12,tblptru
  2123  007E6C  C00C  FFF7         	movff	??_myISR+11,tblptrh
  2124  007E70  C00B  FFF6         	movff	??_myISR+10,tblptrl
  2125  007E74  C00A  FFF4         	movff	??_myISR+9,prodh
  2126  007E78  C009  FFF3         	movff	??_myISR+8,prodl
  2127  007E7C  C008  FFDA         	movff	??_myISR+7,fsr2h
  2128  007E80  C007  FFD9         	movff	??_myISR+6,fsr2l
  2129  007E84  C006  FFE2         	movff	??_myISR+5,fsr1h
  2130  007E88  C005  FFE1         	movff	??_myISR+4,fsr1l
  2131  007E8C  C004  FFEA         	movff	??_myISR+3,fsr0h
  2132  007E90  C003  FFE9         	movff	??_myISR+2,fsr0l
  2133  007E94  C002  FFFB         	movff	??_myISR+1,pclatu
  2134  007E98  C001  FFFA         	movff	??_myISR,pclath
  2135  007E9C  0011               	retfie		f
  2136  007E9E                     __end_of_myISR:
  2137                           	opt stack 0
  2138                           pclatu	equ	0xFFB
  2139                           pclath	equ	0xFFA
  2140                           tblptru	equ	0xFF8
  2141                           tblptrh	equ	0xFF7
  2142                           tblptrl	equ	0xFF6
  2143                           tablat	equ	0xFF5
  2144                           prodh	equ	0xFF4
  2145                           prodl	equ	0xFF3
  2146                           intcon	equ	0xFF2
  2147                           intcon2	equ	0xFF1
  2148                           postinc0	equ	0xFEE
  2149                           fsr0h	equ	0xFEA
  2150                           fsr0l	equ	0xFE9
  2151                           wreg	equ	0xFE8
  2152                           fsr1h	equ	0xFE2
  2153                           fsr1l	equ	0xFE1
  2154                           indf2	equ	0xFDF
  2155                           fsr2h	equ	0xFDA
  2156                           fsr2l	equ	0xFD9
  2157                           status	equ	0xFD8
  2158                           
  2159 ;; *************** function _tic_timer0 *****************
  2160 ;; Defined at:
  2161 ;;		line 117 in file "Lemos.C"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;		None               void
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0
  2176 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2178 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2179 ;;Total ram usage:        0 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_myISR
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text15
  2189  007B40                     __ptext15:
  2190                           	opt stack 0
  2191  007B40                     _tic_timer0:
  2192                           	opt stack 27
  2193                           
  2194                           ;Lemos.C: 118: if(mux_tout)mux_tout--;
  2195                           
  2196                           ;incstack = 0
  2197  007B40  5033               	movf	_mux_tout,w,c
  2198  007B42  A4D8               	btfss	status,2,c
  2199  007B44  0633               	decf	_mux_tout,f,c
  2200                           
  2201                           ;Lemos.C: 119: if(bot_tout)bot_tout--;
  2202  007B46  5031               	movf	_bot_tout,w,c
  2203  007B48  A4D8               	btfss	status,2,c
  2204  007B4A  0631               	decf	_bot_tout,f,c
  2205                           
  2206                           ;Lemos.C: 120: if(led_tout)led_tout--;
  2207  007B4C  502A               	movf	_led_tout+1,w,c
  2208  007B4E  1029               	iorwf	_led_tout,w,c
  2209  007B50  B4D8               	btfsc	status,2,c
  2210  007B52  D003               	goto	i2l236
  2211  007B54  0629               	decf	_led_tout,f,c
  2212  007B56  A0D8               	btfss	status,0,c
  2213  007B58  062A               	decf	_led_tout+1,f,c
  2214  007B5A                     i2l236:
  2215  007B5A  0012               	return	
  2216  007B5C                     __end_of_tic_timer0:
  2217                           	opt stack 0
  2218                           pclatu	equ	0xFFB
  2219                           pclath	equ	0xFFA
  2220                           tblptru	equ	0xFF8
  2221                           tblptrh	equ	0xFF7
  2222                           tblptrl	equ	0xFF6
  2223                           tablat	equ	0xFF5
  2224                           prodh	equ	0xFF4
  2225                           prodl	equ	0xFF3
  2226                           intcon	equ	0xFF2
  2227                           intcon2	equ	0xFF1
  2228                           postinc0	equ	0xFEE
  2229                           fsr0h	equ	0xFEA
  2230                           fsr0l	equ	0xFE9
  2231                           wreg	equ	0xFE8
  2232                           fsr1h	equ	0xFE2
  2233                           fsr1l	equ	0xFE1
  2234                           indf2	equ	0xFDF
  2235                           fsr2h	equ	0xFDA
  2236                           fsr2l	equ	0xFD9
  2237                           status	equ	0xFD8
  2238                           
  2239 ;; *************** function _RAMPA_tic *****************
  2240 ;; Defined at:
  2241 ;;		line 15 in file "rampa.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;		None               void
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2255 ;;      Params:         0       0       0       0       0       0       0       0       0
  2256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2258 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2259 ;;Total ram usage:        0 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_myISR
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text16
  2269  007ADC                     __ptext16:
  2270                           	opt stack 0
  2271  007ADC                     _RAMPA_tic:
  2272                           	opt stack 27
  2273                           
  2274                           ;rampa.c: 16: if(tiempo_rampa<9999)tiempo_rampa++;
  2275                           
  2276                           ;incstack = 0
  2277  007ADC  0E0F               	movlw	15
  2278  007ADE  5C2B               	subwf	_tiempo_rampa,w,c
  2279  007AE0  0E27               	movlw	39
  2280  007AE2  582C               	subwfb	_tiempo_rampa+1,w,c
  2281  007AE4  B0D8               	btfsc	status,0,c
  2282  007AE6  D002               	goto	i2l291
  2283  007AE8  4A2B               	infsnz	_tiempo_rampa,f,c
  2284  007AEA  2A2C               	incf	_tiempo_rampa+1,f,c
  2285  007AEC                     i2l291:
  2286  007AEC  0012               	return	
  2287  007AEE                     __end_of_RAMPA_tic:
  2288                           	opt stack 0
  2289                           pclatu	equ	0xFFB
  2290                           pclath	equ	0xFFA
  2291                           tblptru	equ	0xFF8
  2292                           tblptrh	equ	0xFF7
  2293                           tblptrl	equ	0xFF6
  2294                           tablat	equ	0xFF5
  2295                           prodh	equ	0xFF4
  2296                           prodl	equ	0xFF3
  2297                           intcon	equ	0xFF2
  2298                           intcon2	equ	0xFF1
  2299                           postinc0	equ	0xFEE
  2300                           fsr0h	equ	0xFEA
  2301                           fsr0l	equ	0xFE9
  2302                           wreg	equ	0xFE8
  2303                           fsr1h	equ	0xFE2
  2304                           fsr1l	equ	0xFE1
  2305                           indf2	equ	0xFDF
  2306                           fsr2h	equ	0xFDA
  2307                           fsr2l	equ	0xFD9
  2308                           status	equ	0xFD8
  2309                           pclatu	equ	0xFFB
  2310                           pclath	equ	0xFFA
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           prodh	equ	0xFF4
  2316                           prodl	equ	0xFF3
  2317                           intcon	equ	0xFF2
  2318                           intcon2	equ	0xFF1
  2319                           postinc0	equ	0xFEE
  2320                           fsr0h	equ	0xFEA
  2321                           fsr0l	equ	0xFE9
  2322                           wreg	equ	0xFE8
  2323                           fsr1h	equ	0xFE2
  2324                           fsr1l	equ	0xFE1
  2325                           indf2	equ	0xFDF
  2326                           fsr2h	equ	0xFDA
  2327                           fsr2l	equ	0xFD9
  2328                           status	equ	0xFD8
  2329                           
  2330                           	psect	rparam
  2331  0000                     pclatu	equ	0xFFB
  2332                           pclath	equ	0xFFA
  2333                           tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           prodh	equ	0xFF4
  2338                           prodl	equ	0xFF3
  2339                           intcon	equ	0xFF2
  2340                           intcon2	equ	0xFF1
  2341                           postinc0	equ	0xFEE
  2342                           fsr0h	equ	0xFEA
  2343                           fsr0l	equ	0xFE9
  2344                           wreg	equ	0xFE8
  2345                           fsr1h	equ	0xFE2
  2346                           fsr1l	equ	0xFE1
  2347                           indf2	equ	0xFDF
  2348                           fsr2h	equ	0xFDA
  2349                           fsr2l	equ	0xFD9
  2350                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1
    Data        3
    BSS         17
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    informar@dato	PTR unsigned char  size(2) Largest target is 4
		 -> main@paquete(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    _informar->_transmitir
    ___lwdiv->___lwmod
    _Send_4Disp->_Send_Disp

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    1773
                                             26 COMRAM    12    12      0
                         _Send_4Disp
                            ___lwdiv
                            ___lwmod
                          _assign_id
                             _decode
                           _informar
                          _pic_ini13
                        _rampa_ini13
                       _timer1_ini13
                        _timer_ini13
                        _usart_ini13
 ---------------------------------------------------------------------------------
 (1) _usart_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_ini13                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rampa_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pic_ini13                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _informar                                             4     1      3     181
                                             15 COMRAM     4     1      3
                         _transmitir
 ---------------------------------------------------------------------------------
 (2) _transmitir                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _decode                                               2     2      0      90
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _assign_id                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     423
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     423
                                             19 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Send_4Disp                                           4     1      3     476
                                             16 COMRAM     4     1      3
                          _Send_Disp
 ---------------------------------------------------------------------------------
 (2) _Send_Disp                                            2     1      1     257
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                               14    14      0       0
                                              0 COMRAM    14    14      0
                          _RAMPA_tic
                         _tic_timer0
 ---------------------------------------------------------------------------------
 (4) _tic_timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RAMPA_tic                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_4Disp
     _Send_Disp
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _assign_id
   _decode
   _informar
     _transmitir
   _pic_ini13
   _rampa_ini13
   _timer1_ini13
   _timer_ini13
   _usart_ini13

 _myISR (ROOT)
   _RAMPA_tic
   _tic_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      3B       1       62.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B      20        0.0%
DATA                 0      0      3B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Jun  9 23:57:34 2015

                        l74 7EE6                          l75 7EF2                          l76 7EFA  
                        l78 7F12                          l79 7FEC                 __CFG_BOR$ON 000000  
               __CFG_BORV$3 000000                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
                       l210 7C74                         l211 7C78                         l212 7C7C  
                       l220 7D7C                         l213 7C80                         l230 7DF6  
                       l223 7D92                         l320 7B1E                         l225 7DA8  
                       l227 7DBE                         l317 7B16                         _DEC 002E  
                       l913 7CFC                         l923 7C5A                __CFG_CPB$OFF 000000  
                       u245 7F58                         _PR2 000FCB                         _UNI 0030  
                       wreg 000FE8               Send_Disp@Dato 000F                __CFG_LVP$OFF 000000  
              __CFG_WDT$OFF 000000                        l1002 7C84                        l1004 7CA0  
                      l1100 7D1A                        l1212 7C50                        l1204 7C30  
                      l1108 7D34                        l1206 7C38                        l1118 7D4A  
                      l1126 7D60                        l1160 7DDA                        l1208 7C3C  
                      l1128 7D74                        l1232 7ECE                        l1082 7BF8  
                      l1092 7D0A                        l1236 7EDC                        l1158 7DD2  
                      l1086 7C12                        l1238 7EE0                        l1184 7CCA  
                      l1256 7F1E                        l1186 7CD2                        l1258 7F4E  
                      l1196 7CF2                        l1188 7CD6                        _CENT 002D  
                      _LATA 000F89                        _LATB 000F8A                        _LATC 000F8B  
                      _LATD 000F8C                        _LATE 000F8D                        _RCIF 007CF5  
                      i2l90 7E64                        _UMIL 002F                 _usart_ini13 7B5C  
               main@paquete 0023                        _main 7E9E                        fsr0h 000FEA  
                      fsr1h 000FE2                        fsr0l 000FE9                        fsr2h 000FDA  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
                      pclat 000FFA                        prodh 000FF4                        prodl 000FF3  
                      start 2018               __CFG_IESO$OFF 000000               __CFG_MCLRE$ON 000000  
        __size_of_RAMPA_tic 0012               __CFG_PLLDIV$5 000000                 assign_id@id 000F  
                     ?_main 0001                       _CMCON 000FB4             __end_of___lwdiv 7D06  
           __end_of___lwmod 7C64                       i2l236 7B5A                       i2l291 7AEC  
                     _RCREG 000FAE                       _TMR0H 000FD7                       _TMR1H 000FCF  
                     _TMR0L 000FD6                       _TMR1L 000FCE                       _SPBRG 000FAF  
             __CFG_USBDIV$2 000000                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISD 000F95                       _TRISE 000F96                       _TXREG 000FAD  
             __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000              __CFG_EBTRB$OFF 000000  
                     _myISR 2008                       leds@i 003A                       tablat 000FF5  
                     status 000FD8             __initialization 7BB4  main@backup_ultimo_caracter 0021  
              ?_rampa_ini13 0001                __end_of_main 8000                      ??_main 001B  
             __activetblptr 000002                  _Send_4Disp 7D78                      _ADCON1 000FC1  
                    ?_myISR 0001                      _CCPR1L 000FBE           __end_of_RAMPA_tic 7AEE  
                    _INT0IF 007F91                      _MEMDIG 0039                      i2l1294 7E58  
                    i2l1278 7E3E                      i2l1288 7E4C                      _TMR0IF 007F92  
                    _TMR1IF 007CF0                      _SPBRGH 000FB0              __CFG_VREGEN$ON 000000  
            __CFG_XINST$OFF 000000          __size_of_Send_Disp 0050              __CFG_STVREN$ON 000000  
                    _decode 7D06                   ??___lwdiv 0018                   ??___lwmod 0013  
          __end_of_informar 7C22                      clear_0 7BBA        __end_of_broadcast_id 201E  
              __pdataCOMRAM 0038                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                ?_timer_ini13 0001  
             decode@com_rec 0035               decode@est_rec 0036                  __accesstop 0060  
   __end_of__initialization 7BDE             __CFG_PBADEN$OFF 000000            Send_Disp@NroDisp 0010  
             decode@retorno 000F              __pcstackCOMRAM 0001               __end_of_myISR 7E9E  
        main@broadcast_flag 0022                 ?_Send_4Disp 0011                     ??_myISR 0001  
         __end_of_Send_Disp 7CB4          __size_of_assign_id 0008                ?_usart_ini13 0001  
                __pnvCOMRAM 003B          __size_of_pic_ini13 0030                     ?_decode 0001  
        Send_4Disp@Nro_Disp 0038        __size_of_rampa_ini13 0012                   ?_informar 0010  
                   __Hparam 0000                     __Lparam 0000         __size_of_Send_4Disp 0080  
           __size_of_decode 0072                     ___lwdiv 7CB4                     ___lwmod 7C22  
         __end_of_assign_id 7ADC                __psmallconst 201C                     __pcinit 7BB4  
             ?_timer1_ini13 0001                     __ramtop 0800                     __ptext0 7E9E  
                   __ptext1 7B5C                     __ptext2 7B26                     __ptext3 7B00  
                   __ptext4 7AEE                     __ptext5 7B84                     __ptext6 7BE8  
                   __ptext7 7B12                     __ptext8 7D06                     __ptext9 7AD4  
              informar@dato 0010                   _T0CONbits 000FD5                   _T1CONbits 000FCD  
                 _T2CONbits 000FCA           __end_of_pic_ini13 7BB4         mux_display@contdisp 0037  
                   main@dec 001C                     main@mil 001E                     main@seg 001B  
            __pintcode_body 7DF8        __size_of_timer_ini13 001A        end_of_initialization 7BDE  
                ??_informar 0013               __Lmediumconst 0000                     int_func 7DF8  
              _broadcast_id 201D                   _RAMPA_tic 7ADC                  _tic_timer0 7B40  
                 _RCSTAbits 000FAB                     postinc0 000FEE              ??_timer1_ini13 000F  
                 _PORTBbits 000F81                   _TRISBbits 000F93                   _TRISCbits 000F94  
                _transmitir 7B12                 _CCP1CONbits 000FBD                   _TXSTAbits 000FAC  
                ?_RAMPA_tic 0001        __size_of_usart_ini13 0028          decode@dato_a_decod 0010  
            __end_of_decode 7D78                 _BAUDCONbits 000FB8               __pidataCOMRAM 7AD1  
              ??_Send_4Disp 0014         start_initialization 7BB4                   _Send_Disp 7C64  
               ?_tic_timer0 0001          __end_of_Send_4Disp 7DF8                    ??_decode 000F  
          __CFG_LPT1OSC$OFF 000000                 __pbssCOMRAM 0027                 ?_transmitir 0001  
      __end_of_timer1_ini13 7B12                  ?_Send_Disp 000F                 ??_RAMPA_tic 0001  
         __size_of_informar 003A            ___lwdiv@dividend 0014               ??_rampa_ini13 000F  
                 __pintcode 2008                    ?___lwdiv 0014                    ?___lwmod 000F  
                 _assign_id 7AD4                 __smallconst 201C         __size_of_tic_timer0 001C  
          ___lwdiv@quotient 0018              __size_of_myISR 5E96                   _pic_ini13 7B84  
                  _LATAbits 000F89                    _LATBbits 000F8A                    _LATCbits 000F8B  
                  _LATDbits 000F8C                    _LATEbits 000F8D                    _LCD_tout 0027  
                  _PIE1bits 000F9D                    _PIR1bits 000F9E            __CFG_WDTPS$32768 000000  
          informar@longitud 0012         __size_of_transmitir 0014         __end_of_rampa_ini13 7B00  
              _rampa_status 0034                  ?_assign_id 0001               ??_timer_ini13 000F  
            Send_4Disp@Cent 0011              Send_4Disp@Umil 0014                 _INTCON2bits 000FF1  
                ?_pic_ini13 0001                 ??_Send_Disp 0010                    __Hrparam 0000  
                  __Lrparam 0000                   informar@i 0013           _caracter_recibido 0032  
          __size_of___lwdiv 0052            __size_of___lwmod 0042             ___lwdiv@divisor 0016  
     __size_of_timer1_ini13 0012             ___lwdiv@counter 001A                    __ptext10 7C22  
                  __ptext11 7CB4                    __ptext12 7D78                    __ptext13 7C64  
                  __ptext15 7B40                    __ptext16 7ADC                    _bot_tout 0031  
             ??_usart_ini13 000F                    _led_tout 0029         __end_of_timer_ini13 7B40  
                  _informar 7BE8               __size_of_main 0162                ??_tic_timer0 0001  
                  _slave_id 003B                 _rampa_ini13 7AEE                    _mux_tout 0033  
                  main@cent 001D                _timer1_ini13 7B00               Send_4Disp@Dec 0012  
             Send_4Disp@Uni 0013       __CFG_CPUDIV$OSC1_PLL2 000000                 ??_assign_id 000F  
                _INTCONbits 000FF2          __end_of_tic_timer0 7B5C                 ??_pic_ini13 000F  
              ??_transmitir 000F                    intlevel2 0000                _tiempo_rampa 002B  
            transmitir@Dato 000F            ___lwmod@dividend 000F         __end_of_usart_ini13 7B84  
        __end_of_transmitir 7B26             ___lwmod@divisor 0011             ___lwmod@counter 0013  
               _timer_ini13 7B26          __CFG_FOSC$HSPLL_HS 000000     main@backup_tiempo_rampa 001F  
