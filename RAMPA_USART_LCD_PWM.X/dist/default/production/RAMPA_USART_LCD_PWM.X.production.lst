

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Jul 10 00:35:29 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           	psect	idataCOMRAM
    35  007A53                     __pidataCOMRAM:
    36                           	opt stack 0
    37                           
    38                           ;initializer for Send_4Disp@Nro_Disp
    39  007A53  01                 	db	1
    40                           
    41                           ;initializer for _MEMDIG
    42  007A54  01                 	db	1
    43                           
    44                           ;initializer for leds@i
    45  007A55  01                 	db	1
    46                           
    47                           	psect	smallconst
    48  00201C                     __psmallconst:
    49                           	opt stack 0
    50  00201C  00                 	db	0
    51  00201D                     _broadcast_id:
    52                           	opt stack 0
    53  00201D  6D                 	db	109
    54  00201E                     __end_of_broadcast_id:
    55                           	opt stack 0
    56  00201E  00                 	db	0	; dummy byte at the end
    57  0000                     
    58                           	psect	nvCOMRAM
    59  00003D                     __pnvCOMRAM:
    60                           	opt stack 0
    61  00003D                     _slave_id:
    62                           	opt stack 0
    63  00003D                     	ds	1
    64  0000                     _ADCON1	set	4033
    65  0000                     _BAUDCONbits	set	4024
    66  0000                     _CCP1CONbits	set	4029
    67  0000                     _CCPR1L	set	4030
    68  0000                     _CMCON	set	4020
    69  0000                     _INTCON2bits	set	4081
    70  0000                     _INTCONbits	set	4082
    71  0000                     _LATA	set	3977
    72  0000                     _LATAbits	set	3977
    73  0000                     _LATB	set	3978
    74  0000                     _LATBbits	set	3978
    75  0000                     _LATC	set	3979
    76  0000                     _LATCbits	set	3979
    77  0000                     _LATD	set	3980
    78  0000                     _LATDbits	set	3980
    79  0000                     _LATE	set	3981
    80  0000                     _LATEbits	set	3981
    81  0000                     _PIE1bits	set	3997
    82  0000                     _PIR1bits	set	3998
    83  0000                     _PORTBbits	set	3969
    84  0000                     _PR2	set	4043
    85  0000                     _RCREG	set	4014
    86  0000                     _RCSTAbits	set	4011
    87  0000                     _SPBRG	set	4015
    88  0000                     _SPBRGH	set	4016
    89  0000                     _T0CONbits	set	4053
    90  0000                     _T1CONbits	set	4045
    91  0000                     _T2CONbits	set	4042
    92  0000                     _TMR0H	set	4055
    93  0000                     _TMR0L	set	4054
    94  0000                     _TMR1H	set	4047
    95  0000                     _TMR1L	set	4046
    96  0000                     _TRISA	set	3986
    97  0000                     _TRISB	set	3987
    98  0000                     _TRISBbits	set	3987
    99  0000                     _TRISCbits	set	3988
   100  0000                     _TRISD	set	3989
   101  0000                     _TRISE	set	3990
   102  0000                     _TXREG	set	4013
   103  0000                     _TXSTAbits	set	4012
   104  0000                     _INT0IF	set	32657
   105  0000                     _RCIF	set	31989
   106  0000                     _TMR0IF	set	32658
   107  0000                     _TMR1IF	set	31984
   108                           
   109                           ; #config settings
   110  0000                     
   111                           	psect	cinit
   112  007B52                     __pcinit:
   113                           	opt stack 0
   114  007B52                     start_initialization:
   115                           	opt stack 0
   116  007B52                     __initialization:
   117                           	opt stack 0
   118                           
   119                           ; Clear objects allocated to COMRAM (19 bytes)
   120  007B52  EE00  F027         	lfsr	0,__pbssCOMRAM
   121  007B56  0E13               	movlw	19
   122  007B58                     clear_0:
   123  007B58  6AEE               	clrf	postinc0,c
   124  007B5A  06E8               	decf	wreg,f,c
   125  007B5C  E1FD               	bnz	clear_0
   126                           
   127                           ; Initialize objects allocated to COMRAM (3 bytes)
   128                           ; load TBLPTR registers with __pidataCOMRAM
   129  007B5E  0E53               	movlw	low __pidataCOMRAM
   130  007B60  6EF6               	movwf	tblptrl,c
   131  007B62  0E7A               	movlw	high __pidataCOMRAM
   132  007B64  6EF7               	movwf	tblptrh,c
   133  007B66  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   134  007B68  6EF8               	movwf	tblptru,c
   135  007B6A  0009               	tblrd		*+	;fetch initializer
   136  007B6C  CFF5 F03A          	movff	tablat,__pdataCOMRAM
   137  007B70  0009               	tblrd		*+	;fetch initializer
   138  007B72  CFF5 F03B          	movff	tablat,__pdataCOMRAM+1
   139  007B76  0009               	tblrd		*+	;fetch initializer
   140  007B78  CFF5 F03C          	movff	tablat,__pdataCOMRAM+2
   141  007B7C                     end_of_initialization:
   142                           	opt stack 0
   143  007B7C                     __end_of__initialization:
   144                           	opt stack 0
   145  007B7C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   146  007B7E  6EF8               	movwf	tblptru,c
   147  007B80  0100               	movlb	0
   148  007B82  EF3F  F03F         	goto	_main	;jump to C main() function
   149                           tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           tblptrl	equ	0xFF6
   152                           tablat	equ	0xFF5
   153                           postinc0	equ	0xFEE
   154                           wreg	equ	0xFE8
   155                           
   156                           	psect	bssCOMRAM
   157  000027                     __pbssCOMRAM:
   158                           	opt stack 0
   159  000027                     _LCD_tout:
   160                           	opt stack 0
   161  000027                     	ds	2
   162  000029                     _led_tout:
   163                           	opt stack 0
   164  000029                     	ds	2
   165  00002B                     _tiempo_rampa:
   166                           	opt stack 0
   167  00002B                     	ds	2
   168  00002D                     _CENT:
   169                           	opt stack 0
   170  00002D                     	ds	1
   171  00002E                     _DEC:
   172                           	opt stack 0
   173  00002E                     	ds	1
   174  00002F                     _UMIL:
   175                           	opt stack 0
   176  00002F                     	ds	1
   177  000030                     _UNI:
   178                           	opt stack 0
   179  000030                     	ds	1
   180  000031                     _bot_tout:
   181                           	opt stack 0
   182  000031                     	ds	1
   183  000032                     _caracter_recibido:
   184                           	opt stack 0
   185  000032                     	ds	1
   186  000033                     _demora_envio:
   187                           	opt stack 0
   188  000033                     	ds	1
   189  000034                     _envio_status:
   190                           	opt stack 0
   191  000034                     	ds	1
   192  000035                     _mux_tout:
   193                           	opt stack 0
   194  000035                     	ds	1
   195  000036                     _rampa_status:
   196                           	opt stack 0
   197  000036                     	ds	1
   198  000037                     decode@com_rec:
   199                           	opt stack 0
   200  000037                     	ds	1
   201  000038                     decode@est_rec:
   202                           	opt stack 0
   203  000038                     	ds	1
   204  000039                     mux_display@contdisp:
   205                           	opt stack 0
   206  000039                     	ds	1
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           tblptrl	equ	0xFF6
   210                           tablat	equ	0xFF5
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	dataCOMRAM
   215  00003A                     __pdataCOMRAM:
   216                           	opt stack 0
   217  00003A                     Send_4Disp@Nro_Disp:
   218                           	opt stack 0
   219  00003A                     	ds	1
   220  00003B                     _MEMDIG:
   221                           	opt stack 0
   222  00003B                     	ds	1
   223  00003C                     leds@i:
   224                           	opt stack 0
   225  00003C                     	ds	1
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	cstackCOMRAM
   234  000001                     __pcstackCOMRAM:
   235                           	opt stack 0
   236  000001                     ??_myISR:
   237  000001                     
   238                           ; 1 bytes @ 0x0
   239  000001                     	ds	14
   240  00000F                     ?___lwmod:
   241                           	opt stack 0
   242  00000F                     Send_Disp@Dato:
   243                           	opt stack 0
   244  00000F                     assign_id@id:
   245                           	opt stack 0
   246  00000F                     decode@retorno:
   247                           	opt stack 0
   248  00000F                     transmitir@Dato:
   249                           	opt stack 0
   250  00000F                     ___lwmod@dividend:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0xE
   254  00000F                     	ds	1
   255  000010                     Send_Disp@NroDisp:
   256                           	opt stack 0
   257  000010                     decode@dato_a_decod:
   258                           	opt stack 0
   259  000010                     informar@dato:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0xF
   263  000010                     	ds	1
   264  000011                     Send_4Disp@Cent:
   265                           	opt stack 0
   266  000011                     ___lwmod@divisor:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x10
   270  000011                     	ds	1
   271  000012                     Send_4Disp@Dec:
   272                           	opt stack 0
   273  000012                     informar@longitud:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x11
   277  000012                     	ds	1
   278  000013                     Send_4Disp@Uni:
   279                           	opt stack 0
   280  000013                     informar@i:
   281                           	opt stack 0
   282  000013                     ___lwmod@counter:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x12
   286  000013                     	ds	1
   287  000014                     ?___lwdiv:
   288                           	opt stack 0
   289  000014                     Send_4Disp@Umil:
   290                           	opt stack 0
   291  000014                     ___lwdiv@dividend:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0x13
   295  000014                     	ds	2
   296  000016                     ___lwdiv@divisor:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x15
   300  000016                     	ds	2
   301  000018                     ___lwdiv@quotient:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x17
   305  000018                     	ds	2
   306  00001A                     ___lwdiv@counter:
   307                           	opt stack 0
   308                           
   309                           ; 1 bytes @ 0x19
   310  00001A                     	ds	1
   311  00001B                     main@seg:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0x1A
   315  00001B                     	ds	1
   316  00001C                     main@dec:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x1B
   320  00001C                     	ds	1
   321  00001D                     main@cent:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0x1C
   325  00001D                     	ds	1
   326  00001E                     main@mil:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x1D
   330  00001E                     	ds	1
   331  00001F                     main@backup_tiempo_rampa:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x1E
   335  00001F                     	ds	2
   336  000021                     main@backup_ultimo_caracter:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x20
   340  000021                     	ds	1
   341  000022                     main@broadcast_flag:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0x21
   345  000022                     	ds	1
   346  000023                     main@paquete:
   347                           	opt stack 0
   348                           
   349                           ; 4 bytes @ 0x22
   350  000023                     	ds	4
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           
   358 ;;
   359 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   360 ;;
   361 ;; *************** function _main *****************
   362 ;; Defined at:
   363 ;;		line 35 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;  paquete         4   34[COMRAM] unsigned char [4]
   368 ;;  backup_tiemp    2   30[COMRAM] unsigned int 
   369 ;;  broadcast_fl    1   33[COMRAM] unsigned char 
   370 ;;  backup_ultim    1   32[COMRAM] unsigned char 
   371 ;;  mil             1   29[COMRAM] unsigned char 
   372 ;;  cent            1   28[COMRAM] unsigned char 
   373 ;;  dec             1   27[COMRAM] unsigned char 
   374 ;;  seg             1   26[COMRAM] unsigned char 
   375 ;; Return value:  Size  Location     Type
   376 ;;		None               void
   377 ;; Registers used:
   378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   384 ;;      Params:         0       0       0       0       0       0       0       0       0
   385 ;;      Locals:        12       0       0       0       0       0       0       0       0
   386 ;;      Temps:          0       0       0       0       0       0       0       0       0
   387 ;;      Totals:        12       0       0       0       0       0       0       0       0
   388 ;;Total ram usage:       12 bytes
   389 ;; Hardware stack levels required when called:    4
   390 ;; This function calls:
   391 ;;		_Send_4Disp
   392 ;;		___lwdiv
   393 ;;		___lwmod
   394 ;;		_assign_id
   395 ;;		_decode
   396 ;;		_informar
   397 ;;		_pic_ini13
   398 ;;		_rampa_ini13
   399 ;;		_timer1_ini13
   400 ;;		_timer_ini13
   401 ;;		_usart_ini13
   402 ;; This function is called by:
   403 ;;		Startup code after reset
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           	psect	text0
   408  007E7E                     __ptext0:
   409                           	opt stack 0
   410  007E7E                     _main:
   411                           	opt stack 27
   412                           
   413                           ;main.c: 36: unsigned char backup_ultimo_caracter;
   414                           ;main.c: 37: unsigned int backup_tiempo_rampa;
   415                           ;main.c: 38: char seg=0,dec=0,cent=0,mil=0;
   416                           
   417                           ;incstack = 0
   418  007E7E  0E00               	movlw	0
   419  007E80  6E1B               	movwf	main@seg,c
   420  007E82  0E00               	movlw	0
   421  007E84  6E1C               	movwf	main@dec,c
   422  007E86  0E00               	movlw	0
   423  007E88  6E1D               	movwf	main@cent,c
   424  007E8A  0E00               	movlw	0
   425  007E8C  6E1E               	movwf	main@mil,c
   426                           
   427                           ;main.c: 39: char paquete[4];
   428                           ;main.c: 40: unsigned char broadcast_flag=0;
   429  007E8E  0E00               	movlw	0
   430  007E90  6E22               	movwf	main@broadcast_flag,c
   431                           
   432                           ;main.c: 42: pic_ini13();
   433  007E92  EC91  F03D         	call	_pic_ini13	;wreg free
   434                           
   435                           ;main.c: 43: timer_ini13();
   436  007E96  EC5D  F03D         	call	_timer_ini13	;wreg free
   437                           
   438                           ;main.c: 45: timer1_ini13();
   439  007E9A  EC3E  F03D         	call	_timer1_ini13	;wreg free
   440                           
   441                           ;main.c: 46: usart_ini13();
   442  007E9E  EC7D  F03D         	call	_usart_ini13	;wreg free
   443                           
   444                           ;main.c: 47: (INTCONbits.GIE = 1);
   445  007EA2  8EF2               	bsf	intcon,7,c	;volatile
   446                           
   447                           ;main.c: 49: assign_id('a');
   448  007EA4  0E61               	movlw	97
   449  007EA6  EC2B  F03D         	call	_assign_id
   450                           
   451                           ;main.c: 51: rampa_ini13();
   452  007EAA  EC35  F03D         	call	_rampa_ini13	;wreg free
   453  007EAE  D000               	goto	l1656
   454  007EB0                     l1656:
   455                           
   456                           ;main.c: 54: if(caracter_recibido != backup_ultimo_caracter){
   457  007EB0  5021               	movf	main@backup_ultimo_caracter,w,c
   458  007EB2  1832               	xorwf	_caracter_recibido,w,c
   459  007EB4  B4D8               	btfsc	status,2,c
   460  007EB6  D049               	goto	l1690
   461                           
   462                           ;main.c: 55: backup_ultimo_caracter=caracter_recibido;
   463  007EB8  C032  F021         	movff	_caracter_recibido,main@backup_ultimo_caracter
   464                           
   465                           ;main.c: 65: switch(decode(caracter_recibido)){
   466  007EBC  D02D               	goto	l1688
   467                           
   468                           ;main.c: 67: break;
   469                           
   470                           ;main.c: 66: case 0:;
   471  007EBE  D045               	goto	l1690
   472  007EC0                     l1660:
   473                           
   474                           ;main.c: 69: broadcast_flag=0;
   475  007EC0  0E00               	movlw	0
   476  007EC2  D001               	goto	L1
   477  007EC4                     l1662:
   478                           
   479                           ;main.c: 72: broadcast_flag=1;
   480  007EC4  0E01               	movlw	1
   481  007EC6                     L1:
   482  007EC6  6E22               	movwf	main@broadcast_flag,c
   483                           
   484                           ;main.c: 73: }break;
   485  007EC8  D040               	goto	l1690
   486  007ECA                     l80:
   487                           
   488                           ;main.c: 75: LATDbits.LD2=1;
   489  007ECA  848C               	bsf	3980,2,c	;volatile
   490                           
   491                           ;main.c: 77: rampa_status=1;
   492  007ECC  0E01               	movlw	1
   493  007ECE  6E36               	movwf	_rampa_status,c
   494                           
   495                           ;main.c: 78: INTCONbits.INT0IF=0;
   496  007ED0  92F2               	bcf	intcon,1,c	;volatile
   497                           
   498                           ;main.c: 79: INTCONbits.INT0IE=1;
   499  007ED2  88F2               	bsf	intcon,4,c	;volatile
   500                           
   501                           ;main.c: 80: }break;
   502  007ED4  D03A               	goto	l1690
   503  007ED6                     l81:
   504                           
   505                           ;main.c: 82: LATDbits.LD2=0;
   506  007ED6  948C               	bcf	3980,2,c	;volatile
   507                           
   508                           ;main.c: 84: rampa_status=0;
   509  007ED8  0E00               	movlw	0
   510  007EDA  6E36               	movwf	_rampa_status,c
   511                           
   512                           ;main.c: 85: }break;
   513  007EDC  D036               	goto	l1690
   514  007EDE                     l1672:
   515                           
   516                           ;main.c: 87: if(!broadcast_flag){
   517  007EDE  5022               	movf	main@broadcast_flag,w,c
   518  007EE0  A4D8               	btfss	status,2,c
   519  007EE2  D033               	goto	l1690
   520                           
   521                           ;main.c: 88: LATDbits.LD2=1;
   522  007EE4  848C               	bsf	3980,2,c	;volatile
   523                           
   524                           ;main.c: 90: demora_envio=5;
   525  007EE6  0E05               	movlw	5
   526  007EE8  6E33               	movwf	_demora_envio,c
   527                           
   528                           ;main.c: 91: envio_status=1;
   529  007EEA  0E01               	movlw	1
   530  007EEC  6E34               	movwf	_envio_status,c
   531                           
   532                           ;main.c: 92: while(demora_envio);
   533  007EEE  D000               	goto	l1678
   534  007EF0                     l1678:
   535  007EF0  5033               	movf	_demora_envio,w,c
   536  007EF2  A4D8               	btfss	status,2,c
   537  007EF4  D7FD               	goto	l1678
   538                           
   539                           ;main.c: 93: informar(paquete,4);
   540  007EF6  0E23               	movlw	low main@paquete
   541  007EF8  6E10               	movwf	informar@dato,c
   542  007EFA  0E00               	movlw	high main@paquete
   543  007EFC  6E11               	movwf	informar@dato+1,c
   544  007EFE  0E04               	movlw	4
   545  007F00  6E12               	movwf	informar@longitud,c
   546  007F02  ECC3  F03D         	call	_informar	;wreg free
   547                           
   548                           ;main.c: 94: envio_status=0;
   549  007F06  0E00               	movlw	0
   550  007F08  6E34               	movwf	_envio_status,c
   551                           
   552                           ;main.c: 95: }
   553                           ;main.c: 96: }break;
   554  007F0A  D01F               	goto	l1690
   555  007F0C                     l87:
   556                           
   557                           ;main.c: 98: LATDbits.LD2=0;
   558  007F0C  948C               	bcf	3980,2,c	;volatile
   559                           
   560                           ;main.c: 100: tiempo_rampa=0;
   561  007F0E  0E00               	movlw	0
   562  007F10  6E2C               	movwf	_tiempo_rampa+1,c
   563  007F12  0E00               	movlw	0
   564  007F14  6E2B               	movwf	_tiempo_rampa,c
   565                           
   566                           ;main.c: 102: }
   567                           
   568                           ;main.c: 101: }break;
   569  007F16  D019               	goto	l1690
   570  007F18                     l1688:
   571  007F18  5032               	movf	_caracter_recibido,w,c
   572  007F1A  EC5D  F03E         	call	_decode
   573                           
   574                           ; Switch size 1, requested type "space"
   575                           ; Number of cases is 7, Range of values is 0 to 115
   576                           ; switch strategies available:
   577                           ; Name         Instructions Cycles
   578                           ; simple_byte           22    12 (average)
   579                           ;	Chosen strategy is simple_byte
   580  007F1E  0A00               	xorlw	0	; case 0
   581  007F20  B4D8               	btfsc	status,2,c
   582  007F22  D013               	goto	l1690
   583  007F24  0A62               	xorlw	98	; case 98
   584  007F26  B4D8               	btfsc	status,2,c
   585  007F28  D7CD               	goto	l1662
   586  007F2A  0A06               	xorlw	6	; case 100
   587  007F2C  B4D8               	btfsc	status,2,c
   588  007F2E  D7D3               	goto	l81
   589  007F30  0A08               	xorlw	8	; case 108
   590  007F32  B4D8               	btfsc	status,2,c
   591  007F34  D7D4               	goto	l1672
   592  007F36  0A1C               	xorlw	28	; case 112
   593  007F38  B4D8               	btfsc	status,2,c
   594  007F3A  D7C2               	goto	l1660
   595  007F3C  0A02               	xorlw	2	; case 114
   596  007F3E  B4D8               	btfsc	status,2,c
   597  007F40  D7E5               	goto	l87
   598  007F42  0A01               	xorlw	1	; case 115
   599  007F44  B4D8               	btfsc	status,2,c
   600  007F46  D7C1               	goto	l80
   601  007F48  D000               	goto	l1690
   602  007F4A                     l1690:
   603                           
   604                           ;main.c: 103: }
   605                           ;main.c: 106: if(tiempo_rampa !=backup_tiempo_rampa){
   606  007F4A  501F               	movf	main@backup_tiempo_rampa,w,c
   607  007F4C  182B               	xorwf	_tiempo_rampa,w,c
   608  007F4E  E104               	bnz	u680
   609  007F50  5020               	movf	main@backup_tiempo_rampa+1,w,c
   610  007F52  182C               	xorwf	_tiempo_rampa+1,w,c
   611  007F54  B4D8               	btfsc	status,2,c
   612  007F56  D048               	goto	l88
   613  007F58                     u680:
   614                           
   615                           ;main.c: 108: paquete[0]=tiempo_rampa/1000;
   616  007F58  C02B  F014         	movff	_tiempo_rampa,___lwdiv@dividend
   617  007F5C  C02C  F015         	movff	_tiempo_rampa+1,___lwdiv@dividend+1
   618  007F60  0E03               	movlw	3
   619  007F62  6E17               	movwf	___lwdiv@divisor+1,c
   620  007F64  0EE8               	movlw	232
   621  007F66  6E16               	movwf	___lwdiv@divisor,c
   622  007F68  EC2F  F03E         	call	___lwdiv	;wreg free
   623  007F6C  5014               	movf	?___lwdiv,w,c
   624  007F6E  6E23               	movwf	main@paquete,c
   625                           
   626                           ;main.c: 109: paquete[1]=(tiempo_rampa%1000)/100;
   627  007F70  0E03               	movlw	3
   628  007F72  6E12               	movwf	___lwmod@divisor+1,c
   629  007F74  0EE8               	movlw	232
   630  007F76  6E11               	movwf	___lwmod@divisor,c
   631  007F78  C02B  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   632  007F7C  C02C  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   633  007F80  ECE1  F03D         	call	___lwmod	;wreg free
   634  007F84  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   635  007F88  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   636  007F8C  0E00               	movlw	0
   637  007F8E  6E17               	movwf	___lwdiv@divisor+1,c
   638  007F90  0E64               	movlw	100
   639  007F92  6E16               	movwf	___lwdiv@divisor,c
   640  007F94  EC2F  F03E         	call	___lwdiv	;wreg free
   641  007F98  5014               	movf	?___lwdiv,w,c
   642  007F9A  6E24               	movwf	main@paquete+1,c
   643                           
   644                           ;main.c: 110: paquete[2]=(tiempo_rampa%100)/10;
   645  007F9C  0E00               	movlw	0
   646  007F9E  6E12               	movwf	___lwmod@divisor+1,c
   647  007FA0  0E64               	movlw	100
   648  007FA2  6E11               	movwf	___lwmod@divisor,c
   649  007FA4  C02B  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   650  007FA8  C02C  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   651  007FAC  ECE1  F03D         	call	___lwmod	;wreg free
   652  007FB0  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   653  007FB4  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   654  007FB8  0E00               	movlw	0
   655  007FBA  6E17               	movwf	___lwdiv@divisor+1,c
   656  007FBC  0E0A               	movlw	10
   657  007FBE  6E16               	movwf	___lwdiv@divisor,c
   658  007FC0  EC2F  F03E         	call	___lwdiv	;wreg free
   659  007FC4  5014               	movf	?___lwdiv,w,c
   660  007FC6  6E25               	movwf	main@paquete+2,c
   661                           
   662                           ;main.c: 111: paquete[3]=tiempo_rampa%10;
   663  007FC8  C02B  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   664  007FCC  C02C  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   665  007FD0  0E00               	movlw	0
   666  007FD2  6E12               	movwf	___lwmod@divisor+1,c
   667  007FD4  0E0A               	movlw	10
   668  007FD6  6E11               	movwf	___lwmod@divisor,c
   669  007FD8  ECE1  F03D         	call	___lwmod	;wreg free
   670  007FDC  500F               	movf	?___lwmod,w,c
   671  007FDE  6E26               	movwf	main@paquete+3,c
   672                           
   673                           ;main.c: 113: backup_tiempo_rampa=tiempo_rampa;
   674  007FE0  C02B  F01F         	movff	_tiempo_rampa,main@backup_tiempo_rampa
   675  007FE4  C02C  F020         	movff	_tiempo_rampa+1,main@backup_tiempo_rampa+1
   676  007FE8                     l88:
   677                           
   678                           ;main.c: 114: }
   679                           ;main.c: 115: Send_4Disp(paquete[0],paquete[1],paquete[2],paquete[3]);
   680  007FE8  C024  F011         	movff	main@paquete+1,Send_4Disp@Cent
   681  007FEC  C025  F012         	movff	main@paquete+2,Send_4Disp@Dec
   682  007FF0  C026  F013         	movff	main@paquete+3,Send_4Disp@Uni
   683  007FF4  5023               	movf	main@paquete,w,c
   684  007FF6  EC9A  F03E         	call	_Send_4Disp
   685  007FFA  D75A               	goto	l1656
   686  007FFC  EF0C  F010         	goto	start
   687  008000                     __end_of_main:
   688                           	opt stack 0
   689                           tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           intcon	equ	0xFF2
   694                           postinc0	equ	0xFEE
   695                           wreg	equ	0xFE8
   696                           status	equ	0xFD8
   697                           
   698 ;; *************** function _usart_ini13 *****************
   699 ;; Defined at:
   700 ;;		line 77 in file "Ap_ini.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;		None               void
   707 ;; Registers used:
   708 ;;		wreg, status,2
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   714 ;;      Params:         0       0       0       0       0       0       0       0       0
   715 ;;      Locals:         0       0       0       0       0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0       0       0       0       0
   717 ;;      Totals:         0       0       0       0       0       0       0       0       0
   718 ;;Total ram usage:        0 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    2
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text1
   729  007AFA                     __ptext1:
   730                           	opt stack 0
   731  007AFA                     _usart_ini13:
   732                           	opt stack 28
   733                           
   734                           ;Ap_ini.c: 82: TXSTAbits.BRGH = 1;
   735                           
   736                           ;incstack = 0
   737  007AFA  84AC               	bsf	4012,2,c	;volatile
   738                           
   739                           ;Ap_ini.c: 83: BAUDCONbits.BRG16=1;
   740  007AFC  86B8               	bsf	4024,3,c	;volatile
   741                           
   742                           ;Ap_ini.c: 84: TXSTAbits.SYNC = 0;
   743  007AFE  98AC               	bcf	4012,4,c	;volatile
   744                           
   745                           ;Ap_ini.c: 85: SPBRG = 0xE1;
   746  007B00  0EE1               	movlw	225
   747  007B02  6EAF               	movwf	4015,c	;volatile
   748                           
   749                           ;Ap_ini.c: 86: SPBRGH = 0x04;
   750  007B04  0E04               	movlw	4
   751  007B06  6EB0               	movwf	4016,c	;volatile
   752                           
   753                           ;Ap_ini.c: 87: RCSTAbits.SPEN = 1;
   754  007B08  8EAB               	bsf	4011,7,c	;volatile
   755                           
   756                           ;Ap_ini.c: 90: TXSTAbits.TX9 = 0;
   757  007B0A  9CAC               	bcf	4012,6,c	;volatile
   758                           
   759                           ;Ap_ini.c: 91: TXSTAbits.TXEN = 1;
   760  007B0C  8AAC               	bsf	4012,5,c	;volatile
   761                           
   762                           ;Ap_ini.c: 94: (void) RCREG;
   763  007B0E  50AE               	movf	4014,w,c	;volatile
   764                           
   765                           ;Ap_ini.c: 95: (void) RCREG;
   766  007B10  50AE               	movf	4014,w,c	;volatile
   767                           
   768                           ;Ap_ini.c: 96: (void) RCREG;
   769  007B12  50AE               	movf	4014,w,c	;volatile
   770                           
   771                           ;Ap_ini.c: 97: RCSTAbits.RX9 = 0 ;
   772  007B14  9CAB               	bcf	4011,6,c	;volatile
   773                           
   774                           ;Ap_ini.c: 98: PIE1bits.RCIE = 1;
   775  007B16  8A9D               	bsf	3997,5,c	;volatile
   776                           
   777                           ;Ap_ini.c: 99: RCSTAbits.CREN = 1;
   778  007B18  88AB               	bsf	4011,4,c	;volatile
   779                           
   780                           ;Ap_ini.c: 100: INTCONbits.PEIE = 1;
   781  007B1A  8CF2               	bsf	intcon,6,c	;volatile
   782                           
   783                           ;Ap_ini.c: 102: TRISCbits.RC6 = 1;
   784  007B1C  8C94               	bsf	3988,6,c	;volatile
   785                           
   786                           ;Ap_ini.c: 103: TRISCbits.RC7 = 1;
   787  007B1E  8E94               	bsf	3988,7,c	;volatile
   788  007B20  0012               	return		;funcret
   789  007B22                     __end_of_usart_ini13:
   790                           	opt stack 0
   791                           tblptru	equ	0xFF8
   792                           tblptrh	equ	0xFF7
   793                           tblptrl	equ	0xFF6
   794                           tablat	equ	0xFF5
   795                           intcon	equ	0xFF2
   796                           postinc0	equ	0xFEE
   797                           wreg	equ	0xFE8
   798                           status	equ	0xFD8
   799                           
   800 ;; *************** function _timer_ini13 *****************
   801 ;; Defined at:
   802 ;;		line 37 in file "Ap_ini.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;		None               void
   809 ;; Registers used:
   810 ;;		wreg, status,2
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   816 ;;      Params:         0       0       0       0       0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    2
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text2
   831  007ABA                     __ptext2:
   832                           	opt stack 0
   833  007ABA                     _timer_ini13:
   834                           	opt stack 28
   835                           
   836                           ;Ap_ini.c: 38: T0CONbits.TMR0ON = 0;
   837                           
   838                           ;incstack = 0
   839  007ABA  9ED5               	bcf	4053,7,c	;volatile
   840                           
   841                           ;Ap_ini.c: 39: T0CONbits.T08BIT = 1;
   842  007ABC  8CD5               	bsf	4053,6,c	;volatile
   843                           
   844                           ;Ap_ini.c: 40: T0CONbits.T0CS = 0;
   845  007ABE  9AD5               	bcf	4053,5,c	;volatile
   846                           
   847                           ;Ap_ini.c: 41: T0CONbits.PSA = 0;
   848  007AC0  96D5               	bcf	4053,3,c	;volatile
   849                           
   850                           ;Ap_ini.c: 42: T0CONbits.T0PS0 = 1;
   851  007AC2  80D5               	bsf	4053,0,c	;volatile
   852                           
   853                           ;Ap_ini.c: 43: T0CONbits.T0PS1 = 1;
   854  007AC4  82D5               	bsf	4053,1,c	;volatile
   855                           
   856                           ;Ap_ini.c: 44: T0CONbits.T0PS2 = 1;
   857  007AC6  84D5               	bsf	4053,2,c	;volatile
   858                           
   859                           ;Ap_ini.c: 45: TMR0L = 209;
   860  007AC8  0ED1               	movlw	209
   861  007ACA  6ED6               	movwf	4054,c	;volatile
   862                           
   863                           ;Ap_ini.c: 46: TMR0H = 0xFF;
   864  007ACC  68D7               	setf	4055,c	;volatile
   865                           
   866                           ;Ap_ini.c: 47: INTCONbits.TMR0IE = 1;
   867  007ACE  8AF2               	bsf	intcon,5,c	;volatile
   868                           
   869                           ;Ap_ini.c: 48: T0CONbits.TMR0ON = 1;
   870  007AD0  8ED5               	bsf	4053,7,c	;volatile
   871  007AD2  0012               	return		;funcret
   872  007AD4                     __end_of_timer_ini13:
   873                           	opt stack 0
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           intcon	equ	0xFF2
   879                           postinc0	equ	0xFEE
   880                           wreg	equ	0xFE8
   881                           status	equ	0xFD8
   882                           
   883 ;; *************** function _timer1_ini13 *****************
   884 ;; Defined at:
   885 ;;		line 51 in file "Ap_ini.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;		None               void
   892 ;; Registers used:
   893 ;;		wreg, status,2
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   899 ;;      Params:         0       0       0       0       0       0       0       0       0
   900 ;;      Locals:         0       0       0       0       0       0       0       0       0
   901 ;;      Temps:          0       0       0       0       0       0       0       0       0
   902 ;;      Totals:         0       0       0       0       0       0       0       0       0
   903 ;;Total ram usage:        0 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    2
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text3
   914  007A7C                     __ptext3:
   915                           	opt stack 0
   916  007A7C                     _timer1_ini13:
   917                           	opt stack 28
   918                           
   919                           ;Ap_ini.c: 53: T1CONbits.T1CKPS0=0;
   920                           
   921                           ;incstack = 0
   922  007A7C  98CD               	bcf	4045,4,c	;volatile
   923                           
   924                           ;Ap_ini.c: 54: T1CONbits.T1CKPS1=0;
   925  007A7E  9ACD               	bcf	4045,5,c	;volatile
   926                           
   927                           ;Ap_ini.c: 55: TMR1L=145;
   928  007A80  0E91               	movlw	145
   929  007A82  6ECE               	movwf	4046,c	;volatile
   930                           
   931                           ;Ap_ini.c: 56: TMR1H=0xFF;
   932  007A84  68CF               	setf	4047,c	;volatile
   933                           
   934                           ;Ap_ini.c: 57: PIR1bits.TMR1IF=0;
   935  007A86  909E               	bcf	3998,0,c	;volatile
   936                           
   937                           ;Ap_ini.c: 58: PIE1bits.TMR1IE=1;
   938  007A88  809D               	bsf	3997,0,c	;volatile
   939                           
   940                           ;Ap_ini.c: 59: T1CONbits.TMR1ON = 1;
   941  007A8A  80CD               	bsf	4045,0,c	;volatile
   942  007A8C  0012               	return		;funcret
   943  007A8E                     __end_of_timer1_ini13:
   944                           	opt stack 0
   945                           tblptru	equ	0xFF8
   946                           tblptrh	equ	0xFF7
   947                           tblptrl	equ	0xFF6
   948                           tablat	equ	0xFF5
   949                           intcon	equ	0xFF2
   950                           postinc0	equ	0xFEE
   951                           wreg	equ	0xFE8
   952                           status	equ	0xFD8
   953                           
   954 ;; *************** function _rampa_ini13 *****************
   955 ;; Defined at:
   956 ;;		line 5 in file "rampa.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;		None               void
   963 ;; Registers used:
   964 ;;		wreg, status,2
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   970 ;;      Params:         0       0       0       0       0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    2
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text4
   985  007A6A                     __ptext4:
   986                           	opt stack 0
   987  007A6A                     _rampa_ini13:
   988                           	opt stack 28
   989                           
   990                           ;rampa.c: 6: rampa_status = 0;
   991                           
   992                           ;incstack = 0
   993  007A6A  0E00               	movlw	0
   994  007A6C  6E36               	movwf	_rampa_status,c
   995                           
   996                           ;rampa.c: 7: tiempo_rampa = 0;
   997  007A6E  0E00               	movlw	0
   998  007A70  6E2C               	movwf	_tiempo_rampa+1,c
   999  007A72  0E00               	movlw	0
  1000  007A74  6E2B               	movwf	_tiempo_rampa,c
  1001                           
  1002                           ;rampa.c: 8: TRISBbits.RB7 = 0;
  1003  007A76  9E93               	bcf	3987,7,c	;volatile
  1004                           
  1005                           ;rampa.c: 9: INTCON2bits.INTEDG0=0;
  1006  007A78  9CF1               	bcf	intcon2,6,c	;volatile
  1007  007A7A  0012               	return		;funcret
  1008  007A7C                     __end_of_rampa_ini13:
  1009                           	opt stack 0
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           intcon	equ	0xFF2
  1015                           intcon2	equ	0xFF1
  1016                           postinc0	equ	0xFEE
  1017                           wreg	equ	0xFE8
  1018                           status	equ	0xFD8
  1019                           
  1020 ;; *************** function _pic_ini13 *****************
  1021 ;; Defined at:
  1022 ;;		line 9 in file "Ap_ini.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;		None               void
  1029 ;; Registers used:
  1030 ;;		wreg, status,2
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1036 ;;      Params:         0       0       0       0       0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1039 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1040 ;;Total ram usage:        0 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    2
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text5
  1051  007B22                     __ptext5:
  1052                           	opt stack 0
  1053  007B22                     _pic_ini13:
  1054                           	opt stack 28
  1055                           
  1056                           ;Ap_ini.c: 12: LATA = 0x00;
  1057                           
  1058                           ;incstack = 0
  1059  007B22  0E00               	movlw	0
  1060  007B24  6E89               	movwf	3977,c	;volatile
  1061                           
  1062                           ;Ap_ini.c: 13: LATB = 0x00;
  1063  007B26  0E00               	movlw	0
  1064  007B28  6E8A               	movwf	3978,c	;volatile
  1065                           
  1066                           ;Ap_ini.c: 14: LATC = 0x00;
  1067  007B2A  0E00               	movlw	0
  1068  007B2C  6E8B               	movwf	3979,c	;volatile
  1069                           
  1070                           ;Ap_ini.c: 15: LATD = 0x00;
  1071  007B2E  0E00               	movlw	0
  1072  007B30  6E8C               	movwf	3980,c	;volatile
  1073                           
  1074                           ;Ap_ini.c: 16: LATE = 0x00;
  1075  007B32  0E00               	movlw	0
  1076  007B34  6E8D               	movwf	3981,c	;volatile
  1077                           
  1078                           ;Ap_ini.c: 20: TRISD = 0xF0;
  1079  007B36  0EF0               	movlw	240
  1080  007B38  6E95               	movwf	3989,c	;volatile
  1081                           
  1082                           ;Ap_ini.c: 21: TRISCbits.RC6 = 0;
  1083  007B3A  9C94               	bcf	3988,6,c	;volatile
  1084                           
  1085                           ;Ap_ini.c: 22: TRISCbits.RC7 = 0;
  1086  007B3C  9E94               	bcf	3988,7,c	;volatile
  1087                           
  1088                           ;Ap_ini.c: 26: CMCON = 0x07;
  1089  007B3E  0E07               	movlw	7
  1090  007B40  6EB4               	movwf	4020,c	;volatile
  1091                           
  1092                           ;Ap_ini.c: 27: ADCON1 = 0x0F;
  1093  007B42  0E0F               	movlw	15
  1094  007B44  6EC1               	movwf	4033,c	;volatile
  1095                           
  1096                           ;Ap_ini.c: 28: TRISA = 0xC0;
  1097  007B46  0EC0               	movlw	192
  1098  007B48  6E92               	movwf	3986,c	;volatile
  1099                           
  1100                           ;Ap_ini.c: 29: TRISE = 0x00;
  1101  007B4A  0E00               	movlw	0
  1102  007B4C  6E96               	movwf	3990,c	;volatile
  1103                           
  1104                           ;Ap_ini.c: 33: TRISB = 0xFF;
  1105  007B4E  6893               	setf	3987,c	;volatile
  1106  007B50  0012               	return		;funcret
  1107  007B52                     __end_of_pic_ini13:
  1108                           	opt stack 0
  1109                           tblptru	equ	0xFF8
  1110                           tblptrh	equ	0xFF7
  1111                           tblptrl	equ	0xFF6
  1112                           tablat	equ	0xFF5
  1113                           intcon	equ	0xFF2
  1114                           intcon2	equ	0xFF1
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           status	equ	0xFD8
  1118                           
  1119 ;; *************** function _informar *****************
  1120 ;; Defined at:
  1121 ;;		line 66 in file "rampa.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  dato            2   15[COMRAM] PTR unsigned char 
  1124 ;;		 -> main@paquete(4), 
  1125 ;;  longitud        1   17[COMRAM] unsigned char 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  i               1   18[COMRAM] unsigned char 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;		None               void
  1130 ;; Registers used:
  1131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1137 ;;      Params:         3       0       0       0       0       0       0       0       0
  1138 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1140 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1141 ;;Total ram usage:        4 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    3
  1144 ;; This function calls:
  1145 ;;		_transmitir
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text6
  1152  007B86                     __ptext6:
  1153                           	opt stack 0
  1154  007B86                     _informar:
  1155                           	opt stack 27
  1156                           
  1157                           ;rampa.c: 67: char i=0;
  1158                           
  1159                           ;incstack = 0
  1160  007B86  0E00               	movlw	0
  1161  007B88  6E13               	movwf	informar@i,c
  1162                           
  1163                           ;rampa.c: 68: transmitir(slave_id);
  1164  007B8A  503D               	movf	_slave_id,w,c
  1165  007B8C  EC51  F03D         	call	_transmitir
  1166                           
  1167                           ;rampa.c: 69: for(i=0;i<longitud;i++) transmitir(*(dato+i)+48);
  1168  007B90  0E00               	movlw	0
  1169  007B92  6E13               	movwf	informar@i,c
  1170  007B94  D00E               	goto	l1560
  1171  007B96                     l1556:
  1172  007B96  5013               	movf	informar@i,w,c
  1173  007B98  0D01               	mullw	1
  1174  007B9A  50F3               	movf	prodl,w,c
  1175  007B9C  2410               	addwf	informar@dato,w,c
  1176  007B9E  6ED9               	movwf	fsr2l,c
  1177  007BA0  50F4               	movf	prodh,w,c
  1178  007BA2  2011               	addwfc	informar@dato+1,w,c
  1179  007BA4  6EDA               	movwf	fsr2h,c
  1180  007BA6  50DF               	movf	indf2,w,c
  1181  007BA8  0F30               	addlw	48
  1182  007BAA  EC51  F03D         	call	_transmitir
  1183  007BAE  2A13               	incf	informar@i,f,c
  1184  007BB0  D000               	goto	l1560
  1185  007BB2                     l1560:
  1186  007BB2  5012               	movf	informar@longitud,w,c
  1187  007BB4  5C13               	subwf	informar@i,w,c
  1188  007BB6  A0D8               	btfss	status,0,c
  1189  007BB8  D7EE               	goto	l1556
  1190                           
  1191                           ;rampa.c: 71: transmitir('f');
  1192  007BBA  0E66               	movlw	102
  1193  007BBC  EC51  F03D         	call	_transmitir
  1194  007BC0  0012               	return		;funcret
  1195  007BC2                     __end_of_informar:
  1196                           	opt stack 0
  1197                           tblptru	equ	0xFF8
  1198                           tblptrh	equ	0xFF7
  1199                           tblptrl	equ	0xFF6
  1200                           tablat	equ	0xFF5
  1201                           prodh	equ	0xFF4
  1202                           prodl	equ	0xFF3
  1203                           intcon	equ	0xFF2
  1204                           intcon2	equ	0xFF1
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           indf2	equ	0xFDF
  1208                           fsr2h	equ	0xFDA
  1209                           fsr2l	equ	0xFD9
  1210                           status	equ	0xFD8
  1211                           
  1212 ;; *************** function _transmitir *****************
  1213 ;; Defined at:
  1214 ;;		line 74 in file "rampa.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  Dato            1    wreg     unsigned char 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  Dato            1   14[COMRAM] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;		None               void
  1221 ;; Registers used:
  1222 ;;		wreg
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0
  1229 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1231 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1232 ;;Total ram usage:        1 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    2
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_informar
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text7
  1243  007AA2                     __ptext7:
  1244                           	opt stack 0
  1245  007AA2                     _transmitir:
  1246                           	opt stack 27
  1247                           
  1248                           ;incstack = 0
  1249                           ;transmitir@Dato stored from wreg
  1250  007AA2  6E0F               	movwf	transmitir@Dato,c
  1251                           
  1252                           ;rampa.c: 75: LATDbits.LD3=1;
  1253  007AA4  868C               	bsf	3980,3,c	;volatile
  1254                           
  1255                           ;rampa.c: 76: while(!TXSTAbits.TRMT);
  1256  007AA6  D000               	goto	l335
  1257  007AA8                     l335:
  1258  007AA8  A2AC               	btfss	4012,1,c	;volatile
  1259  007AAA  D7FE               	goto	l335
  1260                           
  1261                           ;rampa.c: 77: TXREG = Dato;
  1262  007AAC  C00F  FFAD         	movff	transmitir@Dato,4013	;volatile
  1263                           
  1264                           ;rampa.c: 78: while(!TXSTAbits.TRMT);
  1265  007AB0  D000               	goto	l338
  1266  007AB2                     l338:
  1267  007AB2  A2AC               	btfss	4012,1,c	;volatile
  1268  007AB4  D7FE               	goto	l338
  1269                           
  1270                           ;rampa.c: 79: LATDbits.LD3=0;
  1271  007AB6  968C               	bcf	3980,3,c	;volatile
  1272  007AB8  0012               	return		;funcret
  1273  007ABA                     __end_of_transmitir:
  1274                           	opt stack 0
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           prodh	equ	0xFF4
  1280                           prodl	equ	0xFF3
  1281                           intcon	equ	0xFF2
  1282                           intcon2	equ	0xFF1
  1283                           postinc0	equ	0xFEE
  1284                           wreg	equ	0xFE8
  1285                           indf2	equ	0xFDF
  1286                           fsr2h	equ	0xFDA
  1287                           fsr2l	equ	0xFD9
  1288                           status	equ	0xFD8
  1289                           
  1290 ;; *************** function _decode *****************
  1291 ;; Defined at:
  1292 ;;		line 22 in file "rampa.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  dato_a_decod    1    wreg     unsigned char 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  dato_a_decod    1   15[COMRAM] unsigned char 
  1297 ;;  retorno         1   14[COMRAM] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      unsigned char 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1307 ;;      Params:         0       0       0       0       0       0       0       0       0
  1308 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1310 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1311 ;;Total ram usage:        2 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    2
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text8
  1322  007CBA                     __ptext8:
  1323                           	opt stack 0
  1324  007CBA                     _decode:
  1325                           	opt stack 28
  1326                           
  1327                           ;incstack = 0
  1328                           ;decode@dato_a_decod stored from wreg
  1329  007CBA  6E10               	movwf	decode@dato_a_decod,c
  1330                           
  1331                           ;rampa.c: 26: static unsigned char est_rec=address;
  1332                           ;rampa.c: 28: static char com_rec;
  1333                           ;rampa.c: 29: unsigned char retorno;
  1334                           ;rampa.c: 31: switch(est_rec){
  1335  007CBC  D02D               	goto	l1150
  1336  007CBE                     l1116:
  1337                           
  1338                           ;rampa.c: 33: if(dato_a_decod==slave_id ){
  1339  007CBE  503D               	movf	_slave_id,w,c
  1340  007CC0  1810               	xorwf	decode@dato_a_decod,w,c
  1341  007CC2  A4D8               	btfss	status,2,c
  1342  007CC4  D005               	goto	l1124
  1343                           
  1344                           ;rampa.c: 34: est_rec++;
  1345  007CC6  2A38               	incf	decode@est_rec,f,c
  1346                           
  1347                           ;rampa.c: 35: dato_a_decod = 0;
  1348  007CC8  0E00               	movlw	0
  1349  007CCA  6E10               	movwf	decode@dato_a_decod,c
  1350                           
  1351                           ;rampa.c: 36: retorno='p';
  1352  007CCC  0E70               	movlw	112
  1353  007CCE  D017               	goto	L3
  1354  007CD0                     l1124:
  1355                           
  1356                           ;rampa.c: 38: else if(dato_a_decod == broadcast_id){
  1357  007CD0  0E1D               	movlw	low _broadcast_id
  1358  007CD2  6EF6               	movwf	tblptrl,c
  1359  007CD4                     	if	1	;There is more than 1 active tblptr byte
  1360  007CD4  0E20               	movlw	high _broadcast_id
  1361  007CD6  6EF7               	movwf	tblptrh,c
  1362  007CD8                     	endif
  1363  007CD8                     	if	0	;There are less than 3 active tblptr bytes
  1364  007CD8                     	endif
  1365  007CD8  0008               	tblrd		*
  1366  007CDA  50F5               	movf	tablat,w,c
  1367  007CDC  6210               	cpfseq	decode@dato_a_decod,c
  1368  007CDE  D027               	goto	l1152
  1369                           
  1370                           ;rampa.c: 39: est_rec++;
  1371  007CE0  2A38               	incf	decode@est_rec,f,c
  1372                           
  1373                           ;rampa.c: 40: dato_a_decod = 0;
  1374  007CE2  0E00               	movlw	0
  1375  007CE4  6E10               	movwf	decode@dato_a_decod,c
  1376                           
  1377                           ;rampa.c: 41: retorno='b';
  1378  007CE6  0E62               	movlw	98
  1379  007CE8  D00A               	goto	L3
  1380                           
  1381                           ;rampa.c: 42: }
  1382                           ;rampa.c: 43: }break;
  1383  007CEA  D021               	goto	l1152
  1384  007CEC                     l1132:
  1385                           
  1386                           ;rampa.c: 46: if(dato_a_decod){
  1387  007CEC  5010               	movf	decode@dato_a_decod,w,c
  1388  007CEE  B4D8               	btfsc	status,2,c
  1389  007CF0  D01E               	goto	l1152
  1390                           
  1391                           ;rampa.c: 47: com_rec=dato_a_decod;
  1392  007CF2  C010  F037         	movff	decode@dato_a_decod,decode@com_rec
  1393                           
  1394                           ;rampa.c: 48: est_rec++;
  1395  007CF6  2A38               	incf	decode@est_rec,f,c
  1396                           
  1397                           ;rampa.c: 49: dato_a_decod = 0;
  1398  007CF8  0E00               	movlw	0
  1399  007CFA  6E10               	movwf	decode@dato_a_decod,c
  1400                           
  1401                           ;rampa.c: 50: retorno=0;
  1402  007CFC  0E00               	movlw	0
  1403  007CFE                     L3:
  1404  007CFE  6E0F               	movwf	decode@retorno,c
  1405                           
  1406                           ;rampa.c: 52: }
  1407                           ;rampa.c: 53: }break;
  1408  007D00  D016               	goto	l1152
  1409  007D02                     l1142:
  1410                           
  1411                           ;rampa.c: 56: if(dato_a_decod=='f'){
  1412  007D02  0E66               	movlw	102
  1413  007D04  1810               	xorwf	decode@dato_a_decod,w,c
  1414  007D06  A4D8               	btfss	status,2,c
  1415  007D08  D012               	goto	l1152
  1416                           
  1417                           ;rampa.c: 57: est_rec=address;
  1418  007D0A  0E00               	movlw	0
  1419  007D0C  6E38               	movwf	decode@est_rec,c
  1420                           
  1421                           ;rampa.c: 58: retorno = com_rec;
  1422  007D0E  C037  F00F         	movff	decode@com_rec,decode@retorno
  1423                           
  1424                           ;rampa.c: 59: com_rec=0;
  1425  007D12  0E00               	movlw	0
  1426  007D14  6E37               	movwf	decode@com_rec,c
  1427                           
  1428                           ;rampa.c: 63: }
  1429                           
  1430                           ;rampa.c: 61: }
  1431                           ;rampa.c: 62: }break;
  1432  007D16  D00B               	goto	l1152
  1433  007D18                     l1150:
  1434  007D18  5038               	movf	decode@est_rec,w,c
  1435                           
  1436                           ; Switch size 1, requested type "space"
  1437                           ; Number of cases is 3, Range of values is 0 to 2
  1438                           ; switch strategies available:
  1439                           ; Name         Instructions Cycles
  1440                           ; simple_byte           10     6 (average)
  1441                           ;	Chosen strategy is simple_byte
  1442  007D1A  0A00               	xorlw	0	; case 0
  1443  007D1C  B4D8               	btfsc	status,2,c
  1444  007D1E  D7CF               	goto	l1116
  1445  007D20  0A01               	xorlw	1	; case 1
  1446  007D22  B4D8               	btfsc	status,2,c
  1447  007D24  D7E3               	goto	l1132
  1448  007D26  0A03               	xorlw	3	; case 2
  1449  007D28  B4D8               	btfsc	status,2,c
  1450  007D2A  D7EB               	goto	l1142
  1451  007D2C  D000               	goto	l1152
  1452  007D2E                     l1152:
  1453                           
  1454                           ;rampa.c: 64: return retorno;
  1455  007D2E  500F               	movf	decode@retorno,w,c
  1456  007D30  D000               	goto	l326
  1457  007D32                     l326:
  1458  007D32  0012               	return		;funcret
  1459  007D34                     __end_of_decode:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           prodh	equ	0xFF4
  1466                           prodl	equ	0xFF3
  1467                           intcon	equ	0xFF2
  1468                           intcon2	equ	0xFF1
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           indf2	equ	0xFDF
  1472                           fsr2h	equ	0xFDA
  1473                           fsr2l	equ	0xFD9
  1474                           status	equ	0xFD8
  1475                           
  1476 ;; *************** function _assign_id *****************
  1477 ;; Defined at:
  1478 ;;		line 12 in file "rampa.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  id              1    wreg     unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  id              1   14[COMRAM] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;		None               void
  1485 ;; Registers used:
  1486 ;;		wreg
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1492 ;;      Params:         0       0       0       0       0       0       0       0       0
  1493 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1495 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1496 ;;Total ram usage:        1 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    2
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text9
  1507  007A56                     __ptext9:
  1508                           	opt stack 0
  1509  007A56                     _assign_id:
  1510                           	opt stack 28
  1511                           
  1512                           ;incstack = 0
  1513                           ;assign_id@id stored from wreg
  1514  007A56  6E0F               	movwf	assign_id@id,c
  1515                           
  1516                           ;rampa.c: 13: slave_id=id;
  1517  007A58  C00F  F03D         	movff	assign_id@id,_slave_id
  1518  007A5C  0012               	return		;funcret
  1519  007A5E                     __end_of_assign_id:
  1520                           	opt stack 0
  1521                           tblptru	equ	0xFF8
  1522                           tblptrh	equ	0xFF7
  1523                           tblptrl	equ	0xFF6
  1524                           tablat	equ	0xFF5
  1525                           prodh	equ	0xFF4
  1526                           prodl	equ	0xFF3
  1527                           intcon	equ	0xFF2
  1528                           intcon2	equ	0xFF1
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           indf2	equ	0xFDF
  1532                           fsr2h	equ	0xFDA
  1533                           fsr2l	equ	0xFD9
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function ___lwmod *****************
  1537 ;; Defined at:
  1538 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  dividend        2   14[COMRAM] unsigned int 
  1541 ;;  divisor         2   16[COMRAM] unsigned int 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  counter         1   18[COMRAM] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  2   14[COMRAM] unsigned int 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1553 ;;      Params:         4       0       0       0       0       0       0       0       0
  1554 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1556 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1557 ;;Total ram usage:        5 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    2
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text10
  1568  007BC2                     __ptext10:
  1569                           	opt stack 0
  1570  007BC2                     ___lwmod:
  1571                           	opt stack 28
  1572                           
  1573                           ;incstack = 0
  1574  007BC2  5011               	movf	___lwmod@divisor,w,c
  1575  007BC4  1012               	iorwf	___lwmod@divisor+1,w,c
  1576  007BC6  B4D8               	btfsc	status,2,c
  1577  007BC8  D01D               	goto	l947
  1578  007BCA  0E01               	movlw	1
  1579  007BCC  6E13               	movwf	___lwmod@counter,c
  1580  007BCE  D005               	goto	l1630
  1581  007BD0                     l1628:
  1582  007BD0  90D8               	bcf	status,0,c
  1583  007BD2  3611               	rlcf	___lwmod@divisor,f,c
  1584  007BD4  3612               	rlcf	___lwmod@divisor+1,f,c
  1585  007BD6  2A13               	incf	___lwmod@counter,f,c
  1586  007BD8  D000               	goto	l1630
  1587  007BDA                     l1630:
  1588  007BDA  BE12               	btfsc	___lwmod@divisor+1,7,c
  1589  007BDC  D002               	goto	l1632
  1590  007BDE  D7F8               	goto	l1628
  1591  007BE0  D000               	goto	l1632
  1592  007BE2                     l1632:
  1593  007BE2  5011               	movf	___lwmod@divisor,w,c
  1594  007BE4  5C0F               	subwf	___lwmod@dividend,w,c
  1595  007BE6  5012               	movf	___lwmod@divisor+1,w,c
  1596  007BE8  5810               	subwfb	___lwmod@dividend+1,w,c
  1597  007BEA  A0D8               	btfss	status,0,c
  1598  007BEC  D005               	goto	l1636
  1599  007BEE  5011               	movf	___lwmod@divisor,w,c
  1600  007BF0  5E0F               	subwf	___lwmod@dividend,f,c
  1601  007BF2  5012               	movf	___lwmod@divisor+1,w,c
  1602  007BF4  5A10               	subwfb	___lwmod@dividend+1,f,c
  1603  007BF6  D000               	goto	l1636
  1604  007BF8                     l1636:
  1605  007BF8  90D8               	bcf	status,0,c
  1606  007BFA  3212               	rrcf	___lwmod@divisor+1,f,c
  1607  007BFC  3211               	rrcf	___lwmod@divisor,f,c
  1608  007BFE  2E13               	decfsz	___lwmod@counter,f,c
  1609  007C00  D7F0               	goto	l1632
  1610  007C02  D000               	goto	l947
  1611  007C04                     l947:
  1612  007C04  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  1613  007C08  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  1614  007C0C  0012               	return		;funcret
  1615  007C0E                     __end_of___lwmod:
  1616                           	opt stack 0
  1617                           tblptru	equ	0xFF8
  1618                           tblptrh	equ	0xFF7
  1619                           tblptrl	equ	0xFF6
  1620                           tablat	equ	0xFF5
  1621                           prodh	equ	0xFF4
  1622                           prodl	equ	0xFF3
  1623                           intcon	equ	0xFF2
  1624                           intcon2	equ	0xFF1
  1625                           postinc0	equ	0xFEE
  1626                           wreg	equ	0xFE8
  1627                           indf2	equ	0xFDF
  1628                           fsr2h	equ	0xFDA
  1629                           fsr2l	equ	0xFD9
  1630                           status	equ	0xFD8
  1631                           
  1632 ;; *************** function ___lwdiv *****************
  1633 ;; Defined at:
  1634 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  dividend        2   19[COMRAM] unsigned int 
  1637 ;;  divisor         2   21[COMRAM] unsigned int 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  quotient        2   23[COMRAM] unsigned int 
  1640 ;;  counter         1   25[COMRAM] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  2   19[COMRAM] unsigned int 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1650 ;;      Params:         4       0       0       0       0       0       0       0       0
  1651 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1653 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1654 ;;Total ram usage:        7 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    2
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text11
  1665  007C5E                     __ptext11:
  1666                           	opt stack 0
  1667  007C5E                     ___lwdiv:
  1668                           	opt stack 28
  1669                           
  1670                           ;incstack = 0
  1671  007C5E  0E00               	movlw	0
  1672  007C60  6E19               	movwf	___lwdiv@quotient+1,c
  1673  007C62  0E00               	movlw	0
  1674  007C64  6E18               	movwf	___lwdiv@quotient,c
  1675  007C66  5016               	movf	___lwdiv@divisor,w,c
  1676  007C68  1017               	iorwf	___lwdiv@divisor+1,w,c
  1677  007C6A  B4D8               	btfsc	status,2,c
  1678  007C6C  D021               	goto	l937
  1679  007C6E  0E01               	movlw	1
  1680  007C70  6E1A               	movwf	___lwdiv@counter,c
  1681  007C72  D005               	goto	l1610
  1682  007C74                     l1608:
  1683  007C74  90D8               	bcf	status,0,c
  1684  007C76  3616               	rlcf	___lwdiv@divisor,f,c
  1685  007C78  3617               	rlcf	___lwdiv@divisor+1,f,c
  1686  007C7A  2A1A               	incf	___lwdiv@counter,f,c
  1687  007C7C  D000               	goto	l1610
  1688  007C7E                     l1610:
  1689  007C7E  BE17               	btfsc	___lwdiv@divisor+1,7,c
  1690  007C80  D002               	goto	l1612
  1691  007C82  D7F8               	goto	l1608
  1692  007C84  D000               	goto	l1612
  1693  007C86                     l1612:
  1694  007C86  90D8               	bcf	status,0,c
  1695  007C88  3618               	rlcf	___lwdiv@quotient,f,c
  1696  007C8A  3619               	rlcf	___lwdiv@quotient+1,f,c
  1697  007C8C  5016               	movf	___lwdiv@divisor,w,c
  1698  007C8E  5C14               	subwf	___lwdiv@dividend,w,c
  1699  007C90  5017               	movf	___lwdiv@divisor+1,w,c
  1700  007C92  5815               	subwfb	___lwdiv@dividend+1,w,c
  1701  007C94  A0D8               	btfss	status,0,c
  1702  007C96  D006               	goto	l1620
  1703  007C98  5016               	movf	___lwdiv@divisor,w,c
  1704  007C9A  5E14               	subwf	___lwdiv@dividend,f,c
  1705  007C9C  5017               	movf	___lwdiv@divisor+1,w,c
  1706  007C9E  5A15               	subwfb	___lwdiv@dividend+1,f,c
  1707  007CA0  8018               	bsf	___lwdiv@quotient,0,c
  1708  007CA2  D000               	goto	l1620
  1709  007CA4                     l1620:
  1710  007CA4  90D8               	bcf	status,0,c
  1711  007CA6  3217               	rrcf	___lwdiv@divisor+1,f,c
  1712  007CA8  3216               	rrcf	___lwdiv@divisor,f,c
  1713  007CAA  2E1A               	decfsz	___lwdiv@counter,f,c
  1714  007CAC  D7EC               	goto	l1612
  1715  007CAE  D000               	goto	l937
  1716  007CB0                     l937:
  1717  007CB0  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  1718  007CB4  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1719  007CB8  0012               	return		;funcret
  1720  007CBA                     __end_of___lwdiv:
  1721                           	opt stack 0
  1722                           tblptru	equ	0xFF8
  1723                           tblptrh	equ	0xFF7
  1724                           tblptrl	equ	0xFF6
  1725                           tablat	equ	0xFF5
  1726                           prodh	equ	0xFF4
  1727                           prodl	equ	0xFF3
  1728                           intcon	equ	0xFF2
  1729                           intcon2	equ	0xFF1
  1730                           postinc0	equ	0xFEE
  1731                           wreg	equ	0xFE8
  1732                           indf2	equ	0xFDF
  1733                           fsr2h	equ	0xFDA
  1734                           fsr2l	equ	0xFD9
  1735                           status	equ	0xFD8
  1736                           
  1737 ;; *************** function _Send_4Disp *****************
  1738 ;; Defined at:
  1739 ;;		line 74 in file "Lemos.C"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  Umil            1    wreg     unsigned char 
  1742 ;;  Cent            1   16[COMRAM] unsigned char 
  1743 ;;  Dec             1   17[COMRAM] unsigned char 
  1744 ;;  Uni             1   18[COMRAM] unsigned char 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  Umil            1   19[COMRAM] unsigned char 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;		None               void
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1756 ;;      Params:         3       0       0       0       0       0       0       0       0
  1757 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1759 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1760 ;;Total ram usage:        4 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    3
  1763 ;; This function calls:
  1764 ;;		_Send_Disp
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text12
  1771  007D34                     __ptext12:
  1772                           	opt stack 0
  1773  007D34                     _Send_4Disp:
  1774                           	opt stack 27
  1775                           
  1776                           ;incstack = 0
  1777                           ;Send_4Disp@Umil stored from wreg
  1778  007D34  6E14               	movwf	Send_4Disp@Umil,c
  1779                           
  1780                           ;Lemos.C: 76: static unsigned char Nro_Disp=1;
  1781                           ;Lemos.C: 78: switch(Nro_Disp){
  1782  007D36  D036               	goto	l1600
  1783  007D38                     l1566:
  1784                           
  1785                           ;Lemos.C: 80: if(!mux_tout){
  1786  007D38  5035               	movf	_mux_tout,w,c
  1787  007D3A  A4D8               	btfss	status,2,c
  1788  007D3C  D041               	goto	l240
  1789                           
  1790                           ;Lemos.C: 81: Send_Disp(1,Umil);
  1791  007D3E  C014  F00F         	movff	Send_4Disp@Umil,Send_Disp@Dato
  1792  007D42  0E01               	movlw	1
  1793  007D44  EC07  F03E         	call	_Send_Disp
  1794                           
  1795                           ;Lemos.C: 82: mux_tout = 4;;
  1796  007D48  0E04               	movlw	4
  1797  007D4A  6E35               	movwf	_mux_tout,c
  1798                           
  1799                           ;Lemos.C: 83: Nro_Disp = 2;
  1800  007D4C  0E02               	movlw	2
  1801  007D4E  D025               	goto	L6
  1802                           
  1803                           ;Lemos.C: 84: }
  1804                           ;Lemos.C: 85: }
  1805                           ;Lemos.C: 86: break;
  1806  007D50  D037               	goto	l240
  1807  007D52                     l1574:
  1808                           
  1809                           ;Lemos.C: 88: if(!mux_tout){
  1810  007D52  5035               	movf	_mux_tout,w,c
  1811  007D54  A4D8               	btfss	status,2,c
  1812  007D56  D034               	goto	l240
  1813                           
  1814                           ;Lemos.C: 89: Send_Disp(2,Cent);
  1815  007D58  C011  F00F         	movff	Send_4Disp@Cent,Send_Disp@Dato
  1816  007D5C  0E02               	movlw	2
  1817  007D5E  EC07  F03E         	call	_Send_Disp
  1818                           
  1819                           ;Lemos.C: 90: mux_tout = 4;;
  1820  007D62  0E04               	movlw	4
  1821  007D64  6E35               	movwf	_mux_tout,c
  1822                           
  1823                           ;Lemos.C: 91: Nro_Disp = 3;
  1824  007D66  0E03               	movlw	3
  1825  007D68  D018               	goto	L6
  1826                           
  1827                           ;Lemos.C: 92: }
  1828                           ;Lemos.C: 93: }
  1829                           ;Lemos.C: 94: break;
  1830  007D6A  D02A               	goto	l240
  1831  007D6C                     l1582:
  1832                           
  1833                           ;Lemos.C: 96: if(!mux_tout){
  1834  007D6C  5035               	movf	_mux_tout,w,c
  1835  007D6E  A4D8               	btfss	status,2,c
  1836  007D70  D027               	goto	l240
  1837                           
  1838                           ;Lemos.C: 97: Send_Disp(3,Dec);
  1839  007D72  C012  F00F         	movff	Send_4Disp@Dec,Send_Disp@Dato
  1840  007D76  0E03               	movlw	3
  1841  007D78  EC07  F03E         	call	_Send_Disp
  1842                           
  1843                           ;Lemos.C: 98: mux_tout = 4;;
  1844  007D7C  0E04               	movlw	4
  1845  007D7E  6E35               	movwf	_mux_tout,c
  1846                           
  1847                           ;Lemos.C: 99: Nro_Disp = 4;
  1848  007D80  0E04               	movlw	4
  1849  007D82  D00B               	goto	L6
  1850                           
  1851                           ;Lemos.C: 100: }
  1852                           ;Lemos.C: 101: }
  1853                           ;Lemos.C: 102: break;
  1854  007D84  D01D               	goto	l240
  1855  007D86                     l1590:
  1856                           
  1857                           ;Lemos.C: 104: if(!mux_tout){
  1858  007D86  5035               	movf	_mux_tout,w,c
  1859  007D88  A4D8               	btfss	status,2,c
  1860  007D8A  D01A               	goto	l240
  1861                           
  1862                           ;Lemos.C: 105: Send_Disp(4,Uni);
  1863  007D8C  C013  F00F         	movff	Send_4Disp@Uni,Send_Disp@Dato
  1864  007D90  0E04               	movlw	4
  1865  007D92  EC07  F03E         	call	_Send_Disp
  1866  007D96  D003               	goto	l1598
  1867  007D98                     l1596:
  1868                           
  1869                           ;Lemos.C: 107: Nro_Disp = 1;
  1870  007D98  0E01               	movlw	1
  1871  007D9A                     L6:
  1872  007D9A  6E3A               	movwf	Send_4Disp@Nro_Disp,c
  1873                           
  1874                           ;Lemos.C: 108: }
  1875                           ;Lemos.C: 109: }
  1876                           ;Lemos.C: 110: break;
  1877  007D9C  D011               	goto	l240
  1878  007D9E                     l1598:
  1879                           
  1880                           ;Lemos.C: 112: mux_tout = 4;;
  1881  007D9E  0E04               	movlw	4
  1882  007DA0  6E35               	movwf	_mux_tout,c
  1883  007DA2  D7FA               	goto	l1596
  1884  007DA4                     l1600:
  1885  007DA4  503A               	movf	Send_4Disp@Nro_Disp,w,c
  1886                           
  1887                           ; Switch size 1, requested type "space"
  1888                           ; Number of cases is 4, Range of values is 1 to 4
  1889                           ; switch strategies available:
  1890                           ; Name         Instructions Cycles
  1891                           ; simple_byte           13     7 (average)
  1892                           ;	Chosen strategy is simple_byte
  1893  007DA6  0A01               	xorlw	1	; case 1
  1894  007DA8  B4D8               	btfsc	status,2,c
  1895  007DAA  D7C6               	goto	l1566
  1896  007DAC  0A03               	xorlw	3	; case 2
  1897  007DAE  B4D8               	btfsc	status,2,c
  1898  007DB0  D7D0               	goto	l1574
  1899  007DB2  0A01               	xorlw	1	; case 3
  1900  007DB4  B4D8               	btfsc	status,2,c
  1901  007DB6  D7DA               	goto	l1582
  1902  007DB8  0A07               	xorlw	7	; case 4
  1903  007DBA  B4D8               	btfsc	status,2,c
  1904  007DBC  D7E4               	goto	l1590
  1905  007DBE  D7EF               	goto	l1598
  1906  007DC0                     l240:
  1907  007DC0  0012               	return		;funcret
  1908  007DC2                     __end_of_Send_4Disp:
  1909                           	opt stack 0
  1910                           tblptru	equ	0xFF8
  1911                           tblptrh	equ	0xFF7
  1912                           tblptrl	equ	0xFF6
  1913                           tablat	equ	0xFF5
  1914                           prodh	equ	0xFF4
  1915                           prodl	equ	0xFF3
  1916                           intcon	equ	0xFF2
  1917                           intcon2	equ	0xFF1
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           indf2	equ	0xFDF
  1921                           fsr2h	equ	0xFDA
  1922                           fsr2l	equ	0xFD9
  1923                           status	equ	0xFD8
  1924                           
  1925 ;; *************** function _Send_Disp *****************
  1926 ;; Defined at:
  1927 ;;		line 43 in file "Lemos.C"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  NroDisp         1    wreg     unsigned char 
  1930 ;;  Dato            1   14[COMRAM] unsigned char 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  NroDisp         1   15[COMRAM] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;		None               void
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1942 ;;      Params:         1       0       0       0       0       0       0       0       0
  1943 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1945 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1946 ;;Total ram usage:        2 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    2
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_Send_4Disp
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text13
  1957  007C0E                     __ptext13:
  1958                           	opt stack 0
  1959  007C0E                     _Send_Disp:
  1960                           	opt stack 27
  1961                           
  1962                           ;incstack = 0
  1963                           ;Send_Disp@NroDisp stored from wreg
  1964  007C0E  6E10               	movwf	Send_Disp@NroDisp,c
  1965                           
  1966                           ;Lemos.C: 45: LATA = 0;
  1967  007C10  0E00               	movlw	0
  1968  007C12  6E89               	movwf	3977,c	;volatile
  1969                           
  1970                           ;Lemos.C: 47: LATAbits.LA4 = 0;
  1971  007C14  9889               	bcf	3977,4,c	;volatile
  1972                           
  1973                           ;Lemos.C: 48: LATAbits.LA5 = 0;
  1974  007C16  9A89               	bcf	3977,5,c	;volatile
  1975                           
  1976                           ;Lemos.C: 49: LATEbits.LATE0 = 0;
  1977  007C18  908D               	bcf	3981,0,c	;volatile
  1978                           
  1979                           ;Lemos.C: 50: LATEbits.LATE1 = 0;
  1980  007C1A  928D               	bcf	3981,1,c	;volatile
  1981                           
  1982                           ;Lemos.C: 52: switch(NroDisp){
  1983  007C1C  D008               	goto	l1546
  1984  007C1E                     l220:
  1985                           
  1986                           ;Lemos.C: 57: LATAbits.LA5 = 1;
  1987  007C1E  8A89               	bsf	3977,5,c	;volatile
  1988                           
  1989                           ;Lemos.C: 58: }break;
  1990  007C20  D014               	goto	l1548
  1991  007C22                     l221:
  1992                           
  1993                           ;Lemos.C: 60: LATEbits.LATE0 = 1;
  1994  007C22  808D               	bsf	3981,0,c	;volatile
  1995                           
  1996                           ;Lemos.C: 61: }break;
  1997  007C24  D012               	goto	l1548
  1998  007C26                     l222:
  1999                           
  2000                           ;Lemos.C: 63: LATEbits.LATE1 = 1;
  2001  007C26  828D               	bsf	3981,1,c	;volatile
  2002                           
  2003                           ;Lemos.C: 64: }break;
  2004  007C28  D010               	goto	l1548
  2005  007C2A                     l223:
  2006                           
  2007                           ;Lemos.C: 66: LATAbits.LA4 = 1;
  2008  007C2A  8889               	bsf	3977,4,c	;volatile
  2009                           
  2010                           ;Lemos.C: 68: }
  2011                           
  2012                           ;Lemos.C: 67: }break;
  2013  007C2C  D00E               	goto	l1548
  2014  007C2E                     l1546:
  2015  007C2E  5010               	movf	Send_Disp@NroDisp,w,c
  2016                           
  2017                           ; Switch size 1, requested type "space"
  2018                           ; Number of cases is 4, Range of values is 1 to 4
  2019                           ; switch strategies available:
  2020                           ; Name         Instructions Cycles
  2021                           ; simple_byte           13     7 (average)
  2022                           ;	Chosen strategy is simple_byte
  2023  007C30  0A01               	xorlw	1	; case 1
  2024  007C32  B4D8               	btfsc	status,2,c
  2025  007C34  D7FA               	goto	l223
  2026  007C36  0A03               	xorlw	3	; case 2
  2027  007C38  B4D8               	btfsc	status,2,c
  2028  007C3A  D7F1               	goto	l220
  2029  007C3C  0A01               	xorlw	1	; case 3
  2030  007C3E  B4D8               	btfsc	status,2,c
  2031  007C40  D7F0               	goto	l221
  2032  007C42  0A07               	xorlw	7	; case 4
  2033  007C44  B4D8               	btfsc	status,2,c
  2034  007C46  D7EF               	goto	l222
  2035  007C48  D7F0               	goto	l223
  2036  007C4A                     l1548:
  2037                           
  2038                           ;Lemos.C: 69: Dato = Dato & 0x0F;
  2039  007C4A  500F               	movf	Send_Disp@Dato,w,c
  2040  007C4C  0B0F               	andlw	15
  2041  007C4E  6E0F               	movwf	Send_Disp@Dato,c
  2042                           
  2043                           ;Lemos.C: 70: LATA = LATA & 0xF0;
  2044  007C50  5089               	movf	3977,w,c	;volatile
  2045  007C52  0BF0               	andlw	240
  2046  007C54  6E89               	movwf	3977,c	;volatile
  2047                           
  2048                           ;Lemos.C: 71: LATA = LATA | Dato;
  2049  007C56  5089               	movf	3977,w,c	;volatile
  2050  007C58  100F               	iorwf	Send_Disp@Dato,w,c
  2051  007C5A  6E89               	movwf	3977,c	;volatile
  2052  007C5C  0012               	return		;funcret
  2053  007C5E                     __end_of_Send_Disp:
  2054                           	opt stack 0
  2055                           tblptru	equ	0xFF8
  2056                           tblptrh	equ	0xFF7
  2057                           tblptrl	equ	0xFF6
  2058                           tablat	equ	0xFF5
  2059                           prodh	equ	0xFF4
  2060                           prodl	equ	0xFF3
  2061                           intcon	equ	0xFF2
  2062                           intcon2	equ	0xFF1
  2063                           postinc0	equ	0xFEE
  2064                           wreg	equ	0xFE8
  2065                           indf2	equ	0xFDF
  2066                           fsr2h	equ	0xFDA
  2067                           fsr2l	equ	0xFD9
  2068                           status	equ	0xFD8
  2069                           
  2070 ;; *************** function _myISR *****************
  2071 ;; Defined at:
  2072 ;;		line 119 in file "main.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;		None               void
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2086 ;;      Params:         0       0       0       0       0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2088 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2089 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2090 ;;Total ram usage:       14 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    1
  2093 ;; This function calls:
  2094 ;;		_ENVIO_tic
  2095 ;;		_RAMPA_tic
  2096 ;;		_tic_timer0
  2097 ;; This function is called by:
  2098 ;;		Interrupt level 2
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	intcode
  2103  002008                     __pintcode:
  2104                           	opt stack 0
  2105  002008                     _myISR:
  2106                           	opt stack 27
  2107                           
  2108                           ;incstack = 0
  2109  002008  CFFA F001          	movff	pclath,??_myISR
  2110  00200C  CFFB F002          	movff	pclatu,??_myISR+1
  2111  002010  CFE9 F003          	movff	fsr0l,??_myISR+2
  2112  002014  EDE1  F03E         	call	int_func,f	;refresh shadow registers
  2113                           pclatu	equ	0xFFB
  2114                           pclath	equ	0xFFA
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           prodh	equ	0xFF4
  2120                           prodl	equ	0xFF3
  2121                           intcon	equ	0xFF2
  2122                           intcon2	equ	0xFF1
  2123                           postinc0	equ	0xFEE
  2124                           fsr0l	equ	0xFE9
  2125                           wreg	equ	0xFE8
  2126                           indf2	equ	0xFDF
  2127                           fsr2h	equ	0xFDA
  2128                           fsr2l	equ	0xFD9
  2129                           status	equ	0xFD8
  2130                           
  2131                           	psect	intcode_body
  2132  007DC2                     __pintcode_body:
  2133                           	opt stack 27
  2134  007DC2                     int_func:
  2135                           	opt stack 27
  2136  007DC2  0006               	pop		; remove dummy address from shadow register refresh
  2137  007DC4  CFEA F004          	movff	fsr0h,??_myISR+3
  2138  007DC8  CFE1 F005          	movff	fsr1l,??_myISR+4
  2139  007DCC  CFE2 F006          	movff	fsr1h,??_myISR+5
  2140  007DD0  CFD9 F007          	movff	fsr2l,??_myISR+6
  2141  007DD4  CFDA F008          	movff	fsr2h,??_myISR+7
  2142  007DD8  CFF3 F009          	movff	prodl,??_myISR+8
  2143  007DDC  CFF4 F00A          	movff	prodh,??_myISR+9
  2144  007DE0  CFF6 F00B          	movff	tblptrl,??_myISR+10
  2145  007DE4  CFF7 F00C          	movff	tblptrh,??_myISR+11
  2146  007DE8  CFF8 F00D          	movff	tblptru,??_myISR+12
  2147  007DEC  CFF5 F00E          	movff	tablat,??_myISR+13
  2148                           
  2149                           ;main.c: 128: if(TMR0IF){
  2150  007DF0  A4F2               	btfss	intcon,2,c	;volatile
  2151  007DF2  D012               	goto	i2l1326
  2152                           
  2153                           ;main.c: 129: INTCONbits.TMR0IF = 0;
  2154  007DF4  94F2               	bcf	intcon,2,c	;volatile
  2155                           
  2156                           ;main.c: 130: TMR0L = 209;
  2157  007DF6  0ED1               	movlw	209
  2158  007DF8  6ED6               	movwf	4054,c	;volatile
  2159                           
  2160                           ;main.c: 131: TMR0H = 0xFF;
  2161  007DFA  68D7               	setf	4055,c	;volatile
  2162                           
  2163                           ;main.c: 133: tic_timer0();
  2164  007DFC  EC6A  F03D         	call	_tic_timer0	;wreg free
  2165                           
  2166                           ;main.c: 139: if(rampa_status) RAMPA_tic();
  2167  007E00  5036               	movf	_rampa_status,w,c
  2168  007E02  B4D8               	btfsc	status,2,c
  2169  007E04  D003               	goto	i2l1322
  2170  007E06  EC47  F03D         	call	_RAMPA_tic	;wreg free
  2171  007E0A  D000               	goto	i2l1322
  2172  007E0C                     i2l1322:
  2173                           
  2174                           ;main.c: 140: if(demora_envio) ENVIO_tic();
  2175  007E0C  5033               	movf	_demora_envio,w,c
  2176  007E0E  B4D8               	btfsc	status,2,c
  2177  007E10  D003               	goto	i2l1326
  2178  007E12  EC2F  F03D         	call	_ENVIO_tic	;wreg free
  2179  007E16  D000               	goto	i2l1326
  2180  007E18                     i2l1326:
  2181                           
  2182                           ;main.c: 143: }
  2183                           ;main.c: 146: if(TMR1IF){
  2184  007E18  A09E               	btfss	3998,0,c	;volatile
  2185  007E1A  D006               	goto	i2l1336
  2186                           
  2187                           ;main.c: 147: PIR1bits.TMR1IF = 0;
  2188  007E1C  909E               	bcf	3998,0,c	;volatile
  2189                           
  2190                           ;main.c: 148: TMR1L=144;
  2191  007E1E  0E90               	movlw	144
  2192  007E20  6ECE               	movwf	4046,c	;volatile
  2193                           
  2194                           ;main.c: 149: TMR1H=0xFF;
  2195  007E22  68CF               	setf	4047,c	;volatile
  2196                           
  2197                           ;main.c: 150: LATBbits.LATB7 =~ LATBbits.LATB7;
  2198  007E24  7E8A               	btg	3978,7,c	;volatile
  2199  007E26  D000               	goto	i2l1336
  2200  007E28                     i2l1336:
  2201                           
  2202                           ;main.c: 151: }
  2203                           ;main.c: 152: if(RCIF){
  2204  007E28  AA9E               	btfss	3998,5,c	;volatile
  2205  007E2A  D005               	goto	i2l1342
  2206                           
  2207                           ;main.c: 153: RCIF=0;
  2208  007E2C  9A9E               	bcf	3998,5,c	;volatile
  2209                           
  2210                           ;main.c: 154: caracter_recibido=RCREG;
  2211  007E2E  CFAE F032          	movff	4014,_caracter_recibido	;volatile
  2212                           
  2213                           ;main.c: 155: (void) RCREG;
  2214  007E32  50AE               	movf	4014,w,c	;volatile
  2215  007E34  D000               	goto	i2l1342
  2216  007E36                     i2l1342:
  2217                           
  2218                           ;main.c: 156: }
  2219                           ;main.c: 157: if(INT0IF){
  2220  007E36  A2F2               	btfss	intcon,1,c	;volatile
  2221  007E38  D005               	goto	i2l100
  2222                           
  2223                           ;main.c: 158: rampa_status=0;
  2224  007E3A  0E00               	movlw	0
  2225  007E3C  6E36               	movwf	_rampa_status,c
  2226                           
  2227                           ;main.c: 159: INTCONbits.INT0IE=0;
  2228  007E3E  98F2               	bcf	intcon,4,c	;volatile
  2229                           
  2230                           ;main.c: 160: INTCONbits.INT0IF=0;
  2231  007E40  92F2               	bcf	intcon,1,c	;volatile
  2232  007E42  D000               	goto	i2l100
  2233  007E44                     i2l100:
  2234  007E44  C00E  FFF5         	movff	??_myISR+13,tablat
  2235  007E48  C00D  FFF8         	movff	??_myISR+12,tblptru
  2236  007E4C  C00C  FFF7         	movff	??_myISR+11,tblptrh
  2237  007E50  C00B  FFF6         	movff	??_myISR+10,tblptrl
  2238  007E54  C00A  FFF4         	movff	??_myISR+9,prodh
  2239  007E58  C009  FFF3         	movff	??_myISR+8,prodl
  2240  007E5C  C008  FFDA         	movff	??_myISR+7,fsr2h
  2241  007E60  C007  FFD9         	movff	??_myISR+6,fsr2l
  2242  007E64  C006  FFE2         	movff	??_myISR+5,fsr1h
  2243  007E68  C005  FFE1         	movff	??_myISR+4,fsr1l
  2244  007E6C  C004  FFEA         	movff	??_myISR+3,fsr0h
  2245  007E70  C003  FFE9         	movff	??_myISR+2,fsr0l
  2246  007E74  C002  FFFB         	movff	??_myISR+1,pclatu
  2247  007E78  C001  FFFA         	movff	??_myISR,pclath
  2248  007E7C  0011               	retfie		f
  2249  007E7E                     __end_of_myISR:
  2250                           	opt stack 0
  2251                           pclatu	equ	0xFFB
  2252                           pclath	equ	0xFFA
  2253                           tblptru	equ	0xFF8
  2254                           tblptrh	equ	0xFF7
  2255                           tblptrl	equ	0xFF6
  2256                           tablat	equ	0xFF5
  2257                           prodh	equ	0xFF4
  2258                           prodl	equ	0xFF3
  2259                           intcon	equ	0xFF2
  2260                           intcon2	equ	0xFF1
  2261                           postinc0	equ	0xFEE
  2262                           fsr0h	equ	0xFEA
  2263                           fsr0l	equ	0xFE9
  2264                           wreg	equ	0xFE8
  2265                           fsr1h	equ	0xFE2
  2266                           fsr1l	equ	0xFE1
  2267                           indf2	equ	0xFDF
  2268                           fsr2h	equ	0xFDA
  2269                           fsr2l	equ	0xFD9
  2270                           status	equ	0xFD8
  2271                           
  2272 ;; *************** function _tic_timer0 *****************
  2273 ;; Defined at:
  2274 ;;		line 117 in file "Lemos.C"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;		None               void
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2288 ;;      Params:         0       0       0       0       0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_myISR
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text15
  2302  007AD4                     __ptext15:
  2303                           	opt stack 0
  2304  007AD4                     _tic_timer0:
  2305                           	opt stack 27
  2306                           
  2307                           ;Lemos.C: 118: if(mux_tout)mux_tout--;
  2308                           
  2309                           ;incstack = 0
  2310  007AD4  5035               	movf	_mux_tout,w,c
  2311  007AD6  B4D8               	btfsc	status,2,c
  2312  007AD8  D002               	goto	i2l1198
  2313  007ADA  0635               	decf	_mux_tout,f,c
  2314  007ADC  D000               	goto	i2l1198
  2315  007ADE                     i2l1198:
  2316                           
  2317                           ;Lemos.C: 119: if(bot_tout)bot_tout--;
  2318  007ADE  5031               	movf	_bot_tout,w,c
  2319  007AE0  B4D8               	btfsc	status,2,c
  2320  007AE2  D002               	goto	i2l1202
  2321  007AE4  0631               	decf	_bot_tout,f,c
  2322  007AE6  D000               	goto	i2l1202
  2323  007AE8                     i2l1202:
  2324                           
  2325                           ;Lemos.C: 120: if(led_tout)led_tout--;
  2326  007AE8  5029               	movf	_led_tout,w,c
  2327  007AEA  102A               	iorwf	_led_tout+1,w,c
  2328  007AEC  B4D8               	btfsc	status,2,c
  2329  007AEE  D004               	goto	i2l246
  2330  007AF0  0629               	decf	_led_tout,f,c
  2331  007AF2  A0D8               	btfss	status,0,c
  2332  007AF4  062A               	decf	_led_tout+1,f,c
  2333  007AF6  D000               	goto	i2l246
  2334  007AF8                     i2l246:
  2335  007AF8  0012               	return		;funcret
  2336  007AFA                     __end_of_tic_timer0:
  2337                           	opt stack 0
  2338                           pclatu	equ	0xFFB
  2339                           pclath	equ	0xFFA
  2340                           tblptru	equ	0xFF8
  2341                           tblptrh	equ	0xFF7
  2342                           tblptrl	equ	0xFF6
  2343                           tablat	equ	0xFF5
  2344                           prodh	equ	0xFF4
  2345                           prodl	equ	0xFF3
  2346                           intcon	equ	0xFF2
  2347                           intcon2	equ	0xFF1
  2348                           postinc0	equ	0xFEE
  2349                           fsr0h	equ	0xFEA
  2350                           fsr0l	equ	0xFE9
  2351                           wreg	equ	0xFE8
  2352                           fsr1h	equ	0xFE2
  2353                           fsr1l	equ	0xFE1
  2354                           indf2	equ	0xFDF
  2355                           fsr2h	equ	0xFDA
  2356                           fsr2l	equ	0xFD9
  2357                           status	equ	0xFD8
  2358                           
  2359 ;; *************** function _RAMPA_tic *****************
  2360 ;; Defined at:
  2361 ;;		line 15 in file "rampa.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;		None               void
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2375 ;;      Params:         0       0       0       0       0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2378 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2379 ;;Total ram usage:        0 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_myISR
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text16
  2389  007A8E                     __ptext16:
  2390                           	opt stack 0
  2391  007A8E                     _RAMPA_tic:
  2392                           	opt stack 27
  2393                           
  2394                           ;rampa.c: 16: if(tiempo_rampa<9999)tiempo_rampa++;
  2395                           
  2396                           ;incstack = 0
  2397  007A8E  0E0F               	movlw	15
  2398  007A90  5C2B               	subwf	_tiempo_rampa,w,c
  2399  007A92  0E27               	movlw	39
  2400  007A94  582C               	subwfb	_tiempo_rampa+1,w,c
  2401  007A96  B0D8               	btfsc	status,0,c
  2402  007A98  D003               	goto	i2l305
  2403  007A9A  4A2B               	infsnz	_tiempo_rampa,f,c
  2404  007A9C  2A2C               	incf	_tiempo_rampa+1,f,c
  2405  007A9E  D000               	goto	i2l305
  2406  007AA0                     i2l305:
  2407  007AA0  0012               	return		;funcret
  2408  007AA2                     __end_of_RAMPA_tic:
  2409                           	opt stack 0
  2410                           pclatu	equ	0xFFB
  2411                           pclath	equ	0xFFA
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           prodh	equ	0xFF4
  2417                           prodl	equ	0xFF3
  2418                           intcon	equ	0xFF2
  2419                           intcon2	equ	0xFF1
  2420                           postinc0	equ	0xFEE
  2421                           fsr0h	equ	0xFEA
  2422                           fsr0l	equ	0xFE9
  2423                           wreg	equ	0xFE8
  2424                           fsr1h	equ	0xFE2
  2425                           fsr1l	equ	0xFE1
  2426                           indf2	equ	0xFDF
  2427                           fsr2h	equ	0xFDA
  2428                           fsr2l	equ	0xFD9
  2429                           status	equ	0xFD8
  2430                           
  2431 ;; *************** function _ENVIO_tic *****************
  2432 ;; Defined at:
  2433 ;;		line 18 in file "rampa.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;		None               void
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2447 ;;      Params:         0       0       0       0       0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2450 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2451 ;;Total ram usage:        0 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_myISR
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text17
  2461  007A5E                     __ptext17:
  2462                           	opt stack 0
  2463  007A5E                     _ENVIO_tic:
  2464                           	opt stack 27
  2465                           
  2466                           ;rampa.c: 19: if(demora_envio)demora_envio--;
  2467                           
  2468                           ;incstack = 0
  2469  007A5E  5033               	movf	_demora_envio,w,c
  2470  007A60  B4D8               	btfsc	status,2,c
  2471  007A62  D002               	goto	i2l309
  2472  007A64  0633               	decf	_demora_envio,f,c
  2473  007A66  D000               	goto	i2l309
  2474  007A68                     i2l309:
  2475  007A68  0012               	return		;funcret
  2476  007A6A                     __end_of_ENVIO_tic:
  2477                           	opt stack 0
  2478                           pclatu	equ	0xFFB
  2479                           pclath	equ	0xFFA
  2480                           tblptru	equ	0xFF8
  2481                           tblptrh	equ	0xFF7
  2482                           tblptrl	equ	0xFF6
  2483                           tablat	equ	0xFF5
  2484                           prodh	equ	0xFF4
  2485                           prodl	equ	0xFF3
  2486                           intcon	equ	0xFF2
  2487                           intcon2	equ	0xFF1
  2488                           postinc0	equ	0xFEE
  2489                           fsr0h	equ	0xFEA
  2490                           fsr0l	equ	0xFE9
  2491                           wreg	equ	0xFE8
  2492                           fsr1h	equ	0xFE2
  2493                           fsr1l	equ	0xFE1
  2494                           indf2	equ	0xFDF
  2495                           fsr2h	equ	0xFDA
  2496                           fsr2l	equ	0xFD9
  2497                           status	equ	0xFD8
  2498                           pclatu	equ	0xFFB
  2499                           pclath	equ	0xFFA
  2500                           tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           prodh	equ	0xFF4
  2505                           prodl	equ	0xFF3
  2506                           intcon	equ	0xFF2
  2507                           intcon2	equ	0xFF1
  2508                           postinc0	equ	0xFEE
  2509                           fsr0h	equ	0xFEA
  2510                           fsr0l	equ	0xFE9
  2511                           wreg	equ	0xFE8
  2512                           fsr1h	equ	0xFE2
  2513                           fsr1l	equ	0xFE1
  2514                           indf2	equ	0xFDF
  2515                           fsr2h	equ	0xFDA
  2516                           fsr2l	equ	0xFD9
  2517                           status	equ	0xFD8
  2518                           
  2519                           	psect	rparam
  2520  0000                     pclatu	equ	0xFFB
  2521                           pclath	equ	0xFFA
  2522                           tblptru	equ	0xFF8
  2523                           tblptrh	equ	0xFF7
  2524                           tblptrl	equ	0xFF6
  2525                           tablat	equ	0xFF5
  2526                           prodh	equ	0xFF4
  2527                           prodl	equ	0xFF3
  2528                           intcon	equ	0xFF2
  2529                           intcon2	equ	0xFF1
  2530                           postinc0	equ	0xFEE
  2531                           fsr0h	equ	0xFEA
  2532                           fsr0l	equ	0xFE9
  2533                           wreg	equ	0xFE8
  2534                           fsr1h	equ	0xFE2
  2535                           fsr1l	equ	0xFE1
  2536                           indf2	equ	0xFDF
  2537                           fsr2h	equ	0xFDA
  2538                           fsr2l	equ	0xFD9
  2539                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1
    Data        3
    BSS         19
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      61
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    informar@dato	PTR unsigned char  size(2) Largest target is 4
		 -> main@paquete(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    _informar->_transmitir
    ___lwdiv->___lwmod
    _Send_4Disp->_Send_Disp

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    2293
                                             26 COMRAM    12    12      0
                         _Send_4Disp
                            ___lwdiv
                            ___lwmod
                          _assign_id
                             _decode
                           _informar
                          _pic_ini13
                        _rampa_ini13
                       _timer1_ini13
                        _timer_ini13
                        _usart_ini13
 ---------------------------------------------------------------------------------
 (1) _usart_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_ini13                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rampa_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pic_ini13                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _informar                                             4     1      3     234
                                             15 COMRAM     4     1      3
                         _transmitir
 ---------------------------------------------------------------------------------
 (2) _transmitir                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _decode                                               2     2      0      90
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _assign_id                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     543
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     546
                                             19 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Send_4Disp                                           4     1      3     603
                                             16 COMRAM     4     1      3
                          _Send_Disp
 ---------------------------------------------------------------------------------
 (2) _Send_Disp                                            2     1      1     323
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                               14    14      0       0
                                              0 COMRAM    14    14      0
                          _ENVIO_tic
                          _RAMPA_tic
                         _tic_timer0
 ---------------------------------------------------------------------------------
 (4) _tic_timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RAMPA_tic                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ENVIO_tic                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_4Disp
     _Send_Disp
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _assign_id
   _decode
   _informar
     _transmitir
   _pic_ini13
   _rampa_ini13
   _timer1_ini13
   _timer_ini13
   _usart_ini13

 _myISR (ROOT)
   _ENVIO_tic
   _RAMPA_tic
   _tic_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      3D       1       64.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D      20        0.0%
DATA                 0      0      3D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Jul 10 00:35:29 2015

                        l80 7ECA                          l81 7ED6                          l87 7F0C  
                        l88 7FE8                 __CFG_BOR$ON 000000                 __CFG_BORV$3 000000  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                         l220 7C1E  
                       l221 7C22                         l222 7C26                         l223 7C2A  
                       l240 7DC0                         l326 7D32                         l335 7AA8  
                       l338 7AB2                         _DEC 002E                         l937 7CB0  
                       l947 7C04                __CFG_CPB$OFF 000000                         _PR2 000FCB  
                       u680 7F58                         _UNI 0030                         wreg 000FE8  
             Send_Disp@Dato 000F                __CFG_LVP$OFF 000000                __CFG_WDT$OFF 000000  
                      l1132 7CEC                        l1124 7CD0                        l1116 7CBE  
                      l1142 7D02                        l1150 7D18                        l1152 7D2E  
                      l1600 7DA4                        l1610 7C7E                        l1620 7CA4  
                      l1612 7C86                        l1630 7BDA                        l1608 7C74  
                      l1632 7BE2                        l1560 7BB2                        l1546 7C2E  
                      l1548 7C4A                        l1636 7BF8                        l1628 7BD0  
                      l1556 7B96                        l1660 7EC0                        l1590 7D86  
                      l1582 7D6C                        l1574 7D52                        l1566 7D38  
                      l1662 7EC4                        l1672 7EDE                        l1656 7EB0  
                      l1690 7F4A                        l1596 7D98                        l1598 7D9E  
                      l1678 7EF0                        l1688 7F18                        _CENT 002D  
                      _LATA 000F89                        _LATB 000F8A                        _LATC 000F8B  
                      _LATD 000F8C                        _LATE 000F8D                        _RCIF 007CF5  
                      _UMIL 002F                 _usart_ini13 7AFA                 main@paquete 0023  
                      _main 7E7E                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr0l 000FE9                        fsr2h 000FDA                        fsr1l 000FE1  
                      indf2 000FDF                        fsr2l 000FD9                        pclat 000FFA  
        __size_of_ENVIO_tic 000C                        prodh 000FF4                        prodl 000FF3  
                      start 2018               __CFG_IESO$OFF 000000               __CFG_MCLRE$ON 000000  
              ___param_bank 000010          __size_of_RAMPA_tic 0014               __CFG_PLLDIV$5 000000  
               assign_id@id 000F                       ?_main 0001                       _CMCON 000FB4  
           __end_of___lwdiv 7CBA                       i2l100 7E44             __end_of___lwmod 7C0E  
                     i2l305 7AA0                       i2l309 7A68                       i2l246 7AF8  
                     _RCREG 000FAE                       _TMR0H 000FD7                       _TMR1H 000FCF  
                     _TMR0L 000FD6                       _TMR1L 000FCE                       _SPBRG 000FAF  
             __CFG_USBDIV$2 000000                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISD 000F95                       _TRISE 000F96                       _TXREG 000FAD  
             __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000              __CFG_EBTRB$OFF 000000  
                     _myISR 2008                       leds@i 003C                       tablat 000FF5  
                     status 000FD8             __initialization 7B52  main@backup_ultimo_caracter 0021  
              ?_rampa_ini13 0001                __end_of_main 8000                      ??_main 001B  
             __activetblptr 000002           __end_of_ENVIO_tic 7A6A                  _Send_4Disp 7D34  
                    _ADCON1 000FC1                      ?_myISR 0001                      _CCPR1L 000FBE  
         __end_of_RAMPA_tic 7AA2                      _INT0IF 007F91                      _MEMDIG 003B  
                    i2l1202 7AE8                      i2l1322 7E0C                      i2l1342 7E36  
                    i2l1326 7E18                      i2l1336 7E28                      i2l1198 7ADE  
                    _TMR0IF 007F92                      _TMR1IF 007CF0                      _SPBRGH 000FB0  
            __CFG_VREGEN$ON 000000              __CFG_XINST$OFF 000000          __size_of_Send_Disp 0050  
            __CFG_STVREN$ON 000000                      _decode 7CBA                   ??___lwdiv 0018  
                 ??___lwmod 0013            __end_of_informar 7BC2                      clear_0 7B58  
      __end_of_broadcast_id 201E                __pdataCOMRAM 003A                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
              ?_timer_ini13 0001               decode@com_rec 0037               decode@est_rec 0038  
                __accesstop 0060     __end_of__initialization 7B7C             __CFG_PBADEN$OFF 000000  
          Send_Disp@NroDisp 0010               decode@retorno 000F               ___rparam_used 000001  
            __pcstackCOMRAM 0001               __end_of_myISR 7E7E          main@broadcast_flag 0022  
               ?_Send_4Disp 0011                     ??_myISR 0001           __end_of_Send_Disp 7C5E  
        __size_of_assign_id 0008                ?_usart_ini13 0001                  __pnvCOMRAM 003D  
        __size_of_pic_ini13 0030                     ?_decode 0001          Send_4Disp@Nro_Disp 003A  
      __size_of_rampa_ini13 0012                _demora_envio 0033                   ?_informar 0010  
                   __Hparam 0000                     __Lparam 0000         __size_of_Send_4Disp 008E  
           __size_of_decode 007A                     ___lwdiv 7C5E                     ___lwmod 7BC2  
         __end_of_assign_id 7A5E                __psmallconst 201C                     __pcinit 7B52  
             ?_timer1_ini13 0001                     __ramtop 0800                     __ptext0 7E7E  
                   __ptext1 7AFA                     __ptext2 7ABA                     __ptext3 7A7C  
                   __ptext4 7A6A                     __ptext5 7B22                     __ptext6 7B86  
                   __ptext7 7AA2                     __ptext8 7CBA                     __ptext9 7A56  
              informar@dato 0010                   _T0CONbits 000FD5                   _T1CONbits 000FCD  
                 _T2CONbits 000FCA           __end_of_pic_ini13 7B52         mux_display@contdisp 0039  
                 _ENVIO_tic 7A5E                     main@dec 001C                     main@mil 001E  
                   main@seg 001B              __pintcode_body 7DC2        __size_of_timer_ini13 001A  
      end_of_initialization 7B7C                  ??_informar 0013               __Lmediumconst 0000  
                   int_func 7DC2                _broadcast_id 201D                   _RAMPA_tic 7A8E  
                _tic_timer0 7AD4                   _RCSTAbits 000FAB                     postinc0 000FEE  
            ??_timer1_ini13 000F                   _PORTBbits 000F81                   _TRISBbits 000F93  
                 _TRISCbits 000F94                  ?_ENVIO_tic 0001                  _transmitir 7AA2  
               _CCP1CONbits 000FBD                   _TXSTAbits 000FAC                  ?_RAMPA_tic 0001  
      __size_of_usart_ini13 0028          decode@dato_a_decod 0010              __end_of_decode 7D34  
               _BAUDCONbits 000FB8               __pidataCOMRAM 7A53                ??_Send_4Disp 0014  
       start_initialization 7B52                   _Send_Disp 7C0E                 ?_tic_timer0 0001  
        __end_of_Send_4Disp 7DC2                    ??_decode 000F                _envio_status 0034  
          __CFG_LPT1OSC$OFF 000000                 __pbssCOMRAM 0027                 ??_ENVIO_tic 0001  
               ?_transmitir 0001        __end_of_timer1_ini13 7A8E                  ?_Send_Disp 000F  
               ??_RAMPA_tic 0001           __size_of_informar 003C            ___lwdiv@dividend 0014  
             ??_rampa_ini13 000F                   __pintcode 2008                    ?___lwdiv 0014  
                  ?___lwmod 000F                   _assign_id 7A56                 __smallconst 201C  
       __size_of_tic_timer0 0026            ___lwdiv@quotient 0018              __size_of_myISR 5E76  
                 _pic_ini13 7B22                    _LATAbits 000F89                    _LATBbits 000F8A  
                  _LATCbits 000F8B                    _LATDbits 000F8C                    _LATEbits 000F8D  
                  _LCD_tout 0027                    _PIE1bits 000F9D                    _PIR1bits 000F9E  
          __CFG_WDTPS$32768 000000            informar@longitud 0012         __size_of_transmitir 0018  
       __end_of_rampa_ini13 7A7C                _rampa_status 0036                  ?_assign_id 0001  
             ??_timer_ini13 000F              Send_4Disp@Cent 0011              Send_4Disp@Umil 0014  
               _INTCON2bits 000FF1                  ?_pic_ini13 0001                 ??_Send_Disp 0010  
                  __Hrparam 0000                    __Lrparam 0000                   informar@i 0013  
         _caracter_recibido 0032            __size_of___lwdiv 005C            __size_of___lwmod 004C  
           ___lwdiv@divisor 0016       __size_of_timer1_ini13 0012             ___lwdiv@counter 001A  
                  __ptext10 7BC2                    __ptext11 7C5E                    __ptext12 7D34  
                  __ptext13 7C0E                    __ptext15 7AD4                    __ptext16 7A8E  
                  __ptext17 7A5E                    _bot_tout 0031               ??_usart_ini13 000F  
                  _led_tout 0029         __end_of_timer_ini13 7AD4                    _informar 7B86  
             __size_of_main 0182                ??_tic_timer0 0001                    _slave_id 003D  
               _rampa_ini13 7A6A                    _mux_tout 0035                    main@cent 001D  
              _timer1_ini13 7A7C               Send_4Disp@Dec 0012               Send_4Disp@Uni 0013  
     __CFG_CPUDIV$OSC1_PLL2 000000                 ??_assign_id 000F                  _INTCONbits 000FF2  
        __end_of_tic_timer0 7AFA                 ??_pic_ini13 000F                ??_transmitir 000F  
                  intlevel2 0000                _tiempo_rampa 002B              transmitir@Dato 000F  
          ___lwmod@dividend 000F         __end_of_usart_ini13 7B22          __end_of_transmitir 7ABA  
           ___lwmod@divisor 0011             ___lwmod@counter 0013                 _timer_ini13 7ABA  
        __CFG_FOSC$HSPLL_HS 000000     main@backup_tiempo_rampa 001F  
