

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Sep  3 22:32:15 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           	psect	idataCOMRAM
    37  007A1A                     __pidataCOMRAM:
    38                           	opt stack 0
    39                           
    40                           ;initializer for Send_4Disp@Nro_Disp
    41  007A1A  01                 	db	1
    42                           
    43                           ;initializer for _MEMDIG
    44  007A1B  01                 	db	1
    45                           
    46                           ;initializer for _modula
    47  007A1C  02                 	db	2
    48                           
    49                           ;initializer for leds@i
    50  007A1D  01                 	db	1
    51                           
    52                           	psect	smallconst
    53  00201C                     __psmallconst:
    54                           	opt stack 0
    55  00201C  00                 	db	0
    56  00201D                     _broadcast_id:
    57                           	opt stack 0
    58  00201D  6D                 	db	109
    59  00201E                     __end_of_broadcast_id:
    60                           	opt stack 0
    61  00201E  00                 	db	0	; dummy byte at the end
    62  0000                     
    63                           	psect	nvCOMRAM
    64  00003C                     __pnvCOMRAM:
    65                           	opt stack 0
    66  00003C                     _slave_id:
    67                           	opt stack 0
    68  00003C                     	ds	1
    69  0000                     _ADCON1	set	4033
    70  0000                     _ADRESH	set	4036
    71  0000                     _ADRESL	set	4035
    72  0000                     _BAUDCONbits	set	4024
    73  0000                     _CCP1CONbits	set	4029
    74  0000                     _CCPR1L	set	4030
    75  0000                     _CMCON	set	4020
    76  0000                     _INTCON2bits	set	4081
    77  0000                     _INTCONbits	set	4082
    78  0000                     _LATA	set	3977
    79  0000                     _LATAbits	set	3977
    80  0000                     _LATB	set	3978
    81  0000                     _LATBbits	set	3978
    82  0000                     _LATC	set	3979
    83  0000                     _LATCbits	set	3979
    84  0000                     _LATD	set	3980
    85  0000                     _LATDbits	set	3980
    86  0000                     _LATE	set	3981
    87  0000                     _LATEbits	set	3981
    88  0000                     _PIE1bits	set	3997
    89  0000                     _PIR1bits	set	3998
    90  0000                     _PORTBbits	set	3969
    91  0000                     _PR2	set	4043
    92  0000                     _RCREG	set	4014
    93  0000                     _RCSTAbits	set	4011
    94  0000                     _SPBRG	set	4015
    95  0000                     _SPBRGH	set	4016
    96  0000                     _T0CONbits	set	4053
    97  0000                     _T1CONbits	set	4045
    98  0000                     _T2CONbits	set	4042
    99  0000                     _TMR0H	set	4055
   100  0000                     _TMR0L	set	4054
   101  0000                     _TMR1H	set	4047
   102  0000                     _TMR1L	set	4046
   103  0000                     _TRISA	set	3986
   104  0000                     _TRISB	set	3987
   105  0000                     _TRISBbits	set	3987
   106  0000                     _TRISCbits	set	3988
   107  0000                     _TRISD	set	3989
   108  0000                     _TRISE	set	3990
   109  0000                     _TXREG	set	4013
   110  0000                     _TXSTAbits	set	4012
   111  0000                     _INT0IF	set	32657
   112  0000                     _RCIF	set	31989
   113  0000                     _TMR0IF	set	32658
   114  0000                     _TMR1IF	set	31984
   115                           
   116                           ; #config settings
   117  0000                     
   118                           	psect	cinit
   119  007B38                     __pcinit:
   120                           	opt stack 0
   121  007B38                     start_initialization:
   122                           	opt stack 0
   123  007B38                     __initialization:
   124                           	opt stack 0
   125                           
   126                           ; Clear objects allocated to COMRAM (21 bytes)
   127  007B38  EE00  F023         	lfsr	0,__pbssCOMRAM
   128  007B3C  0E15               	movlw	21
   129  007B3E                     clear_0:
   130  007B3E  6AEE               	clrf	postinc0,c
   131  007B40  06E8               	decf	wreg,f,c
   132  007B42  E1FD               	bnz	clear_0
   133                           
   134                           ; Initialize objects allocated to COMRAM (4 bytes)
   135                           ; load TBLPTR registers with __pidataCOMRAM
   136  007B44  0E1A               	movlw	low __pidataCOMRAM
   137  007B46  6EF6               	movwf	tblptrl,c
   138  007B48  0E7A               	movlw	high __pidataCOMRAM
   139  007B4A  6EF7               	movwf	tblptrh,c
   140  007B4C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   141  007B4E  6EF8               	movwf	tblptru,c
   142  007B50  EE00  F038         	lfsr	0,__pdataCOMRAM
   143  007B54  EE10 F004          	lfsr	1,4
   144  007B58                     copy_data0:
   145  007B58  0009               	tblrd		*+
   146  007B5A  CFF5 FFEE          	movff	tablat,postinc0
   147  007B5E  50E5               	movf	postdec1,w,c
   148  007B60  50E1               	movf	fsr1l,w,c
   149  007B62  E1FA               	bnz	copy_data0
   150  007B64                     end_of_initialization:
   151                           	opt stack 0
   152  007B64                     __end_of__initialization:
   153                           	opt stack 0
   154  007B64  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155  007B66  6EF8               	movwf	tblptru,c
   156  007B68  0100               	movlb	0
   157  007B6A  EF46  F03F         	goto	_main	;jump to C main() function
   158                           tblptru	equ	0xFF8
   159                           tblptrh	equ	0xFF7
   160                           tblptrl	equ	0xFF6
   161                           tablat	equ	0xFF5
   162                           postinc0	equ	0xFEE
   163                           wreg	equ	0xFE8
   164                           postdec1	equ	0xFE5
   165                           fsr1l	equ	0xFE1
   166                           
   167                           	psect	bssCOMRAM
   168  000023                     __pbssCOMRAM:
   169                           	opt stack 0
   170  000023                     _LCD_tout:
   171                           	opt stack 0
   172  000023                     	ds	2
   173  000025                     _demora_solenoide:
   174                           	opt stack 0
   175  000025                     	ds	2
   176  000027                     _led_tout:
   177                           	opt stack 0
   178  000027                     	ds	2
   179  000029                     _tiempo_rampa:
   180                           	opt stack 0
   181  000029                     	ds	2
   182  00002B                     _CENT:
   183                           	opt stack 0
   184  00002B                     	ds	1
   185  00002C                     _DEC:
   186                           	opt stack 0
   187  00002C                     	ds	1
   188  00002D                     _UMIL:
   189                           	opt stack 0
   190  00002D                     	ds	1
   191  00002E                     _UNI:
   192                           	opt stack 0
   193  00002E                     	ds	1
   194  00002F                     _bot_tout:
   195                           	opt stack 0
   196  00002F                     	ds	1
   197  000030                     _caracter_recibido:
   198                           	opt stack 0
   199  000030                     	ds	1
   200  000031                     _demora_envio:
   201                           	opt stack 0
   202  000031                     	ds	1
   203  000032                     _flag_modula:
   204                           	opt stack 0
   205  000032                     	ds	1
   206  000033                     _mux_tout:
   207                           	opt stack 0
   208  000033                     	ds	1
   209  000034                     _rampa_status:
   210                           	opt stack 0
   211  000034                     	ds	1
   212  000035                     decode@com_rec:
   213                           	opt stack 0
   214  000035                     	ds	1
   215  000036                     decode@est_rec:
   216                           	opt stack 0
   217  000036                     	ds	1
   218  000037                     mux_display@contdisp:
   219                           	opt stack 0
   220  000037                     	ds	1
   221                           tblptru	equ	0xFF8
   222                           tblptrh	equ	0xFF7
   223                           tblptrl	equ	0xFF6
   224                           tablat	equ	0xFF5
   225                           postinc0	equ	0xFEE
   226                           wreg	equ	0xFE8
   227                           postdec1	equ	0xFE5
   228                           fsr1l	equ	0xFE1
   229                           
   230                           	psect	dataCOMRAM
   231  000038                     __pdataCOMRAM:
   232                           	opt stack 0
   233  000038                     Send_4Disp@Nro_Disp:
   234                           	opt stack 0
   235  000038                     	ds	1
   236  000039                     _MEMDIG:
   237                           	opt stack 0
   238  000039                     	ds	1
   239  00003A                     _modula:
   240                           	opt stack 0
   241  00003A                     	ds	1
   242  00003B                     leds@i:
   243                           	opt stack 0
   244  00003B                     	ds	1
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           postdec1	equ	0xFE5
   252                           fsr1l	equ	0xFE1
   253                           
   254                           	psect	cstackCOMRAM
   255  000001                     __pcstackCOMRAM:
   256                           	opt stack 0
   257  000001                     ??_myISR:
   258  000001                     
   259                           ; 1 bytes @ 0x0
   260  000001                     	ds	14
   261  00000F                     ?_ReadADC:
   262                           	opt stack 0
   263  00000F                     ?___lwmod:
   264                           	opt stack 0
   265  00000F                     Send_Disp@Dato:
   266                           	opt stack 0
   267  00000F                     assign_id@id:
   268                           	opt stack 0
   269  00000F                     decode@retorno:
   270                           	opt stack 0
   271  00000F                     transmitir@Dato:
   272                           	opt stack 0
   273  00000F                     ___lwmod@dividend:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0xE
   277  00000F                     	ds	1
   278  000010                     Send_Disp@NroDisp:
   279                           	opt stack 0
   280  000010                     decode@dato_a_decod:
   281                           	opt stack 0
   282  000010                     informar@dato:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0xF
   286  000010                     	ds	1
   287  000011                     ??_ReadADC:
   288  000011                     Send_4Disp@Cent:
   289                           	opt stack 0
   290  000011                     ___lwmod@divisor:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x10
   294  000011                     	ds	1
   295  000012                     Send_4Disp@Dec:
   296                           	opt stack 0
   297  000012                     informar@longitud:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x11
   301  000012                     	ds	1
   302  000013                     Send_4Disp@Uni:
   303                           	opt stack 0
   304  000013                     informar@i:
   305                           	opt stack 0
   306  000013                     ___lwmod@counter:
   307                           	opt stack 0
   308                           
   309                           ; 1 bytes @ 0x12
   310  000013                     	ds	1
   311  000014                     ?___lwdiv:
   312                           	opt stack 0
   313  000014                     Send_4Disp@Umil:
   314                           	opt stack 0
   315  000014                     ___lwdiv@dividend:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x13
   319  000014                     	ds	2
   320  000016                     ___lwdiv@divisor:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x15
   324  000016                     	ds	2
   325  000018                     ___lwdiv@quotient:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x17
   329  000018                     	ds	2
   330  00001A                     ___lwdiv@counter:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x19
   334  00001A                     	ds	1
   335  00001B                     main@backup_tiempo_rampa:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x1A
   339  00001B                     	ds	2
   340  00001D                     main@backup_ultimo_caracter:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x1C
   344  00001D                     	ds	1
   345  00001E                     main@broadcast_flag:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x1D
   349  00001E                     	ds	1
   350  00001F                     main@paquete:
   351                           	opt stack 0
   352                           
   353                           ; 4 bytes @ 0x1E
   354  00001F                     	ds	4
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           postdec1	equ	0xFE5
   362                           fsr1l	equ	0xFE1
   363                           
   364 ;;
   365 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   366 ;;
   367 ;; *************** function _main *****************
   368 ;; Defined at:
   369 ;;		line 35 in file "main.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;  paquete         4   30[COMRAM] unsigned char [4]
   374 ;;  backup_tiemp    2   26[COMRAM] unsigned int 
   375 ;;  broadcast_fl    1   29[COMRAM] unsigned char 
   376 ;;  backup_ultim    1   28[COMRAM] unsigned char 
   377 ;; Return value:  Size  Location     Type
   378 ;;		None               void
   379 ;; Registers used:
   380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   386 ;;      Params:         0       0       0       0       0       0       0       0       0
   387 ;;      Locals:         8       0       0       0       0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0       0       0       0       0
   389 ;;      Totals:         8       0       0       0       0       0       0       0       0
   390 ;;Total ram usage:        8 bytes
   391 ;; Hardware stack levels required when called:    4
   392 ;; This function calls:
   393 ;;		_ReadADC
   394 ;;		_Send_4Disp
   395 ;;		___lwdiv
   396 ;;		___lwmod
   397 ;;		_assign_id
   398 ;;		_decode
   399 ;;		_informar
   400 ;;		_pic_ini13
   401 ;;		_rampa_ini13
   402 ;;		_timer1_ini13
   403 ;;		_timer_ini13
   404 ;;		_usart_ini13
   405 ;; This function is called by:
   406 ;;		Startup code after reset
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           	psect	text0
   411  007E8C                     __ptext0:
   412                           	opt stack 0
   413  007E8C                     _main:
   414                           	opt stack 27
   415                           
   416                           ;main.c: 36: unsigned char backup_ultimo_caracter;
   417                           ;main.c: 37: unsigned int backup_tiempo_rampa;
   418                           ;main.c: 39: char paquete[4];
   419                           ;main.c: 40: unsigned char broadcast_flag=0;
   420                           
   421                           ;incstack = 0
   422  007E8C  0E00               	movlw	0
   423  007E8E  6E1E               	movwf	main@broadcast_flag,c
   424                           
   425                           ;main.c: 41: backup_tiempo_rampa = ReadADC();
   426  007E90  EC20  F03D         	call	_ReadADC	;wreg free
   427  007E94  C00F  F01B         	movff	?_ReadADC,main@backup_tiempo_rampa
   428  007E98  C010  F01C         	movff	?_ReadADC+1,main@backup_tiempo_rampa+1
   429                           
   430                           ;main.c: 43: pic_ini13();
   431  007E9C  EC84  F03D         	call	_pic_ini13	;wreg free
   432                           
   433                           ;main.c: 44: timer_ini13();
   434  007EA0  EC50  F03D         	call	_timer_ini13	;wreg free
   435                           
   436                           ;main.c: 46: timer1_ini13();
   437  007EA4  EC28  F03D         	call	_timer1_ini13	;wreg free
   438                           
   439                           ;main.c: 47: usart_ini13();
   440  007EA8  EC70  F03D         	call	_usart_ini13	;wreg free
   441                           
   442                           ;main.c: 50: BAUDCONbits.RXCKP = 1;
   443  007EAC  8AB8               	bsf	4024,5,c	;volatile
   444                           
   445                           ;main.c: 51: BAUDCONbits.TXCKP = 1;
   446  007EAE  88B8               	bsf	4024,4,c	;volatile
   447                           
   448                           ;main.c: 54: (INTCONbits.GIE = 1);
   449  007EB0  8EF2               	bsf	intcon,7,c	;volatile
   450                           
   451                           ;main.c: 56: assign_id('a');
   452  007EB2  0E61               	movlw	97
   453  007EB4  EC0F  F03D         	call	_assign_id
   454                           
   455                           ;main.c: 58: rampa_ini13();
   456  007EB8  EC3B  F03D         	call	_rampa_ini13	;wreg free
   457  007EBC  D000               	goto	l1740
   458  007EBE                     l1740:
   459                           
   460                           ;main.c: 61: if(caracter_recibido != backup_ultimo_caracter){
   461  007EBE  501D               	movf	main@backup_ultimo_caracter,w,c
   462  007EC0  1830               	xorwf	_caracter_recibido,w,c
   463  007EC2  B4D8               	btfsc	status,2,c
   464  007EC4  D042               	goto	l1772
   465                           
   466                           ;main.c: 62: backup_ultimo_caracter=caracter_recibido;
   467  007EC6  C030  F01D         	movff	_caracter_recibido,main@backup_ultimo_caracter
   468                           
   469                           ;main.c: 78: switch(decode(caracter_recibido)){
   470  007ECA  D026               	goto	l1770
   471                           
   472                           ;main.c: 80: break;
   473                           
   474                           ;main.c: 79: case 0:;
   475  007ECC  D03E               	goto	l1772
   476  007ECE                     l1744:
   477                           
   478                           ;main.c: 82: broadcast_flag=0;
   479  007ECE  0E00               	movlw	0
   480  007ED0  D001               	goto	L1
   481  007ED2                     l1746:
   482                           
   483                           ;main.c: 85: broadcast_flag=1;
   484  007ED2  0E01               	movlw	1
   485  007ED4                     L1:
   486  007ED4  6E1E               	movwf	main@broadcast_flag,c
   487                           
   488                           ;main.c: 86: }break;
   489  007ED6  D039               	goto	l1772
   490  007ED8                     l1748:
   491                           
   492                           ;main.c: 88: rampa_status=1;
   493  007ED8  0E01               	movlw	1
   494  007EDA  6E34               	movwf	_rampa_status,c
   495                           
   496                           ;main.c: 89: INTCONbits.INT0IF=0;
   497  007EDC  92F2               	bcf	intcon,1,c	;volatile
   498                           
   499                           ;main.c: 90: INTCONbits.INT0IE=1;
   500  007EDE  88F2               	bsf	intcon,4,c	;volatile
   501                           
   502                           ;main.c: 91: LATDbits.LD2 = 1;
   503  007EE0  848C               	bsf	3980,2,c	;volatile
   504                           
   505                           ;main.c: 92: demora_solenoide = 1000;;
   506  007EE2  0E03               	movlw	3
   507  007EE4  6E26               	movwf	_demora_solenoide+1,c
   508  007EE6  0EE8               	movlw	232
   509  007EE8  6E25               	movwf	_demora_solenoide,c
   510                           
   511                           ;main.c: 93: }break;
   512  007EEA  D02F               	goto	l1772
   513  007EEC                     l1756:
   514                           
   515                           ;main.c: 95: rampa_status=0;
   516  007EEC  0E00               	movlw	0
   517  007EEE  6E34               	movwf	_rampa_status,c
   518                           
   519                           ;main.c: 96: INTCONbits.INT0IE=0;
   520  007EF0  98F2               	bcf	intcon,4,c	;volatile
   521                           
   522                           ;main.c: 97: INTCONbits.INT0IF=0;
   523  007EF2  92F2               	bcf	intcon,1,c	;volatile
   524                           
   525                           ;main.c: 98: }break;
   526  007EF4  D02A               	goto	l1772
   527  007EF6                     l1762:
   528                           
   529                           ;main.c: 100: if(!broadcast_flag) informar(paquete,4);
   530  007EF6  501E               	movf	main@broadcast_flag,w,c
   531  007EF8  A4D8               	btfss	status,2,c
   532  007EFA  D027               	goto	l1772
   533  007EFC  0E1F               	movlw	low main@paquete
   534  007EFE  6E10               	movwf	informar@dato,c
   535  007F00  0E00               	movlw	high main@paquete
   536  007F02  6E11               	movwf	informar@dato+1,c
   537  007F04  0E04               	movlw	4
   538  007F06  6E12               	movwf	informar@longitud,c
   539  007F08  EC05  F03E         	call	_informar	;wreg free
   540                           
   541                           ;main.c: 102: }break;
   542  007F0C  D01E               	goto	l1772
   543  007F0E                     l1766:
   544                           
   545                           ;main.c: 104: tiempo_rampa=0;
   546  007F0E  0E00               	movlw	0
   547  007F10  6E2A               	movwf	_tiempo_rampa+1,c
   548  007F12  0E00               	movlw	0
   549  007F14  6E29               	movwf	_tiempo_rampa,c
   550                           
   551                           ;main.c: 106: }
   552                           
   553                           ;main.c: 105: }break;
   554  007F16  D019               	goto	l1772
   555  007F18                     l1770:
   556  007F18  5030               	movf	_caracter_recibido,w,c
   557  007F1A  EC5F  F03E         	call	_decode
   558                           
   559                           ; Switch size 1, requested type "space"
   560                           ; Number of cases is 7, Range of values is 0 to 115
   561                           ; switch strategies available:
   562                           ; Name         Instructions Cycles
   563                           ; simple_byte           22    12 (average)
   564                           ;	Chosen strategy is simple_byte
   565  007F1E  0A00               	xorlw	0	; case 0
   566  007F20  B4D8               	btfsc	status,2,c
   567  007F22  D013               	goto	l1772
   568  007F24  0A62               	xorlw	98	; case 98
   569  007F26  B4D8               	btfsc	status,2,c
   570  007F28  D7D4               	goto	l1746
   571  007F2A  0A06               	xorlw	6	; case 100
   572  007F2C  B4D8               	btfsc	status,2,c
   573  007F2E  D7DE               	goto	l1756
   574  007F30  0A08               	xorlw	8	; case 108
   575  007F32  B4D8               	btfsc	status,2,c
   576  007F34  D7E0               	goto	l1762
   577  007F36  0A1C               	xorlw	28	; case 112
   578  007F38  B4D8               	btfsc	status,2,c
   579  007F3A  D7C9               	goto	l1744
   580  007F3C  0A02               	xorlw	2	; case 114
   581  007F3E  B4D8               	btfsc	status,2,c
   582  007F40  D7E6               	goto	l1766
   583  007F42  0A01               	xorlw	1	; case 115
   584  007F44  B4D8               	btfsc	status,2,c
   585  007F46  D7C8               	goto	l1748
   586  007F48  D000               	goto	l1772
   587  007F4A                     l1772:
   588                           
   589                           ;main.c: 107: }
   590                           ;main.c: 110: if(tiempo_rampa !=backup_tiempo_rampa){
   591  007F4A  501B               	movf	main@backup_tiempo_rampa,w,c
   592  007F4C  1829               	xorwf	_tiempo_rampa,w,c
   593  007F4E  E104               	bnz	u720
   594  007F50  501C               	movf	main@backup_tiempo_rampa+1,w,c
   595  007F52  182A               	xorwf	_tiempo_rampa+1,w,c
   596  007F54  B4D8               	btfsc	status,2,c
   597  007F56  D048               	goto	l95
   598  007F58                     u720:
   599                           
   600                           ;main.c: 112: paquete[0]=tiempo_rampa/1000;
   601  007F58  C029  F014         	movff	_tiempo_rampa,___lwdiv@dividend
   602  007F5C  C02A  F015         	movff	_tiempo_rampa+1,___lwdiv@dividend+1
   603  007F60  0E03               	movlw	3
   604  007F62  6E17               	movwf	___lwdiv@divisor+1,c
   605  007F64  0EE8               	movlw	232
   606  007F66  6E16               	movwf	___lwdiv@divisor,c
   607  007F68  EC31  F03E         	call	___lwdiv	;wreg free
   608  007F6C  5014               	movf	?___lwdiv,w,c
   609  007F6E  6E1F               	movwf	main@paquete,c
   610                           
   611                           ;main.c: 113: paquete[1]=(tiempo_rampa%1000)/100;
   612  007F70  0E03               	movlw	3
   613  007F72  6E12               	movwf	___lwmod@divisor+1,c
   614  007F74  0EE8               	movlw	232
   615  007F76  6E11               	movwf	___lwmod@divisor,c
   616  007F78  C029  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   617  007F7C  C02A  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   618  007F80  ECB7  F03D         	call	___lwmod	;wreg free
   619  007F84  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   620  007F88  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   621  007F8C  0E00               	movlw	0
   622  007F8E  6E17               	movwf	___lwdiv@divisor+1,c
   623  007F90  0E64               	movlw	100
   624  007F92  6E16               	movwf	___lwdiv@divisor,c
   625  007F94  EC31  F03E         	call	___lwdiv	;wreg free
   626  007F98  5014               	movf	?___lwdiv,w,c
   627  007F9A  6E20               	movwf	main@paquete+1,c
   628                           
   629                           ;main.c: 114: paquete[2]=(tiempo_rampa%100)/10;
   630  007F9C  0E00               	movlw	0
   631  007F9E  6E12               	movwf	___lwmod@divisor+1,c
   632  007FA0  0E64               	movlw	100
   633  007FA2  6E11               	movwf	___lwmod@divisor,c
   634  007FA4  C029  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   635  007FA8  C02A  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   636  007FAC  ECB7  F03D         	call	___lwmod	;wreg free
   637  007FB0  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   638  007FB4  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   639  007FB8  0E00               	movlw	0
   640  007FBA  6E17               	movwf	___lwdiv@divisor+1,c
   641  007FBC  0E0A               	movlw	10
   642  007FBE  6E16               	movwf	___lwdiv@divisor,c
   643  007FC0  EC31  F03E         	call	___lwdiv	;wreg free
   644  007FC4  5014               	movf	?___lwdiv,w,c
   645  007FC6  6E21               	movwf	main@paquete+2,c
   646                           
   647                           ;main.c: 115: paquete[3]=tiempo_rampa%10;
   648  007FC8  C029  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   649  007FCC  C02A  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   650  007FD0  0E00               	movlw	0
   651  007FD2  6E12               	movwf	___lwmod@divisor+1,c
   652  007FD4  0E0A               	movlw	10
   653  007FD6  6E11               	movwf	___lwmod@divisor,c
   654  007FD8  ECB7  F03D         	call	___lwmod	;wreg free
   655  007FDC  500F               	movf	?___lwmod,w,c
   656  007FDE  6E22               	movwf	main@paquete+3,c
   657                           
   658                           ;main.c: 117: backup_tiempo_rampa=tiempo_rampa;
   659  007FE0  C029  F01B         	movff	_tiempo_rampa,main@backup_tiempo_rampa
   660  007FE4  C02A  F01C         	movff	_tiempo_rampa+1,main@backup_tiempo_rampa+1
   661  007FE8                     l95:
   662                           
   663                           ;main.c: 118: }
   664                           ;main.c: 119: Send_4Disp(paquete[0],paquete[1],paquete[2],paquete[3]);
   665  007FE8  C020  F011         	movff	main@paquete+1,Send_4Disp@Cent
   666  007FEC  C021  F012         	movff	main@paquete+2,Send_4Disp@Dec
   667  007FF0  C022  F013         	movff	main@paquete+3,Send_4Disp@Uni
   668  007FF4  501F               	movf	main@paquete,w,c
   669  007FF6  EC9C  F03E         	call	_Send_4Disp
   670  007FFA  D761               	goto	l1740
   671  007FFC  EF0C  F010         	goto	start
   672  008000                     __end_of_main:
   673                           	opt stack 0
   674                           tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           tblptrl	equ	0xFF6
   677                           tablat	equ	0xFF5
   678                           intcon	equ	0xFF2
   679                           postinc0	equ	0xFEE
   680                           wreg	equ	0xFE8
   681                           postdec1	equ	0xFE5
   682                           fsr1l	equ	0xFE1
   683                           status	equ	0xFD8
   684                           
   685 ;; *************** function _usart_ini13 *****************
   686 ;; Defined at:
   687 ;;		line 77 in file "Ap_ini.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;		None               void
   694 ;; Registers used:
   695 ;;		wreg, status,2
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   701 ;;      Params:         0       0       0       0       0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    2
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text1
   716  007AE0                     __ptext1:
   717                           	opt stack 0
   718  007AE0                     _usart_ini13:
   719                           	opt stack 28
   720                           
   721                           ;Ap_ini.c: 82: TXSTAbits.BRGH = 1;
   722                           
   723                           ;incstack = 0
   724  007AE0  84AC               	bsf	4012,2,c	;volatile
   725                           
   726                           ;Ap_ini.c: 83: BAUDCONbits.BRG16=1;
   727  007AE2  86B8               	bsf	4024,3,c	;volatile
   728                           
   729                           ;Ap_ini.c: 84: TXSTAbits.SYNC = 0;
   730  007AE4  98AC               	bcf	4012,4,c	;volatile
   731                           
   732                           ;Ap_ini.c: 85: SPBRG = 0xE1;
   733  007AE6  0EE1               	movlw	225
   734  007AE8  6EAF               	movwf	4015,c	;volatile
   735                           
   736                           ;Ap_ini.c: 86: SPBRGH = 0x04;
   737  007AEA  0E04               	movlw	4
   738  007AEC  6EB0               	movwf	4016,c	;volatile
   739                           
   740                           ;Ap_ini.c: 87: RCSTAbits.SPEN = 1;
   741  007AEE  8EAB               	bsf	4011,7,c	;volatile
   742                           
   743                           ;Ap_ini.c: 90: TXSTAbits.TX9 = 0;
   744  007AF0  9CAC               	bcf	4012,6,c	;volatile
   745                           
   746                           ;Ap_ini.c: 91: TXSTAbits.TXEN = 1;
   747  007AF2  8AAC               	bsf	4012,5,c	;volatile
   748                           
   749                           ;Ap_ini.c: 94: (void) RCREG;
   750  007AF4  50AE               	movf	4014,w,c	;volatile
   751                           
   752                           ;Ap_ini.c: 95: (void) RCREG;
   753  007AF6  50AE               	movf	4014,w,c	;volatile
   754                           
   755                           ;Ap_ini.c: 96: (void) RCREG;
   756  007AF8  50AE               	movf	4014,w,c	;volatile
   757                           
   758                           ;Ap_ini.c: 97: RCSTAbits.RX9 = 0 ;
   759  007AFA  9CAB               	bcf	4011,6,c	;volatile
   760                           
   761                           ;Ap_ini.c: 98: PIE1bits.RCIE = 1;
   762  007AFC  8A9D               	bsf	3997,5,c	;volatile
   763                           
   764                           ;Ap_ini.c: 99: RCSTAbits.CREN = 1;
   765  007AFE  88AB               	bsf	4011,4,c	;volatile
   766                           
   767                           ;Ap_ini.c: 100: INTCONbits.PEIE = 1;
   768  007B00  8CF2               	bsf	intcon,6,c	;volatile
   769                           
   770                           ;Ap_ini.c: 102: TRISCbits.RC6 = 1;
   771  007B02  8C94               	bsf	3988,6,c	;volatile
   772                           
   773                           ;Ap_ini.c: 103: TRISCbits.RC7 = 1;
   774  007B04  8E94               	bsf	3988,7,c	;volatile
   775  007B06  0012               	return		;funcret
   776  007B08                     __end_of_usart_ini13:
   777                           	opt stack 0
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           intcon	equ	0xFF2
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           postdec1	equ	0xFE5
   786                           fsr1l	equ	0xFE1
   787                           status	equ	0xFD8
   788                           
   789 ;; *************** function _timer_ini13 *****************
   790 ;; Defined at:
   791 ;;		line 37 in file "Ap_ini.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;		None               void
   798 ;; Registers used:
   799 ;;		wreg, status,2
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   805 ;;      Params:         0       0       0       0       0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0
   808 ;;      Totals:         0       0       0       0       0       0       0       0       0
   809 ;;Total ram usage:        0 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    2
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text2
   820  007AA0                     __ptext2:
   821                           	opt stack 0
   822  007AA0                     _timer_ini13:
   823                           	opt stack 28
   824                           
   825                           ;Ap_ini.c: 38: T0CONbits.TMR0ON = 0;
   826                           
   827                           ;incstack = 0
   828  007AA0  9ED5               	bcf	4053,7,c	;volatile
   829                           
   830                           ;Ap_ini.c: 39: T0CONbits.T08BIT = 1;
   831  007AA2  8CD5               	bsf	4053,6,c	;volatile
   832                           
   833                           ;Ap_ini.c: 40: T0CONbits.T0CS = 0;
   834  007AA4  9AD5               	bcf	4053,5,c	;volatile
   835                           
   836                           ;Ap_ini.c: 41: T0CONbits.PSA = 0;
   837  007AA6  96D5               	bcf	4053,3,c	;volatile
   838                           
   839                           ;Ap_ini.c: 42: T0CONbits.T0PS0 = 1;
   840  007AA8  80D5               	bsf	4053,0,c	;volatile
   841                           
   842                           ;Ap_ini.c: 43: T0CONbits.T0PS1 = 1;
   843  007AAA  82D5               	bsf	4053,1,c	;volatile
   844                           
   845                           ;Ap_ini.c: 44: T0CONbits.T0PS2 = 1;
   846  007AAC  84D5               	bsf	4053,2,c	;volatile
   847                           
   848                           ;Ap_ini.c: 45: TMR0L = 209;
   849  007AAE  0ED1               	movlw	209
   850  007AB0  6ED6               	movwf	4054,c	;volatile
   851                           
   852                           ;Ap_ini.c: 46: TMR0H = 0xFF;
   853  007AB2  68D7               	setf	4055,c	;volatile
   854                           
   855                           ;Ap_ini.c: 47: INTCONbits.TMR0IE = 1;
   856  007AB4  8AF2               	bsf	intcon,5,c	;volatile
   857                           
   858                           ;Ap_ini.c: 48: T0CONbits.TMR0ON = 1;
   859  007AB6  8ED5               	bsf	4053,7,c	;volatile
   860  007AB8  0012               	return		;funcret
   861  007ABA                     __end_of_timer_ini13:
   862                           	opt stack 0
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           intcon	equ	0xFF2
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           postdec1	equ	0xFE5
   871                           fsr1l	equ	0xFE1
   872                           status	equ	0xFD8
   873                           
   874 ;; *************** function _timer1_ini13 *****************
   875 ;; Defined at:
   876 ;;		line 51 in file "Ap_ini.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;		None               void
   883 ;; Registers used:
   884 ;;		wreg, status,2
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   890 ;;      Params:         0       0       0       0       0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0
   893 ;;      Totals:         0       0       0       0       0       0       0       0       0
   894 ;;Total ram usage:        0 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; Hardware stack levels required when called:    2
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text3
   905  007A50                     __ptext3:
   906                           	opt stack 0
   907  007A50                     _timer1_ini13:
   908                           	opt stack 28
   909                           
   910                           ;Ap_ini.c: 53: T1CONbits.T1CKPS0=0;
   911                           
   912                           ;incstack = 0
   913  007A50  98CD               	bcf	4045,4,c	;volatile
   914                           
   915                           ;Ap_ini.c: 54: T1CONbits.T1CKPS1=0;
   916  007A52  9ACD               	bcf	4045,5,c	;volatile
   917                           
   918                           ;Ap_ini.c: 55: TMR1L=145;
   919  007A54  0E91               	movlw	145
   920  007A56  6ECE               	movwf	4046,c	;volatile
   921                           
   922                           ;Ap_ini.c: 56: TMR1H=0xFF;
   923  007A58  68CF               	setf	4047,c	;volatile
   924                           
   925                           ;Ap_ini.c: 57: PIR1bits.TMR1IF=0;
   926  007A5A  909E               	bcf	3998,0,c	;volatile
   927                           
   928                           ;Ap_ini.c: 58: PIE1bits.TMR1IE=1;
   929  007A5C  809D               	bsf	3997,0,c	;volatile
   930                           
   931                           ;Ap_ini.c: 59: T1CONbits.TMR1ON = 1;
   932  007A5E  80CD               	bsf	4045,0,c	;volatile
   933  007A60  0012               	return		;funcret
   934  007A62                     __end_of_timer1_ini13:
   935                           	opt stack 0
   936                           tblptru	equ	0xFF8
   937                           tblptrh	equ	0xFF7
   938                           tblptrl	equ	0xFF6
   939                           tablat	equ	0xFF5
   940                           intcon	equ	0xFF2
   941                           postinc0	equ	0xFEE
   942                           wreg	equ	0xFE8
   943                           postdec1	equ	0xFE5
   944                           fsr1l	equ	0xFE1
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function _rampa_ini13 *****************
   948 ;; Defined at:
   949 ;;		line 5 in file "rampa.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;		None               void
   956 ;; Registers used:
   957 ;;		wreg, status,2
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   963 ;;      Params:         0       0       0       0       0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    2
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text4
   978  007A76                     __ptext4:
   979                           	opt stack 0
   980  007A76                     _rampa_ini13:
   981                           	opt stack 28
   982                           
   983                           ;rampa.c: 6: rampa_status = 0;
   984                           
   985                           ;incstack = 0
   986  007A76  0E00               	movlw	0
   987  007A78  6E34               	movwf	_rampa_status,c
   988                           
   989                           ;rampa.c: 7: tiempo_rampa = 0;
   990  007A7A  0E00               	movlw	0
   991  007A7C  6E2A               	movwf	_tiempo_rampa+1,c
   992  007A7E  0E00               	movlw	0
   993  007A80  6E29               	movwf	_tiempo_rampa,c
   994                           
   995                           ;rampa.c: 8: TRISBbits.RB7 = 0;
   996  007A82  9E93               	bcf	3987,7,c	;volatile
   997                           
   998                           ;rampa.c: 9: TRISBbits.RB0 = 1;
   999  007A84  8093               	bsf	3987,0,c	;volatile
  1000                           
  1001                           ;rampa.c: 10: INTCON2bits.INTEDG0=0;
  1002  007A86  9CF1               	bcf	intcon2,6,c	;volatile
  1003  007A88  0012               	return		;funcret
  1004  007A8A                     __end_of_rampa_ini13:
  1005                           	opt stack 0
  1006                           tblptru	equ	0xFF8
  1007                           tblptrh	equ	0xFF7
  1008                           tblptrl	equ	0xFF6
  1009                           tablat	equ	0xFF5
  1010                           intcon	equ	0xFF2
  1011                           intcon2	equ	0xFF1
  1012                           postinc0	equ	0xFEE
  1013                           wreg	equ	0xFE8
  1014                           postdec1	equ	0xFE5
  1015                           fsr1l	equ	0xFE1
  1016                           status	equ	0xFD8
  1017                           
  1018 ;; *************** function _pic_ini13 *****************
  1019 ;; Defined at:
  1020 ;;		line 9 in file "Ap_ini.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;		None               void
  1027 ;; Registers used:
  1028 ;;		wreg, status,2
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1034 ;;      Params:         0       0       0       0       0       0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1037 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1038 ;;Total ram usage:        0 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    2
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text5
  1049  007B08                     __ptext5:
  1050                           	opt stack 0
  1051  007B08                     _pic_ini13:
  1052                           	opt stack 28
  1053                           
  1054                           ;Ap_ini.c: 12: LATA = 0x00;
  1055                           
  1056                           ;incstack = 0
  1057  007B08  0E00               	movlw	0
  1058  007B0A  6E89               	movwf	3977,c	;volatile
  1059                           
  1060                           ;Ap_ini.c: 13: LATB = 0x00;
  1061  007B0C  0E00               	movlw	0
  1062  007B0E  6E8A               	movwf	3978,c	;volatile
  1063                           
  1064                           ;Ap_ini.c: 14: LATC = 0x00;
  1065  007B10  0E00               	movlw	0
  1066  007B12  6E8B               	movwf	3979,c	;volatile
  1067                           
  1068                           ;Ap_ini.c: 15: LATD = 0x00;
  1069  007B14  0E00               	movlw	0
  1070  007B16  6E8C               	movwf	3980,c	;volatile
  1071                           
  1072                           ;Ap_ini.c: 16: LATE = 0x00;
  1073  007B18  0E00               	movlw	0
  1074  007B1A  6E8D               	movwf	3981,c	;volatile
  1075                           
  1076                           ;Ap_ini.c: 20: TRISD = 0xF0;
  1077  007B1C  0EF0               	movlw	240
  1078  007B1E  6E95               	movwf	3989,c	;volatile
  1079                           
  1080                           ;Ap_ini.c: 21: TRISCbits.RC6 = 0;
  1081  007B20  9C94               	bcf	3988,6,c	;volatile
  1082                           
  1083                           ;Ap_ini.c: 22: TRISCbits.RC7 = 0;
  1084  007B22  9E94               	bcf	3988,7,c	;volatile
  1085                           
  1086                           ;Ap_ini.c: 26: CMCON = 0x07;
  1087  007B24  0E07               	movlw	7
  1088  007B26  6EB4               	movwf	4020,c	;volatile
  1089                           
  1090                           ;Ap_ini.c: 27: ADCON1 = 0x0F;
  1091  007B28  0E0F               	movlw	15
  1092  007B2A  6EC1               	movwf	4033,c	;volatile
  1093                           
  1094                           ;Ap_ini.c: 28: TRISA = 0xC0;
  1095  007B2C  0EC0               	movlw	192
  1096  007B2E  6E92               	movwf	3986,c	;volatile
  1097                           
  1098                           ;Ap_ini.c: 29: TRISE = 0x00;
  1099  007B30  0E00               	movlw	0
  1100  007B32  6E96               	movwf	3990,c	;volatile
  1101                           
  1102                           ;Ap_ini.c: 33: TRISB = 0xFF;
  1103  007B34  6893               	setf	3987,c	;volatile
  1104  007B36  0012               	return		;funcret
  1105  007B38                     __end_of_pic_ini13:
  1106                           	opt stack 0
  1107                           tblptru	equ	0xFF8
  1108                           tblptrh	equ	0xFF7
  1109                           tblptrl	equ	0xFF6
  1110                           tablat	equ	0xFF5
  1111                           intcon	equ	0xFF2
  1112                           intcon2	equ	0xFF1
  1113                           postinc0	equ	0xFEE
  1114                           wreg	equ	0xFE8
  1115                           postdec1	equ	0xFE5
  1116                           fsr1l	equ	0xFE1
  1117                           status	equ	0xFD8
  1118                           
  1119 ;; *************** function _informar *****************
  1120 ;; Defined at:
  1121 ;;		line 78 in file "rampa.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  dato            2   15[COMRAM] PTR unsigned char 
  1124 ;;		 -> main@paquete(4), 
  1125 ;;  longitud        1   17[COMRAM] unsigned char 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  i               1   18[COMRAM] unsigned char 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;		None               void
  1130 ;; Registers used:
  1131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1137 ;;      Params:         3       0       0       0       0       0       0       0       0
  1138 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1140 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1141 ;;Total ram usage:        4 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    3
  1144 ;; This function calls:
  1145 ;;		_transmitir
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text6
  1152  007C0A                     __ptext6:
  1153                           	opt stack 0
  1154  007C0A                     _informar:
  1155                           	opt stack 27
  1156                           
  1157                           ;rampa.c: 79: char i=0;
  1158                           
  1159                           ;incstack = 0
  1160  007C0A  0E00               	movlw	0
  1161  007C0C  6E13               	movwf	informar@i,c
  1162                           
  1163                           ;rampa.c: 80: LATDbits.LD3=1;
  1164  007C0E  868C               	bsf	3980,3,c	;volatile
  1165                           
  1166                           ;rampa.c: 81: demora_envio=15;
  1167  007C10  0E0F               	movlw	15
  1168  007C12  6E31               	movwf	_demora_envio,c
  1169                           
  1170                           ;rampa.c: 82: while(demora_envio);
  1171  007C14  D000               	goto	l1624
  1172  007C16                     l1624:
  1173  007C16  5031               	movf	_demora_envio,w,c
  1174  007C18  A4D8               	btfss	status,2,c
  1175  007C1A  D7FD               	goto	l1624
  1176                           
  1177                           ;rampa.c: 84: transmitir(slave_id);
  1178  007C1C  503C               	movf	_slave_id,w,c
  1179  007C1E  EC19  F03D         	call	_transmitir
  1180                           
  1181                           ;rampa.c: 86: for(i=0;i<longitud;i++) transmitir(*(dato+i)+48);
  1182  007C22  0E00               	movlw	0
  1183  007C24  6E13               	movwf	informar@i,c
  1184  007C26  D00E               	goto	l1634
  1185  007C28                     l1630:
  1186  007C28  5013               	movf	informar@i,w,c
  1187  007C2A  0D01               	mullw	1
  1188  007C2C  50F3               	movf	prodl,w,c
  1189  007C2E  2410               	addwf	informar@dato,w,c
  1190  007C30  6ED9               	movwf	fsr2l,c
  1191  007C32  50F4               	movf	prodh,w,c
  1192  007C34  2011               	addwfc	informar@dato+1,w,c
  1193  007C36  6EDA               	movwf	fsr2h,c
  1194  007C38  50DF               	movf	indf2,w,c
  1195  007C3A  0F30               	addlw	48
  1196  007C3C  EC19  F03D         	call	_transmitir
  1197  007C40  2A13               	incf	informar@i,f,c
  1198  007C42  D000               	goto	l1634
  1199  007C44                     l1634:
  1200  007C44  5012               	movf	informar@longitud,w,c
  1201  007C46  5C13               	subwf	informar@i,w,c
  1202  007C48  A0D8               	btfss	status,0,c
  1203  007C4A  D7EE               	goto	l1630
  1204                           
  1205                           ;rampa.c: 88: transmitir('f');
  1206  007C4C  0E66               	movlw	102
  1207  007C4E  EC19  F03D         	call	_transmitir
  1208                           
  1209                           ;rampa.c: 90: demora_envio=15-10;
  1210  007C52  0E05               	movlw	5
  1211  007C54  6E31               	movwf	_demora_envio,c
  1212                           
  1213                           ;rampa.c: 91: while(demora_envio);
  1214  007C56  D000               	goto	l1640
  1215  007C58                     l1640:
  1216  007C58  5031               	movf	_demora_envio,w,c
  1217  007C5A  A4D8               	btfss	status,2,c
  1218  007C5C  D7FD               	goto	l1640
  1219                           
  1220                           ;rampa.c: 92: LATDbits.LD3=0;
  1221  007C5E  968C               	bcf	3980,3,c	;volatile
  1222  007C60  0012               	return		;funcret
  1223  007C62                     __end_of_informar:
  1224                           	opt stack 0
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           prodh	equ	0xFF4
  1230                           prodl	equ	0xFF3
  1231                           intcon	equ	0xFF2
  1232                           intcon2	equ	0xFF1
  1233                           postinc0	equ	0xFEE
  1234                           wreg	equ	0xFE8
  1235                           postdec1	equ	0xFE5
  1236                           fsr1l	equ	0xFE1
  1237                           indf2	equ	0xFDF
  1238                           fsr2h	equ	0xFDA
  1239                           fsr2l	equ	0xFD9
  1240                           status	equ	0xFD8
  1241                           
  1242 ;; *************** function _transmitir *****************
  1243 ;; Defined at:
  1244 ;;		line 94 in file "rampa.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  Dato            1    wreg     unsigned char 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;  Dato            1   14[COMRAM] unsigned char 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;		None               void
  1251 ;; Registers used:
  1252 ;;		wreg
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1258 ;;      Params:         0       0       0       0       0       0       0       0       0
  1259 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1261 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1262 ;;Total ram usage:        1 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:    2
  1265 ;; This function calls:
  1266 ;;		Nothing
  1267 ;; This function is called by:
  1268 ;;		_informar
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	text7
  1273  007A32                     __ptext7:
  1274                           	opt stack 0
  1275  007A32                     _transmitir:
  1276                           	opt stack 27
  1277                           
  1278                           ;incstack = 0
  1279                           ;transmitir@Dato stored from wreg
  1280  007A32  6E0F               	movwf	transmitir@Dato,c
  1281                           
  1282                           ;rampa.c: 96: while(!TXSTAbits.TRMT);
  1283  007A34  D000               	goto	l363
  1284  007A36                     l363:
  1285  007A36  A2AC               	btfss	4012,1,c	;volatile
  1286  007A38  D7FE               	goto	l363
  1287                           
  1288                           ;rampa.c: 97: TXREG = Dato;
  1289  007A3A  C00F  FFAD         	movff	transmitir@Dato,4013	;volatile
  1290  007A3E  0012               	return		;funcret
  1291  007A40                     __end_of_transmitir:
  1292                           	opt stack 0
  1293                           tblptru	equ	0xFF8
  1294                           tblptrh	equ	0xFF7
  1295                           tblptrl	equ	0xFF6
  1296                           tablat	equ	0xFF5
  1297                           prodh	equ	0xFF4
  1298                           prodl	equ	0xFF3
  1299                           intcon	equ	0xFF2
  1300                           intcon2	equ	0xFF1
  1301                           postinc0	equ	0xFEE
  1302                           wreg	equ	0xFE8
  1303                           postdec1	equ	0xFE5
  1304                           fsr1l	equ	0xFE1
  1305                           indf2	equ	0xFDF
  1306                           fsr2h	equ	0xFDA
  1307                           fsr2l	equ	0xFD9
  1308                           status	equ	0xFD8
  1309                           
  1310 ;; *************** function _decode *****************
  1311 ;; Defined at:
  1312 ;;		line 34 in file "rampa.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  dato_a_decod    1    wreg     unsigned char 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  dato_a_decod    1   15[COMRAM] unsigned char 
  1317 ;;  retorno         1   14[COMRAM] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      unsigned char 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1327 ;;      Params:         0       0       0       0       0       0       0       0       0
  1328 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1330 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1331 ;;Total ram usage:        2 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    2
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text8
  1342  007CBE                     __ptext8:
  1343                           	opt stack 0
  1344  007CBE                     _decode:
  1345                           	opt stack 28
  1346                           
  1347                           ;incstack = 0
  1348                           ;decode@dato_a_decod stored from wreg
  1349  007CBE  6E10               	movwf	decode@dato_a_decod,c
  1350                           
  1351                           ;rampa.c: 38: static unsigned char est_rec=address;
  1352                           ;rampa.c: 40: static char com_rec;
  1353                           ;rampa.c: 41: unsigned char retorno;
  1354                           ;rampa.c: 43: switch(est_rec){
  1355  007CC0  D02D               	goto	l1196
  1356  007CC2                     l1162:
  1357                           
  1358                           ;rampa.c: 45: if(dato_a_decod==slave_id ){
  1359  007CC2  503C               	movf	_slave_id,w,c
  1360  007CC4  1810               	xorwf	decode@dato_a_decod,w,c
  1361  007CC6  A4D8               	btfss	status,2,c
  1362  007CC8  D005               	goto	l1170
  1363                           
  1364                           ;rampa.c: 46: est_rec++;
  1365  007CCA  2A36               	incf	decode@est_rec,f,c
  1366                           
  1367                           ;rampa.c: 47: dato_a_decod = 0;
  1368  007CCC  0E00               	movlw	0
  1369  007CCE  6E10               	movwf	decode@dato_a_decod,c
  1370                           
  1371                           ;rampa.c: 48: retorno='p';
  1372  007CD0  0E70               	movlw	112
  1373  007CD2  D017               	goto	L3
  1374  007CD4                     l1170:
  1375                           
  1376                           ;rampa.c: 50: else if(dato_a_decod == broadcast_id){
  1377  007CD4  0E1D               	movlw	low _broadcast_id
  1378  007CD6  6EF6               	movwf	tblptrl,c
  1379  007CD8                     	if	1	;There is more than 1 active tblptr byte
  1380  007CD8  0E20               	movlw	high _broadcast_id
  1381  007CDA  6EF7               	movwf	tblptrh,c
  1382  007CDC                     	endif
  1383  007CDC                     	if	0	;There are less than 3 active tblptr bytes
  1384  007CDC                     	endif
  1385  007CDC  0008               	tblrd		*
  1386  007CDE  50F5               	movf	tablat,w,c
  1387  007CE0  6210               	cpfseq	decode@dato_a_decod,c
  1388  007CE2  D027               	goto	l1198
  1389                           
  1390                           ;rampa.c: 51: est_rec++;
  1391  007CE4  2A36               	incf	decode@est_rec,f,c
  1392                           
  1393                           ;rampa.c: 52: dato_a_decod = 0;
  1394  007CE6  0E00               	movlw	0
  1395  007CE8  6E10               	movwf	decode@dato_a_decod,c
  1396                           
  1397                           ;rampa.c: 53: retorno='b';
  1398  007CEA  0E62               	movlw	98
  1399  007CEC  D00A               	goto	L3
  1400                           
  1401                           ;rampa.c: 54: }
  1402                           ;rampa.c: 55: }break;
  1403  007CEE  D021               	goto	l1198
  1404  007CF0                     l1178:
  1405                           
  1406                           ;rampa.c: 58: if(dato_a_decod){
  1407  007CF0  5010               	movf	decode@dato_a_decod,w,c
  1408  007CF2  B4D8               	btfsc	status,2,c
  1409  007CF4  D01E               	goto	l1198
  1410                           
  1411                           ;rampa.c: 59: com_rec=dato_a_decod;
  1412  007CF6  C010  F035         	movff	decode@dato_a_decod,decode@com_rec
  1413                           
  1414                           ;rampa.c: 60: est_rec++;
  1415  007CFA  2A36               	incf	decode@est_rec,f,c
  1416                           
  1417                           ;rampa.c: 61: dato_a_decod = 0;
  1418  007CFC  0E00               	movlw	0
  1419  007CFE  6E10               	movwf	decode@dato_a_decod,c
  1420                           
  1421                           ;rampa.c: 62: retorno=0;
  1422  007D00  0E00               	movlw	0
  1423  007D02                     L3:
  1424  007D02  6E0F               	movwf	decode@retorno,c
  1425                           
  1426                           ;rampa.c: 64: }
  1427                           ;rampa.c: 65: }break;
  1428  007D04  D016               	goto	l1198
  1429  007D06                     l1188:
  1430                           
  1431                           ;rampa.c: 68: if(dato_a_decod=='f'){
  1432  007D06  0E66               	movlw	102
  1433  007D08  1810               	xorwf	decode@dato_a_decod,w,c
  1434  007D0A  A4D8               	btfss	status,2,c
  1435  007D0C  D012               	goto	l1198
  1436                           
  1437                           ;rampa.c: 69: est_rec=address;
  1438  007D0E  0E00               	movlw	0
  1439  007D10  6E36               	movwf	decode@est_rec,c
  1440                           
  1441                           ;rampa.c: 70: retorno = com_rec;
  1442  007D12  C035  F00F         	movff	decode@com_rec,decode@retorno
  1443                           
  1444                           ;rampa.c: 71: com_rec=0;
  1445  007D16  0E00               	movlw	0
  1446  007D18  6E35               	movwf	decode@com_rec,c
  1447                           
  1448                           ;rampa.c: 75: }
  1449                           
  1450                           ;rampa.c: 73: }
  1451                           ;rampa.c: 74: }break;
  1452  007D1A  D00B               	goto	l1198
  1453  007D1C                     l1196:
  1454  007D1C  5036               	movf	decode@est_rec,w,c
  1455                           
  1456                           ; Switch size 1, requested type "space"
  1457                           ; Number of cases is 3, Range of values is 0 to 2
  1458                           ; switch strategies available:
  1459                           ; Name         Instructions Cycles
  1460                           ; simple_byte           10     6 (average)
  1461                           ;	Chosen strategy is simple_byte
  1462  007D1E  0A00               	xorlw	0	; case 0
  1463  007D20  B4D8               	btfsc	status,2,c
  1464  007D22  D7CF               	goto	l1162
  1465  007D24  0A01               	xorlw	1	; case 1
  1466  007D26  B4D8               	btfsc	status,2,c
  1467  007D28  D7E3               	goto	l1178
  1468  007D2A  0A03               	xorlw	3	; case 2
  1469  007D2C  B4D8               	btfsc	status,2,c
  1470  007D2E  D7EB               	goto	l1188
  1471  007D30  D000               	goto	l1198
  1472  007D32                     l1198:
  1473                           
  1474                           ;rampa.c: 76: return retorno;
  1475  007D32  500F               	movf	decode@retorno,w,c
  1476  007D34  D000               	goto	l348
  1477  007D36                     l348:
  1478  007D36  0012               	return		;funcret
  1479  007D38                     __end_of_decode:
  1480                           	opt stack 0
  1481                           tblptru	equ	0xFF8
  1482                           tblptrh	equ	0xFF7
  1483                           tblptrl	equ	0xFF6
  1484                           tablat	equ	0xFF5
  1485                           prodh	equ	0xFF4
  1486                           prodl	equ	0xFF3
  1487                           intcon	equ	0xFF2
  1488                           intcon2	equ	0xFF1
  1489                           postinc0	equ	0xFEE
  1490                           wreg	equ	0xFE8
  1491                           postdec1	equ	0xFE5
  1492                           fsr1l	equ	0xFE1
  1493                           indf2	equ	0xFDF
  1494                           fsr2h	equ	0xFDA
  1495                           fsr2l	equ	0xFD9
  1496                           status	equ	0xFD8
  1497                           
  1498 ;; *************** function _assign_id *****************
  1499 ;; Defined at:
  1500 ;;		line 13 in file "rampa.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  id              1    wreg     unsigned char 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  id              1   14[COMRAM] unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;		None               void
  1507 ;; Registers used:
  1508 ;;		wreg
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1514 ;;      Params:         0       0       0       0       0       0       0       0       0
  1515 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1517 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1518 ;;Total ram usage:        1 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    2
  1521 ;; This function calls:
  1522 ;;		Nothing
  1523 ;; This function is called by:
  1524 ;;		_main
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text9
  1529  007A1E                     __ptext9:
  1530                           	opt stack 0
  1531  007A1E                     _assign_id:
  1532                           	opt stack 28
  1533                           
  1534                           ;incstack = 0
  1535                           ;assign_id@id stored from wreg
  1536  007A1E  6E0F               	movwf	assign_id@id,c
  1537                           
  1538                           ;rampa.c: 14: slave_id=id;
  1539  007A20  C00F  F03C         	movff	assign_id@id,_slave_id
  1540  007A24  0012               	return		;funcret
  1541  007A26                     __end_of_assign_id:
  1542                           	opt stack 0
  1543                           tblptru	equ	0xFF8
  1544                           tblptrh	equ	0xFF7
  1545                           tblptrl	equ	0xFF6
  1546                           tablat	equ	0xFF5
  1547                           prodh	equ	0xFF4
  1548                           prodl	equ	0xFF3
  1549                           intcon	equ	0xFF2
  1550                           intcon2	equ	0xFF1
  1551                           postinc0	equ	0xFEE
  1552                           wreg	equ	0xFE8
  1553                           postdec1	equ	0xFE5
  1554                           fsr1l	equ	0xFE1
  1555                           indf2	equ	0xFDF
  1556                           fsr2h	equ	0xFDA
  1557                           fsr2l	equ	0xFD9
  1558                           status	equ	0xFD8
  1559                           
  1560 ;; *************** function ___lwmod *****************
  1561 ;; Defined at:
  1562 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  dividend        2   14[COMRAM] unsigned int 
  1565 ;;  divisor         2   16[COMRAM] unsigned int 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  counter         1   18[COMRAM] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  2   14[COMRAM] unsigned int 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1577 ;;      Params:         4       0       0       0       0       0       0       0       0
  1578 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1580 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1581 ;;Total ram usage:        5 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    2
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text10
  1592  007B6E                     __ptext10:
  1593                           	opt stack 0
  1594  007B6E                     ___lwmod:
  1595                           	opt stack 28
  1596                           
  1597                           ;incstack = 0
  1598  007B6E  5011               	movf	___lwmod@divisor,w,c
  1599  007B70  1012               	iorwf	___lwmod@divisor+1,w,c
  1600  007B72  B4D8               	btfsc	status,2,c
  1601  007B74  D01D               	goto	l979
  1602  007B76  0E01               	movlw	1
  1603  007B78  6E13               	movwf	___lwmod@counter,c
  1604  007B7A  D005               	goto	l1708
  1605  007B7C                     l1706:
  1606  007B7C  90D8               	bcf	status,0,c
  1607  007B7E  3611               	rlcf	___lwmod@divisor,f,c
  1608  007B80  3612               	rlcf	___lwmod@divisor+1,f,c
  1609  007B82  2A13               	incf	___lwmod@counter,f,c
  1610  007B84  D000               	goto	l1708
  1611  007B86                     l1708:
  1612  007B86  BE12               	btfsc	___lwmod@divisor+1,7,c
  1613  007B88  D002               	goto	l1710
  1614  007B8A  D7F8               	goto	l1706
  1615  007B8C  D000               	goto	l1710
  1616  007B8E                     l1710:
  1617  007B8E  5011               	movf	___lwmod@divisor,w,c
  1618  007B90  5C0F               	subwf	___lwmod@dividend,w,c
  1619  007B92  5012               	movf	___lwmod@divisor+1,w,c
  1620  007B94  5810               	subwfb	___lwmod@dividend+1,w,c
  1621  007B96  A0D8               	btfss	status,0,c
  1622  007B98  D005               	goto	l1714
  1623  007B9A  5011               	movf	___lwmod@divisor,w,c
  1624  007B9C  5E0F               	subwf	___lwmod@dividend,f,c
  1625  007B9E  5012               	movf	___lwmod@divisor+1,w,c
  1626  007BA0  5A10               	subwfb	___lwmod@dividend+1,f,c
  1627  007BA2  D000               	goto	l1714
  1628  007BA4                     l1714:
  1629  007BA4  90D8               	bcf	status,0,c
  1630  007BA6  3212               	rrcf	___lwmod@divisor+1,f,c
  1631  007BA8  3211               	rrcf	___lwmod@divisor,f,c
  1632  007BAA  2E13               	decfsz	___lwmod@counter,f,c
  1633  007BAC  D7F0               	goto	l1710
  1634  007BAE  D000               	goto	l979
  1635  007BB0                     l979:
  1636  007BB0  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  1637  007BB4  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  1638  007BB8  0012               	return		;funcret
  1639  007BBA                     __end_of___lwmod:
  1640                           	opt stack 0
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           prodh	equ	0xFF4
  1646                           prodl	equ	0xFF3
  1647                           intcon	equ	0xFF2
  1648                           intcon2	equ	0xFF1
  1649                           postinc0	equ	0xFEE
  1650                           wreg	equ	0xFE8
  1651                           postdec1	equ	0xFE5
  1652                           fsr1l	equ	0xFE1
  1653                           indf2	equ	0xFDF
  1654                           fsr2h	equ	0xFDA
  1655                           fsr2l	equ	0xFD9
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function ___lwdiv *****************
  1659 ;; Defined at:
  1660 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  dividend        2   19[COMRAM] unsigned int 
  1663 ;;  divisor         2   21[COMRAM] unsigned int 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  quotient        2   23[COMRAM] unsigned int 
  1666 ;;  counter         1   25[COMRAM] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  2   19[COMRAM] unsigned int 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1676 ;;      Params:         4       0       0       0       0       0       0       0       0
  1677 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1679 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1680 ;;Total ram usage:        7 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    2
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_main
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text11
  1691  007C62                     __ptext11:
  1692                           	opt stack 0
  1693  007C62                     ___lwdiv:
  1694                           	opt stack 28
  1695                           
  1696                           ;incstack = 0
  1697  007C62  0E00               	movlw	0
  1698  007C64  6E19               	movwf	___lwdiv@quotient+1,c
  1699  007C66  0E00               	movlw	0
  1700  007C68  6E18               	movwf	___lwdiv@quotient,c
  1701  007C6A  5016               	movf	___lwdiv@divisor,w,c
  1702  007C6C  1017               	iorwf	___lwdiv@divisor+1,w,c
  1703  007C6E  B4D8               	btfsc	status,2,c
  1704  007C70  D021               	goto	l969
  1705  007C72  0E01               	movlw	1
  1706  007C74  6E1A               	movwf	___lwdiv@counter,c
  1707  007C76  D005               	goto	l1688
  1708  007C78                     l1686:
  1709  007C78  90D8               	bcf	status,0,c
  1710  007C7A  3616               	rlcf	___lwdiv@divisor,f,c
  1711  007C7C  3617               	rlcf	___lwdiv@divisor+1,f,c
  1712  007C7E  2A1A               	incf	___lwdiv@counter,f,c
  1713  007C80  D000               	goto	l1688
  1714  007C82                     l1688:
  1715  007C82  BE17               	btfsc	___lwdiv@divisor+1,7,c
  1716  007C84  D002               	goto	l1690
  1717  007C86  D7F8               	goto	l1686
  1718  007C88  D000               	goto	l1690
  1719  007C8A                     l1690:
  1720  007C8A  90D8               	bcf	status,0,c
  1721  007C8C  3618               	rlcf	___lwdiv@quotient,f,c
  1722  007C8E  3619               	rlcf	___lwdiv@quotient+1,f,c
  1723  007C90  5016               	movf	___lwdiv@divisor,w,c
  1724  007C92  5C14               	subwf	___lwdiv@dividend,w,c
  1725  007C94  5017               	movf	___lwdiv@divisor+1,w,c
  1726  007C96  5815               	subwfb	___lwdiv@dividend+1,w,c
  1727  007C98  A0D8               	btfss	status,0,c
  1728  007C9A  D006               	goto	l1698
  1729  007C9C  5016               	movf	___lwdiv@divisor,w,c
  1730  007C9E  5E14               	subwf	___lwdiv@dividend,f,c
  1731  007CA0  5017               	movf	___lwdiv@divisor+1,w,c
  1732  007CA2  5A15               	subwfb	___lwdiv@dividend+1,f,c
  1733  007CA4  8018               	bsf	___lwdiv@quotient,0,c
  1734  007CA6  D000               	goto	l1698
  1735  007CA8                     l1698:
  1736  007CA8  90D8               	bcf	status,0,c
  1737  007CAA  3217               	rrcf	___lwdiv@divisor+1,f,c
  1738  007CAC  3216               	rrcf	___lwdiv@divisor,f,c
  1739  007CAE  2E1A               	decfsz	___lwdiv@counter,f,c
  1740  007CB0  D7EC               	goto	l1690
  1741  007CB2  D000               	goto	l969
  1742  007CB4                     l969:
  1743  007CB4  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  1744  007CB8  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1745  007CBC  0012               	return		;funcret
  1746  007CBE                     __end_of___lwdiv:
  1747                           	opt stack 0
  1748                           tblptru	equ	0xFF8
  1749                           tblptrh	equ	0xFF7
  1750                           tblptrl	equ	0xFF6
  1751                           tablat	equ	0xFF5
  1752                           prodh	equ	0xFF4
  1753                           prodl	equ	0xFF3
  1754                           intcon	equ	0xFF2
  1755                           intcon2	equ	0xFF1
  1756                           postinc0	equ	0xFEE
  1757                           wreg	equ	0xFE8
  1758                           postdec1	equ	0xFE5
  1759                           fsr1l	equ	0xFE1
  1760                           indf2	equ	0xFDF
  1761                           fsr2h	equ	0xFDA
  1762                           fsr2l	equ	0xFD9
  1763                           status	equ	0xFD8
  1764                           
  1765 ;; *************** function _Send_4Disp *****************
  1766 ;; Defined at:
  1767 ;;		line 74 in file "Lemos.C"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  Umil            1    wreg     unsigned char 
  1770 ;;  Cent            1   16[COMRAM] unsigned char 
  1771 ;;  Dec             1   17[COMRAM] unsigned char 
  1772 ;;  Uni             1   18[COMRAM] unsigned char 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  Umil            1   19[COMRAM] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;		None               void
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1784 ;;      Params:         3       0       0       0       0       0       0       0       0
  1785 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1787 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1788 ;;Total ram usage:        4 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:    3
  1791 ;; This function calls:
  1792 ;;		_Send_Disp
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text12
  1799  007D38                     __ptext12:
  1800                           	opt stack 0
  1801  007D38                     _Send_4Disp:
  1802                           	opt stack 27
  1803                           
  1804                           ;incstack = 0
  1805                           ;Send_4Disp@Umil stored from wreg
  1806  007D38  6E14               	movwf	Send_4Disp@Umil,c
  1807                           
  1808                           ;Lemos.C: 76: static unsigned char Nro_Disp=1;
  1809                           ;Lemos.C: 78: switch(Nro_Disp){
  1810  007D3A  D036               	goto	l1678
  1811  007D3C                     l1644:
  1812                           
  1813                           ;Lemos.C: 80: if(!mux_tout){
  1814  007D3C  5033               	movf	_mux_tout,w,c
  1815  007D3E  A4D8               	btfss	status,2,c
  1816  007D40  D041               	goto	l248
  1817                           
  1818                           ;Lemos.C: 81: Send_Disp(1,Umil);
  1819  007D42  C014  F00F         	movff	Send_4Disp@Umil,Send_Disp@Dato
  1820  007D46  0E01               	movlw	1
  1821  007D48  ECDD  F03D         	call	_Send_Disp
  1822                           
  1823                           ;Lemos.C: 82: mux_tout = 4;;
  1824  007D4C  0E04               	movlw	4
  1825  007D4E  6E33               	movwf	_mux_tout,c
  1826                           
  1827                           ;Lemos.C: 83: Nro_Disp = 2;
  1828  007D50  0E02               	movlw	2
  1829  007D52  D025               	goto	L6
  1830                           
  1831                           ;Lemos.C: 84: }
  1832                           ;Lemos.C: 85: }
  1833                           ;Lemos.C: 86: break;
  1834  007D54  D037               	goto	l248
  1835  007D56                     l1652:
  1836                           
  1837                           ;Lemos.C: 88: if(!mux_tout){
  1838  007D56  5033               	movf	_mux_tout,w,c
  1839  007D58  A4D8               	btfss	status,2,c
  1840  007D5A  D034               	goto	l248
  1841                           
  1842                           ;Lemos.C: 89: Send_Disp(2,Cent);
  1843  007D5C  C011  F00F         	movff	Send_4Disp@Cent,Send_Disp@Dato
  1844  007D60  0E02               	movlw	2
  1845  007D62  ECDD  F03D         	call	_Send_Disp
  1846                           
  1847                           ;Lemos.C: 90: mux_tout = 4;;
  1848  007D66  0E04               	movlw	4
  1849  007D68  6E33               	movwf	_mux_tout,c
  1850                           
  1851                           ;Lemos.C: 91: Nro_Disp = 3;
  1852  007D6A  0E03               	movlw	3
  1853  007D6C  D018               	goto	L6
  1854                           
  1855                           ;Lemos.C: 92: }
  1856                           ;Lemos.C: 93: }
  1857                           ;Lemos.C: 94: break;
  1858  007D6E  D02A               	goto	l248
  1859  007D70                     l1660:
  1860                           
  1861                           ;Lemos.C: 96: if(!mux_tout){
  1862  007D70  5033               	movf	_mux_tout,w,c
  1863  007D72  A4D8               	btfss	status,2,c
  1864  007D74  D027               	goto	l248
  1865                           
  1866                           ;Lemos.C: 97: Send_Disp(3,Dec);
  1867  007D76  C012  F00F         	movff	Send_4Disp@Dec,Send_Disp@Dato
  1868  007D7A  0E03               	movlw	3
  1869  007D7C  ECDD  F03D         	call	_Send_Disp
  1870                           
  1871                           ;Lemos.C: 98: mux_tout = 4;;
  1872  007D80  0E04               	movlw	4
  1873  007D82  6E33               	movwf	_mux_tout,c
  1874                           
  1875                           ;Lemos.C: 99: Nro_Disp = 4;
  1876  007D84  0E04               	movlw	4
  1877  007D86  D00B               	goto	L6
  1878                           
  1879                           ;Lemos.C: 100: }
  1880                           ;Lemos.C: 101: }
  1881                           ;Lemos.C: 102: break;
  1882  007D88  D01D               	goto	l248
  1883  007D8A                     l1668:
  1884                           
  1885                           ;Lemos.C: 104: if(!mux_tout){
  1886  007D8A  5033               	movf	_mux_tout,w,c
  1887  007D8C  A4D8               	btfss	status,2,c
  1888  007D8E  D01A               	goto	l248
  1889                           
  1890                           ;Lemos.C: 105: Send_Disp(4,Uni);
  1891  007D90  C013  F00F         	movff	Send_4Disp@Uni,Send_Disp@Dato
  1892  007D94  0E04               	movlw	4
  1893  007D96  ECDD  F03D         	call	_Send_Disp
  1894  007D9A  D003               	goto	l1676
  1895  007D9C                     l1674:
  1896                           
  1897                           ;Lemos.C: 107: Nro_Disp = 1;
  1898  007D9C  0E01               	movlw	1
  1899  007D9E                     L6:
  1900  007D9E  6E38               	movwf	Send_4Disp@Nro_Disp,c
  1901                           
  1902                           ;Lemos.C: 108: }
  1903                           ;Lemos.C: 109: }
  1904                           ;Lemos.C: 110: break;
  1905  007DA0  D011               	goto	l248
  1906  007DA2                     l1676:
  1907                           
  1908                           ;Lemos.C: 112: mux_tout = 4;;
  1909  007DA2  0E04               	movlw	4
  1910  007DA4  6E33               	movwf	_mux_tout,c
  1911  007DA6  D7FA               	goto	l1674
  1912  007DA8                     l1678:
  1913  007DA8  5038               	movf	Send_4Disp@Nro_Disp,w,c
  1914                           
  1915                           ; Switch size 1, requested type "space"
  1916                           ; Number of cases is 4, Range of values is 1 to 4
  1917                           ; switch strategies available:
  1918                           ; Name         Instructions Cycles
  1919                           ; simple_byte           13     7 (average)
  1920                           ;	Chosen strategy is simple_byte
  1921  007DAA  0A01               	xorlw	1	; case 1
  1922  007DAC  B4D8               	btfsc	status,2,c
  1923  007DAE  D7C6               	goto	l1644
  1924  007DB0  0A03               	xorlw	3	; case 2
  1925  007DB2  B4D8               	btfsc	status,2,c
  1926  007DB4  D7D0               	goto	l1652
  1927  007DB6  0A01               	xorlw	1	; case 3
  1928  007DB8  B4D8               	btfsc	status,2,c
  1929  007DBA  D7DA               	goto	l1660
  1930  007DBC  0A07               	xorlw	7	; case 4
  1931  007DBE  B4D8               	btfsc	status,2,c
  1932  007DC0  D7E4               	goto	l1668
  1933  007DC2  D7EF               	goto	l1676
  1934  007DC4                     l248:
  1935  007DC4  0012               	return		;funcret
  1936  007DC6                     __end_of_Send_4Disp:
  1937                           	opt stack 0
  1938                           tblptru	equ	0xFF8
  1939                           tblptrh	equ	0xFF7
  1940                           tblptrl	equ	0xFF6
  1941                           tablat	equ	0xFF5
  1942                           prodh	equ	0xFF4
  1943                           prodl	equ	0xFF3
  1944                           intcon	equ	0xFF2
  1945                           intcon2	equ	0xFF1
  1946                           postinc0	equ	0xFEE
  1947                           wreg	equ	0xFE8
  1948                           postdec1	equ	0xFE5
  1949                           fsr1l	equ	0xFE1
  1950                           indf2	equ	0xFDF
  1951                           fsr2h	equ	0xFDA
  1952                           fsr2l	equ	0xFD9
  1953                           status	equ	0xFD8
  1954                           
  1955 ;; *************** function _Send_Disp *****************
  1956 ;; Defined at:
  1957 ;;		line 43 in file "Lemos.C"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  NroDisp         1    wreg     unsigned char 
  1960 ;;  Dato            1   14[COMRAM] unsigned char 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  NroDisp         1   15[COMRAM] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;		None               void
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1972 ;;      Params:         1       0       0       0       0       0       0       0       0
  1973 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1975 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1976 ;;Total ram usage:        2 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    2
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_Send_4Disp
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text13
  1987  007BBA                     __ptext13:
  1988                           	opt stack 0
  1989  007BBA                     _Send_Disp:
  1990                           	opt stack 27
  1991                           
  1992                           ;incstack = 0
  1993                           ;Send_Disp@NroDisp stored from wreg
  1994  007BBA  6E10               	movwf	Send_Disp@NroDisp,c
  1995                           
  1996                           ;Lemos.C: 45: LATA = 0;
  1997  007BBC  0E00               	movlw	0
  1998  007BBE  6E89               	movwf	3977,c	;volatile
  1999                           
  2000                           ;Lemos.C: 47: LATAbits.LA4 = 0;
  2001  007BC0  9889               	bcf	3977,4,c	;volatile
  2002                           
  2003                           ;Lemos.C: 48: LATAbits.LA5 = 0;
  2004  007BC2  9A89               	bcf	3977,5,c	;volatile
  2005                           
  2006                           ;Lemos.C: 49: LATEbits.LATE0 = 0;
  2007  007BC4  908D               	bcf	3981,0,c	;volatile
  2008                           
  2009                           ;Lemos.C: 50: LATEbits.LATE1 = 0;
  2010  007BC6  928D               	bcf	3981,1,c	;volatile
  2011                           
  2012                           ;Lemos.C: 52: switch(NroDisp){
  2013  007BC8  D008               	goto	l1612
  2014  007BCA                     l228:
  2015                           
  2016                           ;Lemos.C: 57: LATAbits.LA5 = 1;
  2017  007BCA  8A89               	bsf	3977,5,c	;volatile
  2018                           
  2019                           ;Lemos.C: 58: }break;
  2020  007BCC  D014               	goto	l1614
  2021  007BCE                     l229:
  2022                           
  2023                           ;Lemos.C: 60: LATEbits.LATE0 = 1;
  2024  007BCE  808D               	bsf	3981,0,c	;volatile
  2025                           
  2026                           ;Lemos.C: 61: }break;
  2027  007BD0  D012               	goto	l1614
  2028  007BD2                     l230:
  2029                           
  2030                           ;Lemos.C: 63: LATEbits.LATE1 = 1;
  2031  007BD2  828D               	bsf	3981,1,c	;volatile
  2032                           
  2033                           ;Lemos.C: 64: }break;
  2034  007BD4  D010               	goto	l1614
  2035  007BD6                     l231:
  2036                           
  2037                           ;Lemos.C: 66: LATAbits.LA4 = 1;
  2038  007BD6  8889               	bsf	3977,4,c	;volatile
  2039                           
  2040                           ;Lemos.C: 68: }
  2041                           
  2042                           ;Lemos.C: 67: }break;
  2043  007BD8  D00E               	goto	l1614
  2044  007BDA                     l1612:
  2045  007BDA  5010               	movf	Send_Disp@NroDisp,w,c
  2046                           
  2047                           ; Switch size 1, requested type "space"
  2048                           ; Number of cases is 4, Range of values is 1 to 4
  2049                           ; switch strategies available:
  2050                           ; Name         Instructions Cycles
  2051                           ; simple_byte           13     7 (average)
  2052                           ;	Chosen strategy is simple_byte
  2053  007BDC  0A01               	xorlw	1	; case 1
  2054  007BDE  B4D8               	btfsc	status,2,c
  2055  007BE0  D7FA               	goto	l231
  2056  007BE2  0A03               	xorlw	3	; case 2
  2057  007BE4  B4D8               	btfsc	status,2,c
  2058  007BE6  D7F1               	goto	l228
  2059  007BE8  0A01               	xorlw	1	; case 3
  2060  007BEA  B4D8               	btfsc	status,2,c
  2061  007BEC  D7F0               	goto	l229
  2062  007BEE  0A07               	xorlw	7	; case 4
  2063  007BF0  B4D8               	btfsc	status,2,c
  2064  007BF2  D7EF               	goto	l230
  2065  007BF4  D7F0               	goto	l231
  2066  007BF6                     l1614:
  2067                           
  2068                           ;Lemos.C: 69: Dato = Dato & 0x0F;
  2069  007BF6  500F               	movf	Send_Disp@Dato,w,c
  2070  007BF8  0B0F               	andlw	15
  2071  007BFA  6E0F               	movwf	Send_Disp@Dato,c
  2072                           
  2073                           ;Lemos.C: 70: LATA = LATA & 0xF0;
  2074  007BFC  5089               	movf	3977,w,c	;volatile
  2075  007BFE  0BF0               	andlw	240
  2076  007C00  6E89               	movwf	3977,c	;volatile
  2077                           
  2078                           ;Lemos.C: 71: LATA = LATA | Dato;
  2079  007C02  5089               	movf	3977,w,c	;volatile
  2080  007C04  100F               	iorwf	Send_Disp@Dato,w,c
  2081  007C06  6E89               	movwf	3977,c	;volatile
  2082  007C08  0012               	return		;funcret
  2083  007C0A                     __end_of_Send_Disp:
  2084                           	opt stack 0
  2085                           tblptru	equ	0xFF8
  2086                           tblptrh	equ	0xFF7
  2087                           tblptrl	equ	0xFF6
  2088                           tablat	equ	0xFF5
  2089                           prodh	equ	0xFF4
  2090                           prodl	equ	0xFF3
  2091                           intcon	equ	0xFF2
  2092                           intcon2	equ	0xFF1
  2093                           postinc0	equ	0xFEE
  2094                           wreg	equ	0xFE8
  2095                           postdec1	equ	0xFE5
  2096                           fsr1l	equ	0xFE1
  2097                           indf2	equ	0xFDF
  2098                           fsr2h	equ	0xFDA
  2099                           fsr2l	equ	0xFD9
  2100                           status	equ	0xFD8
  2101                           
  2102 ;; *************** function _ReadADC *****************
  2103 ;; Defined at:
  2104 ;;		line 24 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/ADC/adcread.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  2   14[COMRAM] int 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2118 ;;      Params:         2       0       0       0       0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2120 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2121 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2122 ;;Total ram usage:        4 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    2
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text14
  2133  007A40                     __ptext14:
  2134                           	opt stack 0
  2135  007A40                     _ReadADC:
  2136                           	opt stack 28
  2137                           
  2138                           ;incstack = 0
  2139  007A40  50C4               	movf	4036,w,c	;volatile
  2140  007A42  6E11               	movwf	??_ReadADC& (0+255),c
  2141  007A44  50C3               	movf	4035,w,c	;volatile
  2142  007A46  6E0F               	movwf	?_ReadADC,c
  2143  007A48  C011  F010         	movff	??_ReadADC,?_ReadADC+1
  2144  007A4C  D000               	goto	l448
  2145  007A4E                     l448:
  2146  007A4E  0012               	return		;funcret
  2147  007A50                     __end_of_ReadADC:
  2148                           	opt stack 0
  2149                           tblptru	equ	0xFF8
  2150                           tblptrh	equ	0xFF7
  2151                           tblptrl	equ	0xFF6
  2152                           tablat	equ	0xFF5
  2153                           prodh	equ	0xFF4
  2154                           prodl	equ	0xFF3
  2155                           intcon	equ	0xFF2
  2156                           intcon2	equ	0xFF1
  2157                           postinc0	equ	0xFEE
  2158                           wreg	equ	0xFE8
  2159                           postdec1	equ	0xFE5
  2160                           fsr1l	equ	0xFE1
  2161                           indf2	equ	0xFDF
  2162                           fsr2h	equ	0xFDA
  2163                           fsr2l	equ	0xFD9
  2164                           status	equ	0xFD8
  2165                           
  2166 ;; *************** function _myISR *****************
  2167 ;; Defined at:
  2168 ;;		line 123 in file "main.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;		None
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;		None               void
  2175 ;; Registers used:
  2176 ;;		wreg, status,2, status,0, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2182 ;;      Params:         0       0       0       0       0       0       0       0       0
  2183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2184 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2185 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2186 ;;Total ram usage:       14 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    1
  2189 ;; This function calls:
  2190 ;;		_ENVIO_tic
  2191 ;;		_RAMPA_tic
  2192 ;;		_SOLENOIDE_tic
  2193 ;;		_tic_timer0
  2194 ;; This function is called by:
  2195 ;;		Interrupt level 2
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	intcode
  2200  002008                     __pintcode:
  2201                           	opt stack 0
  2202  002008                     _myISR:
  2203                           	opt stack 27
  2204                           
  2205                           ;incstack = 0
  2206  002008  CFFA F001          	movff	pclath,??_myISR
  2207  00200C  CFFB F002          	movff	pclatu,??_myISR+1
  2208  002010  CFE9 F003          	movff	fsr0l,??_myISR+2
  2209  002014  EDE3  F03E         	call	int_func,f	;refresh shadow registers
  2210                           pclatu	equ	0xFFB
  2211                           pclath	equ	0xFFA
  2212                           tblptru	equ	0xFF8
  2213                           tblptrh	equ	0xFF7
  2214                           tblptrl	equ	0xFF6
  2215                           tablat	equ	0xFF5
  2216                           prodh	equ	0xFF4
  2217                           prodl	equ	0xFF3
  2218                           intcon	equ	0xFF2
  2219                           intcon2	equ	0xFF1
  2220                           postinc0	equ	0xFEE
  2221                           fsr0l	equ	0xFE9
  2222                           wreg	equ	0xFE8
  2223                           postdec1	equ	0xFE5
  2224                           fsr1l	equ	0xFE1
  2225                           indf2	equ	0xFDF
  2226                           fsr2h	equ	0xFDA
  2227                           fsr2l	equ	0xFD9
  2228                           status	equ	0xFD8
  2229                           
  2230                           	psect	intcode_body
  2231  007DC6                     __pintcode_body:
  2232                           	opt stack 27
  2233  007DC6                     int_func:
  2234                           	opt stack 27
  2235  007DC6  0006               	pop		; remove dummy address from shadow register refresh
  2236  007DC8  CFEA F004          	movff	fsr0h,??_myISR+3
  2237  007DCC  CFE1 F005          	movff	fsr1l,??_myISR+4
  2238  007DD0  CFE2 F006          	movff	fsr1h,??_myISR+5
  2239  007DD4  CFD9 F007          	movff	fsr2l,??_myISR+6
  2240  007DD8  CFDA F008          	movff	fsr2h,??_myISR+7
  2241  007DDC  CFF3 F009          	movff	prodl,??_myISR+8
  2242  007DE0  CFF4 F00A          	movff	prodh,??_myISR+9
  2243  007DE4  CFF6 F00B          	movff	tblptrl,??_myISR+10
  2244  007DE8  CFF7 F00C          	movff	tblptrh,??_myISR+11
  2245  007DEC  CFF8 F00D          	movff	tblptru,??_myISR+12
  2246  007DF0  CFF5 F00E          	movff	tablat,??_myISR+13
  2247                           
  2248                           ;main.c: 125: if(TMR0IF){
  2249  007DF4  A4F2               	btfss	intcon,2,c	;volatile
  2250  007DF6  D017               	goto	i2l1384
  2251                           
  2252                           ;main.c: 126: INTCONbits.TMR0IF = 0;
  2253  007DF8  94F2               	bcf	intcon,2,c	;volatile
  2254                           
  2255                           ;main.c: 127: TMR0L = 209;
  2256  007DFA  0ED1               	movlw	209
  2257  007DFC  6ED6               	movwf	4054,c	;volatile
  2258                           
  2259                           ;main.c: 128: TMR0H = 0xFF;
  2260  007DFE  68D7               	setf	4055,c	;volatile
  2261                           
  2262                           ;main.c: 130: tic_timer0();
  2263  007E00  EC5D  F03D         	call	_tic_timer0	;wreg free
  2264                           
  2265                           ;main.c: 136: if(rampa_status) RAMPA_tic();
  2266  007E04  5034               	movf	_rampa_status,w,c
  2267  007E06  B4D8               	btfsc	status,2,c
  2268  007E08  D003               	goto	i2l1376
  2269  007E0A  EC31  F03D         	call	_RAMPA_tic	;wreg free
  2270  007E0E  D000               	goto	i2l1376
  2271  007E10                     i2l1376:
  2272                           
  2273                           ;main.c: 137: if(demora_envio) ENVIO_tic();
  2274  007E10  5031               	movf	_demora_envio,w,c
  2275  007E12  B4D8               	btfsc	status,2,c
  2276  007E14  D003               	goto	i2l1380
  2277  007E16  EC13  F03D         	call	_ENVIO_tic	;wreg free
  2278  007E1A  D000               	goto	i2l1380
  2279  007E1C                     i2l1380:
  2280                           
  2281                           ;main.c: 138: if(LATDbits.LD2) SOLENOIDE_tic();
  2282  007E1C  A48C               	btfss	3980,2,c	;volatile
  2283  007E1E  D003               	goto	i2l1384
  2284  007E20  EC45  F03D         	call	_SOLENOIDE_tic	;wreg free
  2285  007E24  D000               	goto	i2l1384
  2286  007E26                     i2l1384:
  2287                           
  2288                           ;main.c: 143: }
  2289                           ;main.c: 146: if(TMR1IF){
  2290  007E26  A09E               	btfss	3998,0,c	;volatile
  2291  007E28  D006               	goto	i2l1394
  2292                           
  2293                           ;main.c: 147: PIR1bits.TMR1IF = 0;
  2294  007E2A  909E               	bcf	3998,0,c	;volatile
  2295                           
  2296                           ;main.c: 148: TMR1L=144;
  2297  007E2C  0E90               	movlw	144
  2298  007E2E  6ECE               	movwf	4046,c	;volatile
  2299                           
  2300                           ;main.c: 149: TMR1H=0xFF;
  2301  007E30  68CF               	setf	4047,c	;volatile
  2302                           
  2303                           ;main.c: 152: LATBbits.LATB7 = ~LATBbits.LATB7;
  2304  007E32  7E8A               	btg	3978,7,c	;volatile
  2305  007E34  D000               	goto	i2l1394
  2306  007E36                     i2l1394:
  2307                           
  2308                           ;main.c: 154: }
  2309                           ;main.c: 155: if(RCIF){
  2310  007E36  AA9E               	btfss	3998,5,c	;volatile
  2311  007E38  D005               	goto	i2l1400
  2312                           
  2313                           ;main.c: 156: RCIF=0;
  2314  007E3A  9A9E               	bcf	3998,5,c	;volatile
  2315                           
  2316                           ;main.c: 157: caracter_recibido=RCREG;
  2317  007E3C  CFAE F030          	movff	4014,_caracter_recibido	;volatile
  2318                           
  2319                           ;main.c: 158: (void) RCREG;
  2320  007E40  50AE               	movf	4014,w,c	;volatile
  2321  007E42  D000               	goto	i2l1400
  2322  007E44                     i2l1400:
  2323                           
  2324                           ;main.c: 159: }
  2325                           ;main.c: 160: if(INT0IF){
  2326  007E44  A2F2               	btfss	intcon,1,c	;volatile
  2327  007E46  D005               	goto	i2l108
  2328                           
  2329                           ;main.c: 161: rampa_status=0;
  2330  007E48  0E00               	movlw	0
  2331  007E4A  6E34               	movwf	_rampa_status,c
  2332                           
  2333                           ;main.c: 162: INTCONbits.INT0IE=0;
  2334  007E4C  98F2               	bcf	intcon,4,c	;volatile
  2335                           
  2336                           ;main.c: 163: INTCONbits.INT0IF=0;
  2337  007E4E  92F2               	bcf	intcon,1,c	;volatile
  2338  007E50  D000               	goto	i2l108
  2339  007E52                     i2l108:
  2340  007E52  C00E  FFF5         	movff	??_myISR+13,tablat
  2341  007E56  C00D  FFF8         	movff	??_myISR+12,tblptru
  2342  007E5A  C00C  FFF7         	movff	??_myISR+11,tblptrh
  2343  007E5E  C00B  FFF6         	movff	??_myISR+10,tblptrl
  2344  007E62  C00A  FFF4         	movff	??_myISR+9,prodh
  2345  007E66  C009  FFF3         	movff	??_myISR+8,prodl
  2346  007E6A  C008  FFDA         	movff	??_myISR+7,fsr2h
  2347  007E6E  C007  FFD9         	movff	??_myISR+6,fsr2l
  2348  007E72  C006  FFE2         	movff	??_myISR+5,fsr1h
  2349  007E76  C005  FFE1         	movff	??_myISR+4,fsr1l
  2350  007E7A  C004  FFEA         	movff	??_myISR+3,fsr0h
  2351  007E7E  C003  FFE9         	movff	??_myISR+2,fsr0l
  2352  007E82  C002  FFFB         	movff	??_myISR+1,pclatu
  2353  007E86  C001  FFFA         	movff	??_myISR,pclath
  2354  007E8A  0011               	retfie		f
  2355  007E8C                     __end_of_myISR:
  2356                           	opt stack 0
  2357                           pclatu	equ	0xFFB
  2358                           pclath	equ	0xFFA
  2359                           tblptru	equ	0xFF8
  2360                           tblptrh	equ	0xFF7
  2361                           tblptrl	equ	0xFF6
  2362                           tablat	equ	0xFF5
  2363                           prodh	equ	0xFF4
  2364                           prodl	equ	0xFF3
  2365                           intcon	equ	0xFF2
  2366                           intcon2	equ	0xFF1
  2367                           postinc0	equ	0xFEE
  2368                           fsr0h	equ	0xFEA
  2369                           fsr0l	equ	0xFE9
  2370                           wreg	equ	0xFE8
  2371                           postdec1	equ	0xFE5
  2372                           fsr1h	equ	0xFE2
  2373                           fsr1l	equ	0xFE1
  2374                           indf2	equ	0xFDF
  2375                           fsr2h	equ	0xFDA
  2376                           fsr2l	equ	0xFD9
  2377                           status	equ	0xFD8
  2378                           
  2379 ;; *************** function _tic_timer0 *****************
  2380 ;; Defined at:
  2381 ;;		line 117 in file "Lemos.C"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;		None
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;		None               void
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2395 ;;      Params:         0       0       0       0       0       0       0       0       0
  2396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2398 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2399 ;;Total ram usage:        0 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_myISR
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text16
  2409  007ABA                     __ptext16:
  2410                           	opt stack 0
  2411  007ABA                     _tic_timer0:
  2412                           	opt stack 27
  2413                           
  2414                           ;Lemos.C: 118: if(mux_tout)mux_tout--;
  2415                           
  2416                           ;incstack = 0
  2417  007ABA  5033               	movf	_mux_tout,w,c
  2418  007ABC  B4D8               	btfsc	status,2,c
  2419  007ABE  D002               	goto	i2l1244
  2420  007AC0  0633               	decf	_mux_tout,f,c
  2421  007AC2  D000               	goto	i2l1244
  2422  007AC4                     i2l1244:
  2423                           
  2424                           ;Lemos.C: 119: if(bot_tout)bot_tout--;
  2425  007AC4  502F               	movf	_bot_tout,w,c
  2426  007AC6  B4D8               	btfsc	status,2,c
  2427  007AC8  D002               	goto	i2l1248
  2428  007ACA  062F               	decf	_bot_tout,f,c
  2429  007ACC  D000               	goto	i2l1248
  2430  007ACE                     i2l1248:
  2431                           
  2432                           ;Lemos.C: 120: if(led_tout)led_tout--;
  2433  007ACE  5027               	movf	_led_tout,w,c
  2434  007AD0  1028               	iorwf	_led_tout+1,w,c
  2435  007AD2  B4D8               	btfsc	status,2,c
  2436  007AD4  D004               	goto	i2l254
  2437  007AD6  0627               	decf	_led_tout,f,c
  2438  007AD8  A0D8               	btfss	status,0,c
  2439  007ADA  0628               	decf	_led_tout+1,f,c
  2440  007ADC  D000               	goto	i2l254
  2441  007ADE                     i2l254:
  2442  007ADE  0012               	return		;funcret
  2443  007AE0                     __end_of_tic_timer0:
  2444                           	opt stack 0
  2445                           pclatu	equ	0xFFB
  2446                           pclath	equ	0xFFA
  2447                           tblptru	equ	0xFF8
  2448                           tblptrh	equ	0xFF7
  2449                           tblptrl	equ	0xFF6
  2450                           tablat	equ	0xFF5
  2451                           prodh	equ	0xFF4
  2452                           prodl	equ	0xFF3
  2453                           intcon	equ	0xFF2
  2454                           intcon2	equ	0xFF1
  2455                           postinc0	equ	0xFEE
  2456                           fsr0h	equ	0xFEA
  2457                           fsr0l	equ	0xFE9
  2458                           wreg	equ	0xFE8
  2459                           postdec1	equ	0xFE5
  2460                           fsr1h	equ	0xFE2
  2461                           fsr1l	equ	0xFE1
  2462                           indf2	equ	0xFDF
  2463                           fsr2h	equ	0xFDA
  2464                           fsr2l	equ	0xFD9
  2465                           status	equ	0xFD8
  2466                           
  2467 ;; *************** function _SOLENOIDE_tic *****************
  2468 ;; Defined at:
  2469 ;;		line 29 in file "rampa.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;		None               void
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2483 ;;      Params:         0       0       0       0       0       0       0       0       0
  2484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2486 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_myISR
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text17
  2497  007A8A                     __ptext17:
  2498                           	opt stack 0
  2499  007A8A                     _SOLENOIDE_tic:
  2500                           	opt stack 27
  2501                           
  2502                           ;rampa.c: 30: if(demora_solenoide)demora_solenoide--;
  2503                           
  2504                           ;incstack = 0
  2505  007A8A  5025               	movf	_demora_solenoide,w,c
  2506  007A8C  1026               	iorwf	_demora_solenoide+1,w,c
  2507  007A8E  B4D8               	btfsc	status,2,c
  2508  007A90  D004               	goto	i2l329
  2509  007A92  0625               	decf	_demora_solenoide,f,c
  2510  007A94  A0D8               	btfss	status,0,c
  2511  007A96  0626               	decf	_demora_solenoide+1,f,c
  2512  007A98  D002               	goto	i2l331
  2513  007A9A                     i2l329:
  2514                           
  2515                           ;rampa.c: 31: else LATDbits.LD2 = 0;
  2516  007A9A  948C               	bcf	3980,2,c	;volatile
  2517  007A9C  D000               	goto	i2l331
  2518  007A9E                     i2l331:
  2519  007A9E  0012               	return		;funcret
  2520  007AA0                     __end_of_SOLENOIDE_tic:
  2521                           	opt stack 0
  2522                           pclatu	equ	0xFFB
  2523                           pclath	equ	0xFFA
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           prodh	equ	0xFF4
  2529                           prodl	equ	0xFF3
  2530                           intcon	equ	0xFF2
  2531                           intcon2	equ	0xFF1
  2532                           postinc0	equ	0xFEE
  2533                           fsr0h	equ	0xFEA
  2534                           fsr0l	equ	0xFE9
  2535                           wreg	equ	0xFE8
  2536                           postdec1	equ	0xFE5
  2537                           fsr1h	equ	0xFE2
  2538                           fsr1l	equ	0xFE1
  2539                           indf2	equ	0xFDF
  2540                           fsr2h	equ	0xFDA
  2541                           fsr2l	equ	0xFD9
  2542                           status	equ	0xFD8
  2543                           
  2544 ;; *************** function _RAMPA_tic *****************
  2545 ;; Defined at:
  2546 ;;		line 16 in file "rampa.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;		None               void
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2563 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2564 ;;Total ram usage:        0 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_myISR
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text18
  2574  007A62                     __ptext18:
  2575                           	opt stack 0
  2576  007A62                     _RAMPA_tic:
  2577                           	opt stack 27
  2578                           
  2579                           ;rampa.c: 17: if(tiempo_rampa<9999)tiempo_rampa++;
  2580                           
  2581                           ;incstack = 0
  2582  007A62  0E0F               	movlw	15
  2583  007A64  5C29               	subwf	_tiempo_rampa,w,c
  2584  007A66  0E27               	movlw	39
  2585  007A68  582A               	subwfb	_tiempo_rampa+1,w,c
  2586  007A6A  B0D8               	btfsc	status,0,c
  2587  007A6C  D003               	goto	i2l317
  2588  007A6E  4A29               	infsnz	_tiempo_rampa,f,c
  2589  007A70  2A2A               	incf	_tiempo_rampa+1,f,c
  2590  007A72  D000               	goto	i2l317
  2591  007A74                     i2l317:
  2592  007A74  0012               	return		;funcret
  2593  007A76                     __end_of_RAMPA_tic:
  2594                           	opt stack 0
  2595                           pclatu	equ	0xFFB
  2596                           pclath	equ	0xFFA
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           prodh	equ	0xFF4
  2602                           prodl	equ	0xFF3
  2603                           intcon	equ	0xFF2
  2604                           intcon2	equ	0xFF1
  2605                           postinc0	equ	0xFEE
  2606                           fsr0h	equ	0xFEA
  2607                           fsr0l	equ	0xFE9
  2608                           wreg	equ	0xFE8
  2609                           postdec1	equ	0xFE5
  2610                           fsr1h	equ	0xFE2
  2611                           fsr1l	equ	0xFE1
  2612                           indf2	equ	0xFDF
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _ENVIO_tic *****************
  2618 ;; Defined at:
  2619 ;;		line 19 in file "rampa.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;		None               void
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2633 ;;      Params:         0       0       0       0       0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_myISR
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text19
  2647  007A26                     __ptext19:
  2648                           	opt stack 0
  2649  007A26                     _ENVIO_tic:
  2650                           	opt stack 27
  2651                           
  2652                           ;rampa.c: 20: if(demora_envio)demora_envio--;
  2653                           
  2654                           ;incstack = 0
  2655  007A26  5031               	movf	_demora_envio,w,c
  2656  007A28  B4D8               	btfsc	status,2,c
  2657  007A2A  D002               	goto	i2l321
  2658  007A2C  0631               	decf	_demora_envio,f,c
  2659  007A2E  D000               	goto	i2l321
  2660  007A30                     i2l321:
  2661  007A30  0012               	return		;funcret
  2662  007A32                     __end_of_ENVIO_tic:
  2663                           	opt stack 0
  2664                           pclatu	equ	0xFFB
  2665                           pclath	equ	0xFFA
  2666                           tblptru	equ	0xFF8
  2667                           tblptrh	equ	0xFF7
  2668                           tblptrl	equ	0xFF6
  2669                           tablat	equ	0xFF5
  2670                           prodh	equ	0xFF4
  2671                           prodl	equ	0xFF3
  2672                           intcon	equ	0xFF2
  2673                           intcon2	equ	0xFF1
  2674                           postinc0	equ	0xFEE
  2675                           fsr0h	equ	0xFEA
  2676                           fsr0l	equ	0xFE9
  2677                           wreg	equ	0xFE8
  2678                           postdec1	equ	0xFE5
  2679                           fsr1h	equ	0xFE2
  2680                           fsr1l	equ	0xFE1
  2681                           indf2	equ	0xFDF
  2682                           fsr2h	equ	0xFDA
  2683                           fsr2l	equ	0xFD9
  2684                           status	equ	0xFD8
  2685                           pclatu	equ	0xFFB
  2686                           pclath	equ	0xFFA
  2687                           tblptru	equ	0xFF8
  2688                           tblptrh	equ	0xFF7
  2689                           tblptrl	equ	0xFF6
  2690                           tablat	equ	0xFF5
  2691                           prodh	equ	0xFF4
  2692                           prodl	equ	0xFF3
  2693                           intcon	equ	0xFF2
  2694                           intcon2	equ	0xFF1
  2695                           postinc0	equ	0xFEE
  2696                           fsr0h	equ	0xFEA
  2697                           fsr0l	equ	0xFE9
  2698                           wreg	equ	0xFE8
  2699                           postdec1	equ	0xFE5
  2700                           fsr1h	equ	0xFE2
  2701                           fsr1l	equ	0xFE1
  2702                           indf2	equ	0xFDF
  2703                           fsr2h	equ	0xFDA
  2704                           fsr2l	equ	0xFD9
  2705                           status	equ	0xFD8
  2706                           
  2707                           	psect	rparam
  2708  0000                     pclatu	equ	0xFFB
  2709                           pclath	equ	0xFFA
  2710                           tblptru	equ	0xFF8
  2711                           tblptrh	equ	0xFF7
  2712                           tblptrl	equ	0xFF6
  2713                           tablat	equ	0xFF5
  2714                           prodh	equ	0xFF4
  2715                           prodl	equ	0xFF3
  2716                           intcon	equ	0xFF2
  2717                           intcon2	equ	0xFF1
  2718                           postinc0	equ	0xFEE
  2719                           fsr0h	equ	0xFEA
  2720                           fsr0l	equ	0xFE9
  2721                           wreg	equ	0xFE8
  2722                           postdec1	equ	0xFE5
  2723                           fsr1h	equ	0xFE2
  2724                           fsr1l	equ	0xFE1
  2725                           indf2	equ	0xFDF
  2726                           fsr2h	equ	0xFDA
  2727                           fsr2l	equ	0xFD9
  2728                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1
    Data        4
    BSS         21
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      60
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    informar@dato	PTR unsigned char  size(2) Largest target is 4
		 -> main@paquete(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    _informar->_transmitir
    ___lwdiv->___lwmod
    _Send_4Disp->_Send_Disp

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2290
                                             26 COMRAM     8     8      0
                            _ReadADC
                         _Send_4Disp
                            ___lwdiv
                            ___lwmod
                          _assign_id
                             _decode
                           _informar
                          _pic_ini13
                        _rampa_ini13
                       _timer1_ini13
                        _timer_ini13
                        _usart_ini13
 ---------------------------------------------------------------------------------
 (1) _usart_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_ini13                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rampa_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pic_ini13                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _informar                                             4     1      3     234
                                             15 COMRAM     4     1      3
                         _transmitir
 ---------------------------------------------------------------------------------
 (2) _transmitir                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _decode                                               2     2      0      90
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _assign_id                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     543
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     546
                                             19 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Send_4Disp                                           4     1      3     603
                                             16 COMRAM     4     1      3
                          _Send_Disp
 ---------------------------------------------------------------------------------
 (2) _Send_Disp                                            2     1      1     323
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                               14    14      0       0
                                              0 COMRAM    14    14      0
                          _ENVIO_tic
                          _RAMPA_tic
                      _SOLENOIDE_tic
                         _tic_timer0
 ---------------------------------------------------------------------------------
 (4) _tic_timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SOLENOIDE_tic                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RAMPA_tic                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ENVIO_tic                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadADC
   _Send_4Disp
     _Send_Disp
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _assign_id
   _decode
   _informar
     _transmitir
   _pic_ini13
   _rampa_ini13
   _timer1_ini13
   _timer_ini13
   _usart_ini13

 _myISR (ROOT)
   _ENVIO_tic
   _RAMPA_tic
   _SOLENOIDE_tic
   _tic_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      3C       1       63.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C      20        0.0%
DATA                 0      0      3C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Sep  3 22:32:15 2015

                        l95 7FE8                 __CFG_BOR$ON 000000                 __CFG_BORV$3 000000  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                         l230 7BD2  
                       l231 7BD6                         l228 7BCA                         l229 7BCE  
                       l248 7DC4                         l363 7A36                         l348 7D36  
                       l448 7A4E                         _DEC 002C                         l969 7CB4  
                       l979 7BB0                __CFG_CPB$OFF 000000                         _PR2 000FCB  
                       u720 7F58                         _UNI 002E                         wreg 000FE8  
             Send_Disp@Dato 000F                __CFG_LVP$OFF 000000                __CFG_WDT$OFF 000000  
                      l1170 7CD4                        l1162 7CC2                        l1178 7CF0  
                      l1612 7BDA                        l1188 7D06                        l1196 7D1C  
                      l1614 7BF6                        l1710 7B8E                        l1198 7D32  
                      l1630 7C28                        l1640 7C58                        l1624 7C16  
                      l1714 7BA4                        l1706 7B7C                        l1634 7C44  
                      l1660 7D70                        l1652 7D56                        l1644 7D3C  
                      l1708 7B86                        l1740 7EBE                        l1744 7ECE  
                      l1674 7D9C                        l1690 7C8A                        l1762 7EF6  
                      l1746 7ED2                        l1770 7F18                        l1676 7DA2  
                      l1668 7D8A                        l1756 7EEC                        l1748 7ED8  
                      l1772 7F4A                        l1678 7DA8                        l1686 7C78  
                      l1766 7F0E                        l1688 7C82                        l1698 7CA8  
                      _CENT 002B                        _LATA 000F89                        _LATB 000F8A  
                      _LATC 000F8B                        _LATD 000F8C                        _LATE 000F8D  
                      _RCIF 007CF5                        _UMIL 002D                 _usart_ini13 7AE0  
               main@paquete 001F                        _main 7E8C                        fsr0h 000FEA  
                      fsr1h 000FE2                        fsr0l 000FE9                        fsr2h 000FDA  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
                      pclat 000FFA          __size_of_ENVIO_tic 000C                        prodh 000FF4  
                      prodl 000FF3                        start 2018               __CFG_IESO$OFF 000000  
             __CFG_MCLRE$ON 000000                ___param_bank 000010             __end_of_ReadADC 7A50  
        __size_of_RAMPA_tic 0014               __CFG_PLLDIV$5 000000                 assign_id@id 000F  
                     ?_main 0001                       _CMCON 000FB4             __end_of___lwdiv 7CBE  
           __end_of___lwmod 7BBA                       i2l108 7E52                       i2l321 7A30  
                     i2l331 7A9E                       i2l317 7A74                       i2l254 7ADE  
                     i2l329 7A9A                       _RCREG 000FAE                       _TMR0H 000FD7  
                     _TMR1H 000FCF                       _TMR0L 000FD6                       _TMR1L 000FCE  
                     _SPBRG 000FAF               __CFG_USBDIV$2 000000                       _TRISA 000F92  
                     _TRISB 000F93                       _TRISD 000F95                       _TRISE 000F96  
                     _TXREG 000FAD               __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000              __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000  
            __CFG_EBTR1$OFF 000000               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
            __CFG_EBTRB$OFF 000000                       _myISR 2008                       leds@i 003B  
                     tablat 000FF5                       status 000FD8             __initialization 7B38  
main@backup_ultimo_caracter 001D                ?_rampa_ini13 0001                __end_of_main 8000  
                    ??_main 001B               __activetblptr 000002           __end_of_ENVIO_tic 7A32  
                _Send_4Disp 7D38                      _ADCON1 000FC1                      ?_myISR 0001  
                    _ADRESH 000FC4                      _ADRESL 000FC3                      _CCPR1L 000FBE  
         __end_of_RAMPA_tic 7A76                      _INT0IF 007F91                      _MEMDIG 0039  
                    i2l1400 7E44                      i2l1244 7AC4                      i2l1248 7ACE  
                    i2l1380 7E1C                      i2l1376 7E10                      i2l1384 7E26  
                    i2l1394 7E36                      _TMR0IF 007F92                      _TMR1IF 007CF0  
                    _SPBRGH 000FB0                   ??_ReadADC 0011              __CFG_VREGEN$ON 000000  
            __CFG_XINST$OFF 000000          __size_of_Send_Disp 0050              __CFG_STVREN$ON 000000  
                    _decode 7CBE                   ??___lwdiv 0018                   ??___lwmod 0013  
          __end_of_informar 7C62                      clear_0 7B3E       __end_of_SOLENOIDE_tic 7AA0  
                    _modula 003A        __end_of_broadcast_id 201E                __pdataCOMRAM 0038  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                ?_timer_ini13 0001               decode@com_rec 0035  
             decode@est_rec 0036                  __accesstop 0060     __end_of__initialization 7B64  
           __CFG_PBADEN$OFF 000000            Send_Disp@NroDisp 0010               decode@retorno 000F  
             ___rparam_used 000001              __pcstackCOMRAM 0001               __end_of_myISR 7E8C  
        main@broadcast_flag 001E                 ?_Send_4Disp 0011                     ??_myISR 0001  
         __end_of_Send_Disp 7C0A          __size_of_assign_id 0008                ?_usart_ini13 0001  
                __pnvCOMRAM 003C          __size_of_pic_ini13 0030                     ?_decode 0001  
        Send_4Disp@Nro_Disp 0038        __size_of_rampa_ini13 0014                _demora_envio 0031  
                 ?_informar 0010                     _ReadADC 7A40                     __Hparam 0000  
                   __Lparam 0000         __size_of_Send_4Disp 008E             __size_of_decode 007A  
                   ___lwdiv 7C62                     ___lwmod 7B6E           __end_of_assign_id 7A26  
              __psmallconst 201C                     __pcinit 7B38               ?_timer1_ini13 0001  
                   __ramtop 0800                     __ptext0 7E8C                     __ptext1 7AE0  
                   __ptext2 7AA0                     __ptext3 7A50                     __ptext4 7A76  
                   __ptext5 7B08                     __ptext6 7C0A                     __ptext7 7A32  
                   __ptext8 7CBE                     __ptext9 7A1E                informar@dato 0010  
                 _T0CONbits 000FD5                   _T1CONbits 000FCD                   _T2CONbits 000FCA  
         __end_of_pic_ini13 7B38         mux_display@contdisp 0037                   _ENVIO_tic 7A26  
            __pintcode_body 7DC6        __size_of_timer_ini13 001A        end_of_initialization 7B64  
                ??_informar 0013               __Lmediumconst 0000                     int_func 7DC6  
              _broadcast_id 201D                   _RAMPA_tic 7A62                  _tic_timer0 7ABA  
                 _RCSTAbits 000FAB                     postdec1 000FE5                     postinc0 000FEE  
            ??_timer1_ini13 000F                   _PORTBbits 000F81                   _TRISBbits 000F93  
                 _TRISCbits 000F94                  ?_ENVIO_tic 0001                  _transmitir 7A32  
               _CCP1CONbits 000FBD                   _TXSTAbits 000FAC                  ?_RAMPA_tic 0001  
      __size_of_usart_ini13 0028          decode@dato_a_decod 0010              __end_of_decode 7D38  
               _BAUDCONbits 000FB8               __pidataCOMRAM 7A1A                ??_Send_4Disp 0014  
       start_initialization 7B38                   _Send_Disp 7BBA      __size_of_SOLENOIDE_tic 0016  
               ?_tic_timer0 0001          __end_of_Send_4Disp 7DC6                    ??_decode 000F  
          __CFG_LPT1OSC$OFF 000000                 __pbssCOMRAM 0023                 ??_ENVIO_tic 0001  
               ?_transmitir 0001        __end_of_timer1_ini13 7A62                  ?_Send_Disp 000F  
               ??_RAMPA_tic 0001                    ?_ReadADC 000F           __size_of_informar 0058  
          ___lwdiv@dividend 0014               ??_rampa_ini13 000F                   __pintcode 2008  
                  ?___lwdiv 0014                    ?___lwmod 000F               _SOLENOIDE_tic 7A8A  
                 _assign_id 7A1E                 __smallconst 201C         __size_of_tic_timer0 0026  
               _flag_modula 0032            ___lwdiv@quotient 0018              __size_of_myISR 5E84  
                 _pic_ini13 7B08                    _LATAbits 000F89                    _LATBbits 000F8A  
                  _LATCbits 000F8B                    _LATDbits 000F8C                    _LATEbits 000F8D  
                  _LCD_tout 0023                    _PIE1bits 000F9D                    _PIR1bits 000F9E  
          __CFG_WDTPS$32768 000000            informar@longitud 0012              ?_SOLENOIDE_tic 0001  
       __size_of_transmitir 000E         __end_of_rampa_ini13 7A8A                _rampa_status 0034  
                ?_assign_id 0001               ??_timer_ini13 000F              Send_4Disp@Cent 0011  
            Send_4Disp@Umil 0014                 _INTCON2bits 000FF1                  ?_pic_ini13 0001  
                 copy_data0 7B58                 ??_Send_Disp 0010            __size_of_ReadADC 0010  
                  __Hrparam 0000                    __Lrparam 0000                   informar@i 0013  
         _caracter_recibido 0030            __size_of___lwdiv 005C            __size_of___lwmod 004C  
           ___lwdiv@divisor 0016       __size_of_timer1_ini13 0012             ___lwdiv@counter 001A  
                  __ptext10 7B6E                    __ptext11 7C62                    __ptext12 7D38  
                  __ptext13 7BBA                    __ptext14 7A40                    __ptext16 7ABA  
                  __ptext17 7A8A                    __ptext18 7A62                    __ptext19 7A26  
                  _bot_tout 002F               ??_usart_ini13 000F                    _led_tout 0027  
       __end_of_timer_ini13 7ABA                    _informar 7C0A               __size_of_main 0174  
              ??_tic_timer0 0001                    _slave_id 003C                 _rampa_ini13 7A76  
           ??_SOLENOIDE_tic 0001                    _mux_tout 0033                _timer1_ini13 7A50  
             Send_4Disp@Dec 0012               Send_4Disp@Uni 0013       __CFG_CPUDIV$OSC1_PLL2 000000  
               ??_assign_id 000F                  _INTCONbits 000FF2          __end_of_tic_timer0 7AE0  
               ??_pic_ini13 000F                ??_transmitir 000F                    intlevel2 0000  
              _tiempo_rampa 0029              transmitir@Dato 000F            ___lwmod@dividend 000F  
       __end_of_usart_ini13 7B08          __end_of_transmitir 7A40             ___lwmod@divisor 0011  
           ___lwmod@counter 0013                 _timer_ini13 7AA0            _demora_solenoide 0025  
        __CFG_FOSC$HSPLL_HS 000000     main@backup_tiempo_rampa 001B  
