

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jul 28 21:43:23 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           	psect	idataCOMRAM
    35  007A60                     __pidataCOMRAM:
    36                           	opt stack 0
    37                           
    38                           ;initializer for Send_4Disp@Nro_Disp
    39  007A60  01                 	db	1
    40                           
    41                           ;initializer for _MEMDIG
    42  007A61  01                 	db	1
    43                           
    44                           ;initializer for _modula
    45  007A62  02                 	db	2
    46                           
    47                           ;initializer for leds@i
    48  007A63  01                 	db	1
    49                           
    50                           	psect	smallconst
    51  00201C                     __psmallconst:
    52                           	opt stack 0
    53  00201C  00                 	db	0
    54  00201D                     _broadcast_id:
    55                           	opt stack 0
    56  00201D  6D                 	db	109
    57  00201E                     __end_of_broadcast_id:
    58                           	opt stack 0
    59  00201E  00                 	db	0	; dummy byte at the end
    60  0000                     
    61                           	psect	nvCOMRAM
    62  00003A                     __pnvCOMRAM:
    63                           	opt stack 0
    64  00003A                     _slave_id:
    65                           	opt stack 0
    66  00003A                     	ds	1
    67  0000                     _ADCON1	set	4033
    68  0000                     _BAUDCONbits	set	4024
    69  0000                     _CCP1CONbits	set	4029
    70  0000                     _CCPR1L	set	4030
    71  0000                     _CMCON	set	4020
    72  0000                     _INTCON2bits	set	4081
    73  0000                     _INTCONbits	set	4082
    74  0000                     _LATA	set	3977
    75  0000                     _LATAbits	set	3977
    76  0000                     _LATB	set	3978
    77  0000                     _LATBbits	set	3978
    78  0000                     _LATC	set	3979
    79  0000                     _LATCbits	set	3979
    80  0000                     _LATD	set	3980
    81  0000                     _LATDbits	set	3980
    82  0000                     _LATE	set	3981
    83  0000                     _LATEbits	set	3981
    84  0000                     _PIE1bits	set	3997
    85  0000                     _PIR1bits	set	3998
    86  0000                     _PORTBbits	set	3969
    87  0000                     _PR2	set	4043
    88  0000                     _RCREG	set	4014
    89  0000                     _RCSTAbits	set	4011
    90  0000                     _SPBRG	set	4015
    91  0000                     _SPBRGH	set	4016
    92  0000                     _T0CONbits	set	4053
    93  0000                     _T1CONbits	set	4045
    94  0000                     _T2CONbits	set	4042
    95  0000                     _TMR0H	set	4055
    96  0000                     _TMR0L	set	4054
    97  0000                     _TMR1H	set	4047
    98  0000                     _TMR1L	set	4046
    99  0000                     _TRISA	set	3986
   100  0000                     _TRISB	set	3987
   101  0000                     _TRISBbits	set	3987
   102  0000                     _TRISCbits	set	3988
   103  0000                     _TRISD	set	3989
   104  0000                     _TRISE	set	3990
   105  0000                     _TXREG	set	4013
   106  0000                     _TXSTAbits	set	4012
   107  0000                     _INT0IF	set	32657
   108  0000                     _RCIF	set	31989
   109  0000                     _TMR0IF	set	32658
   110  0000                     _TMR1IF	set	31984
   111                           
   112                           ; #config settings
   113  0000                     
   114                           	psect	cinit
   115  007B58                     __pcinit:
   116                           	opt stack 0
   117  007B58                     start_initialization:
   118                           	opt stack 0
   119  007B58                     __initialization:
   120                           	opt stack 0
   121                           
   122                           ; Clear objects allocated to COMRAM (19 bytes)
   123  007B58  EE00  F023         	lfsr	0,__pbssCOMRAM
   124  007B5C  0E13               	movlw	19
   125  007B5E                     clear_0:
   126  007B5E  6AEE               	clrf	postinc0,c
   127  007B60  06E8               	decf	wreg,f,c
   128  007B62  E1FD               	bnz	clear_0
   129                           
   130                           ; Initialize objects allocated to COMRAM (4 bytes)
   131                           ; load TBLPTR registers with __pidataCOMRAM
   132  007B64  0E60               	movlw	low __pidataCOMRAM
   133  007B66  6EF6               	movwf	tblptrl,c
   134  007B68  0E7A               	movlw	high __pidataCOMRAM
   135  007B6A  6EF7               	movwf	tblptrh,c
   136  007B6C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   137  007B6E  6EF8               	movwf	tblptru,c
   138  007B70  EE00  F036         	lfsr	0,__pdataCOMRAM
   139  007B74  EE10 F004          	lfsr	1,4
   140  007B78                     copy_data0:
   141  007B78  0009               	tblrd		*+
   142  007B7A  CFF5 FFEE          	movff	tablat,postinc0
   143  007B7E  50E5               	movf	postdec1,w,c
   144  007B80  50E1               	movf	fsr1l,w,c
   145  007B82  E1FA               	bnz	copy_data0
   146  007B84                     end_of_initialization:
   147                           	opt stack 0
   148  007B84                     __end_of__initialization:
   149                           	opt stack 0
   150  007B84  0E00               	movlw	low (__Lmediumconst shr (0+16))
   151  007B86  6EF8               	movwf	tblptru,c
   152  007B88  0100               	movlb	0
   153  007B8A  EF51  F03F         	goto	_main	;jump to C main() function
   154                           tblptru	equ	0xFF8
   155                           tblptrh	equ	0xFF7
   156                           tblptrl	equ	0xFF6
   157                           tablat	equ	0xFF5
   158                           postinc0	equ	0xFEE
   159                           wreg	equ	0xFE8
   160                           postdec1	equ	0xFE5
   161                           fsr1l	equ	0xFE1
   162                           
   163                           	psect	bssCOMRAM
   164  000023                     __pbssCOMRAM:
   165                           	opt stack 0
   166  000023                     _LCD_tout:
   167                           	opt stack 0
   168  000023                     	ds	2
   169  000025                     _led_tout:
   170                           	opt stack 0
   171  000025                     	ds	2
   172  000027                     _tiempo_rampa:
   173                           	opt stack 0
   174  000027                     	ds	2
   175  000029                     _CENT:
   176                           	opt stack 0
   177  000029                     	ds	1
   178  00002A                     _DEC:
   179                           	opt stack 0
   180  00002A                     	ds	1
   181  00002B                     _UMIL:
   182                           	opt stack 0
   183  00002B                     	ds	1
   184  00002C                     _UNI:
   185                           	opt stack 0
   186  00002C                     	ds	1
   187  00002D                     _bot_tout:
   188                           	opt stack 0
   189  00002D                     	ds	1
   190  00002E                     _caracter_recibido:
   191                           	opt stack 0
   192  00002E                     	ds	1
   193  00002F                     _demora_envio:
   194                           	opt stack 0
   195  00002F                     	ds	1
   196  000030                     _flag_modula:
   197                           	opt stack 0
   198  000030                     	ds	1
   199  000031                     _mux_tout:
   200                           	opt stack 0
   201  000031                     	ds	1
   202  000032                     _rampa_status:
   203                           	opt stack 0
   204  000032                     	ds	1
   205  000033                     decode@com_rec:
   206                           	opt stack 0
   207  000033                     	ds	1
   208  000034                     decode@est_rec:
   209                           	opt stack 0
   210  000034                     	ds	1
   211  000035                     mux_display@contdisp:
   212                           	opt stack 0
   213  000035                     	ds	1
   214                           tblptru	equ	0xFF8
   215                           tblptrh	equ	0xFF7
   216                           tblptrl	equ	0xFF6
   217                           tablat	equ	0xFF5
   218                           postinc0	equ	0xFEE
   219                           wreg	equ	0xFE8
   220                           postdec1	equ	0xFE5
   221                           fsr1l	equ	0xFE1
   222                           
   223                           	psect	dataCOMRAM
   224  000036                     __pdataCOMRAM:
   225                           	opt stack 0
   226  000036                     Send_4Disp@Nro_Disp:
   227                           	opt stack 0
   228  000036                     	ds	1
   229  000037                     _MEMDIG:
   230                           	opt stack 0
   231  000037                     	ds	1
   232  000038                     _modula:
   233                           	opt stack 0
   234  000038                     	ds	1
   235  000039                     leds@i:
   236                           	opt stack 0
   237  000039                     	ds	1
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           postdec1	equ	0xFE5
   245                           fsr1l	equ	0xFE1
   246                           
   247                           	psect	cstackCOMRAM
   248  000001                     __pcstackCOMRAM:
   249                           	opt stack 0
   250  000001                     ??_myISR:
   251  000001                     
   252                           ; 1 bytes @ 0x0
   253  000001                     	ds	14
   254  00000F                     ?___lwmod:
   255                           	opt stack 0
   256  00000F                     Send_Disp@Dato:
   257                           	opt stack 0
   258  00000F                     assign_id@id:
   259                           	opt stack 0
   260  00000F                     decode@retorno:
   261                           	opt stack 0
   262  00000F                     transmitir@Dato:
   263                           	opt stack 0
   264  00000F                     ___lwmod@dividend:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0xE
   268  00000F                     	ds	1
   269  000010                     Send_Disp@NroDisp:
   270                           	opt stack 0
   271  000010                     decode@dato_a_decod:
   272                           	opt stack 0
   273  000010                     informar@dato:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0xF
   277  000010                     	ds	1
   278  000011                     Send_4Disp@Cent:
   279                           	opt stack 0
   280  000011                     ___lwmod@divisor:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x10
   284  000011                     	ds	1
   285  000012                     Send_4Disp@Dec:
   286                           	opt stack 0
   287  000012                     informar@longitud:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x11
   291  000012                     	ds	1
   292  000013                     Send_4Disp@Uni:
   293                           	opt stack 0
   294  000013                     informar@i:
   295                           	opt stack 0
   296  000013                     ___lwmod@counter:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x12
   300  000013                     	ds	1
   301  000014                     ?___lwdiv:
   302                           	opt stack 0
   303  000014                     Send_4Disp@Umil:
   304                           	opt stack 0
   305  000014                     ___lwdiv@dividend:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x13
   309  000014                     	ds	2
   310  000016                     ___lwdiv@divisor:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x15
   314  000016                     	ds	2
   315  000018                     ___lwdiv@quotient:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x17
   319  000018                     	ds	2
   320  00001A                     ___lwdiv@counter:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x19
   324  00001A                     	ds	1
   325  00001B                     main@backup_tiempo_rampa:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x1A
   329  00001B                     	ds	2
   330  00001D                     main@backup_ultimo_caracter:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x1C
   334  00001D                     	ds	1
   335  00001E                     main@broadcast_flag:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0x1D
   339  00001E                     	ds	1
   340  00001F                     main@paquete:
   341                           	opt stack 0
   342                           
   343                           ; 4 bytes @ 0x1E
   344  00001F                     	ds	4
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354 ;;
   355 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   356 ;;
   357 ;; *************** function _main *****************
   358 ;; Defined at:
   359 ;;		line 35 in file "main.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;  paquete         4   30[COMRAM] unsigned char [4]
   364 ;;  backup_tiemp    2   26[COMRAM] unsigned int 
   365 ;;  broadcast_fl    1   29[COMRAM] unsigned char 
   366 ;;  backup_ultim    1   28[COMRAM] unsigned char 
   367 ;; Return value:  Size  Location     Type
   368 ;;		None               void
   369 ;; Registers used:
   370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   376 ;;      Params:         0       0       0       0       0       0       0       0       0
   377 ;;      Locals:         8       0       0       0       0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0       0       0
   379 ;;      Totals:         8       0       0       0       0       0       0       0       0
   380 ;;Total ram usage:        8 bytes
   381 ;; Hardware stack levels required when called:    4
   382 ;; This function calls:
   383 ;;		_Send_4Disp
   384 ;;		___lwdiv
   385 ;;		___lwmod
   386 ;;		_assign_id
   387 ;;		_decode
   388 ;;		_informar
   389 ;;		_pic_ini13
   390 ;;		_rampa_ini13
   391 ;;		_timer1_ini13
   392 ;;		_timer_ini13
   393 ;;		_usart_ini13
   394 ;; This function is called by:
   395 ;;		Startup code after reset
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text0
   400  007EA2                     __ptext0:
   401                           	opt stack 0
   402  007EA2                     _main:
   403                           	opt stack 27
   404                           
   405                           ;main.c: 36: unsigned char backup_ultimo_caracter;
   406                           ;main.c: 37: unsigned int backup_tiempo_rampa;
   407                           ;main.c: 39: char paquete[4];
   408                           ;main.c: 40: unsigned char broadcast_flag=0;
   409                           
   410                           ;incstack = 0
   411  007EA2  0E00               	movlw	0
   412  007EA4  6E1E               	movwf	main@broadcast_flag,c
   413                           
   414                           ;main.c: 42: pic_ini13();
   415  007EA6  EC94  F03D         	call	_pic_ini13	;wreg free
   416                           
   417                           ;main.c: 43: timer_ini13();
   418  007EAA  EC60  F03D         	call	_timer_ini13	;wreg free
   419                           
   420                           ;main.c: 45: timer1_ini13();
   421  007EAE  EC43  F03D         	call	_timer1_ini13	;wreg free
   422                           
   423                           ;main.c: 46: usart_ini13();
   424  007EB2  EC80  F03D         	call	_usart_ini13	;wreg free
   425                           
   426                           ;main.c: 48: BAUDCONbits.RXCKP = 1;
   427  007EB6  8AB8               	bsf	4024,5,c	;volatile
   428                           
   429                           ;main.c: 49: BAUDCONbits.TXCKP = 1;
   430  007EB8  88B8               	bsf	4024,4,c	;volatile
   431                           
   432                           ;main.c: 52: (INTCONbits.GIE = 1);
   433  007EBA  8EF2               	bsf	intcon,7,c	;volatile
   434                           
   435                           ;main.c: 54: assign_id('a');
   436  007EBC  0E61               	movlw	97
   437  007EBE  EC32  F03D         	call	_assign_id
   438                           
   439                           ;main.c: 56: rampa_ini13();
   440  007EC2  EC56  F03D         	call	_rampa_ini13	;wreg free
   441  007EC6  D000               	goto	l1695
   442  007EC8                     l1695:
   443                           
   444                           ;main.c: 59: if(caracter_recibido != backup_ultimo_caracter){
   445  007EC8  501D               	movf	main@backup_ultimo_caracter,w,c
   446  007ECA  182E               	xorwf	_caracter_recibido,w,c
   447  007ECC  B4D8               	btfsc	status,2,c
   448  007ECE  D03D               	goto	l1725
   449                           
   450                           ;main.c: 60: backup_ultimo_caracter=caracter_recibido;
   451  007ED0  C02E  F01D         	movff	_caracter_recibido,main@backup_ultimo_caracter
   452                           
   453                           ;main.c: 76: switch(decode(caracter_recibido)){
   454  007ED4  D021               	goto	l1723
   455                           
   456                           ;main.c: 78: break;
   457                           
   458                           ;main.c: 77: case 0:;
   459  007ED6  D039               	goto	l1725
   460  007ED8                     l1699:
   461                           
   462                           ;main.c: 80: broadcast_flag=0;
   463  007ED8  0E00               	movlw	0
   464  007EDA  D001               	goto	L1
   465  007EDC                     l1701:
   466                           
   467                           ;main.c: 83: broadcast_flag=1;
   468  007EDC  0E01               	movlw	1
   469  007EDE                     L1:
   470  007EDE  6E1E               	movwf	main@broadcast_flag,c
   471                           
   472                           ;main.c: 84: }break;
   473  007EE0  D034               	goto	l1725
   474  007EE2                     l1703:
   475                           
   476                           ;main.c: 86: rampa_status=1;
   477  007EE2  0E01               	movlw	1
   478  007EE4  6E32               	movwf	_rampa_status,c
   479                           
   480                           ;main.c: 87: INTCONbits.INT0IF=0;
   481  007EE6  92F2               	bcf	intcon,1,c	;volatile
   482                           
   483                           ;main.c: 88: INTCONbits.INT0IE=1;
   484  007EE8  88F2               	bsf	intcon,4,c	;volatile
   485                           
   486                           ;main.c: 89: }break;
   487  007EEA  D02F               	goto	l1725
   488  007EEC                     l1709:
   489                           
   490                           ;main.c: 91: rampa_status=0;
   491  007EEC  0E00               	movlw	0
   492  007EEE  6E32               	movwf	_rampa_status,c
   493                           
   494                           ;main.c: 92: INTCONbits.INT0IE=0;
   495  007EF0  98F2               	bcf	intcon,4,c	;volatile
   496                           
   497                           ;main.c: 93: INTCONbits.INT0IF=0;
   498  007EF2  92F2               	bcf	intcon,1,c	;volatile
   499                           
   500                           ;main.c: 94: }break;
   501  007EF4  D02A               	goto	l1725
   502  007EF6                     l1715:
   503                           
   504                           ;main.c: 96: if(!broadcast_flag) informar(paquete,4);
   505  007EF6  501E               	movf	main@broadcast_flag,w,c
   506  007EF8  A4D8               	btfss	status,2,c
   507  007EFA  D027               	goto	l1725
   508  007EFC  0E1F               	movlw	low main@paquete
   509  007EFE  6E10               	movwf	informar@dato,c
   510  007F00  0E00               	movlw	high main@paquete
   511  007F02  6E11               	movwf	informar@dato+1,c
   512  007F04  0E04               	movlw	4
   513  007F06  6E12               	movwf	informar@longitud,c
   514  007F08  EC15  F03E         	call	_informar	;wreg free
   515                           
   516                           ;main.c: 98: }break;
   517  007F0C  D01E               	goto	l1725
   518  007F0E                     l1719:
   519                           
   520                           ;main.c: 100: tiempo_rampa=0;
   521  007F0E  0E00               	movlw	0
   522  007F10  6E28               	movwf	_tiempo_rampa+1,c
   523  007F12  0E00               	movlw	0
   524  007F14  6E27               	movwf	_tiempo_rampa,c
   525                           
   526                           ;main.c: 102: }
   527                           
   528                           ;main.c: 101: }break;
   529  007F16  D019               	goto	l1725
   530  007F18                     l1723:
   531  007F18  502E               	movf	_caracter_recibido,w,c
   532  007F1A  EC6F  F03E         	call	_decode
   533                           
   534                           ; Switch size 1, requested type "space"
   535                           ; Number of cases is 7, Range of values is 0 to 115
   536                           ; switch strategies available:
   537                           ; Name         Instructions Cycles
   538                           ; simple_byte           22    12 (average)
   539                           ;	Chosen strategy is simple_byte
   540  007F1E  0A00               	xorlw	0	; case 0
   541  007F20  B4D8               	btfsc	status,2,c
   542  007F22  D013               	goto	l1725
   543  007F24  0A62               	xorlw	98	; case 98
   544  007F26  B4D8               	btfsc	status,2,c
   545  007F28  D7D9               	goto	l1701
   546  007F2A  0A06               	xorlw	6	; case 100
   547  007F2C  B4D8               	btfsc	status,2,c
   548  007F2E  D7DE               	goto	l1709
   549  007F30  0A08               	xorlw	8	; case 108
   550  007F32  B4D8               	btfsc	status,2,c
   551  007F34  D7E0               	goto	l1715
   552  007F36  0A1C               	xorlw	28	; case 112
   553  007F38  B4D8               	btfsc	status,2,c
   554  007F3A  D7CE               	goto	l1699
   555  007F3C  0A02               	xorlw	2	; case 114
   556  007F3E  B4D8               	btfsc	status,2,c
   557  007F40  D7E6               	goto	l1719
   558  007F42  0A01               	xorlw	1	; case 115
   559  007F44  B4D8               	btfsc	status,2,c
   560  007F46  D7CD               	goto	l1703
   561  007F48  D000               	goto	l1725
   562  007F4A                     l1725:
   563                           
   564                           ;main.c: 103: }
   565                           ;main.c: 106: if(tiempo_rampa !=backup_tiempo_rampa){
   566  007F4A  501B               	movf	main@backup_tiempo_rampa,w,c
   567  007F4C  1827               	xorwf	_tiempo_rampa,w,c
   568  007F4E  E104               	bnz	u700
   569  007F50  501C               	movf	main@backup_tiempo_rampa+1,w,c
   570  007F52  1828               	xorwf	_tiempo_rampa+1,w,c
   571  007F54  B4D8               	btfsc	status,2,c
   572  007F56  D048               	goto	l87
   573  007F58                     u700:
   574                           
   575                           ;main.c: 108: paquete[0]=tiempo_rampa/1000;
   576  007F58  C027  F014         	movff	_tiempo_rampa,___lwdiv@dividend
   577  007F5C  C028  F015         	movff	_tiempo_rampa+1,___lwdiv@dividend+1
   578  007F60  0E03               	movlw	3
   579  007F62  6E17               	movwf	___lwdiv@divisor+1,c
   580  007F64  0EE8               	movlw	232
   581  007F66  6E16               	movwf	___lwdiv@divisor,c
   582  007F68  EC41  F03E         	call	___lwdiv	;wreg free
   583  007F6C  5014               	movf	?___lwdiv,w,c
   584  007F6E  6E1F               	movwf	main@paquete,c
   585                           
   586                           ;main.c: 109: paquete[1]=(tiempo_rampa%1000)/100;
   587  007F70  0E03               	movlw	3
   588  007F72  6E12               	movwf	___lwmod@divisor+1,c
   589  007F74  0EE8               	movlw	232
   590  007F76  6E11               	movwf	___lwmod@divisor,c
   591  007F78  C027  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   592  007F7C  C028  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   593  007F80  ECC7  F03D         	call	___lwmod	;wreg free
   594  007F84  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   595  007F88  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   596  007F8C  0E00               	movlw	0
   597  007F8E  6E17               	movwf	___lwdiv@divisor+1,c
   598  007F90  0E64               	movlw	100
   599  007F92  6E16               	movwf	___lwdiv@divisor,c
   600  007F94  EC41  F03E         	call	___lwdiv	;wreg free
   601  007F98  5014               	movf	?___lwdiv,w,c
   602  007F9A  6E20               	movwf	main@paquete+1,c
   603                           
   604                           ;main.c: 110: paquete[2]=(tiempo_rampa%100)/10;
   605  007F9C  0E00               	movlw	0
   606  007F9E  6E12               	movwf	___lwmod@divisor+1,c
   607  007FA0  0E64               	movlw	100
   608  007FA2  6E11               	movwf	___lwmod@divisor,c
   609  007FA4  C027  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   610  007FA8  C028  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   611  007FAC  ECC7  F03D         	call	___lwmod	;wreg free
   612  007FB0  C00F  F014         	movff	?___lwmod,___lwdiv@dividend
   613  007FB4  C010  F015         	movff	?___lwmod+1,___lwdiv@dividend+1
   614  007FB8  0E00               	movlw	0
   615  007FBA  6E17               	movwf	___lwdiv@divisor+1,c
   616  007FBC  0E0A               	movlw	10
   617  007FBE  6E16               	movwf	___lwdiv@divisor,c
   618  007FC0  EC41  F03E         	call	___lwdiv	;wreg free
   619  007FC4  5014               	movf	?___lwdiv,w,c
   620  007FC6  6E21               	movwf	main@paquete+2,c
   621                           
   622                           ;main.c: 111: paquete[3]=tiempo_rampa%10;
   623  007FC8  C027  F00F         	movff	_tiempo_rampa,___lwmod@dividend
   624  007FCC  C028  F010         	movff	_tiempo_rampa+1,___lwmod@dividend+1
   625  007FD0  0E00               	movlw	0
   626  007FD2  6E12               	movwf	___lwmod@divisor+1,c
   627  007FD4  0E0A               	movlw	10
   628  007FD6  6E11               	movwf	___lwmod@divisor,c
   629  007FD8  ECC7  F03D         	call	___lwmod	;wreg free
   630  007FDC  500F               	movf	?___lwmod,w,c
   631  007FDE  6E22               	movwf	main@paquete+3,c
   632                           
   633                           ;main.c: 113: backup_tiempo_rampa=tiempo_rampa;
   634  007FE0  C027  F01B         	movff	_tiempo_rampa,main@backup_tiempo_rampa
   635  007FE4  C028  F01C         	movff	_tiempo_rampa+1,main@backup_tiempo_rampa+1
   636  007FE8                     l87:
   637                           
   638                           ;main.c: 114: }
   639                           ;main.c: 115: Send_4Disp(paquete[0],paquete[1],paquete[2],paquete[3]);
   640  007FE8  C020  F011         	movff	main@paquete+1,Send_4Disp@Cent
   641  007FEC  C021  F012         	movff	main@paquete+2,Send_4Disp@Dec
   642  007FF0  C022  F013         	movff	main@paquete+3,Send_4Disp@Uni
   643  007FF4  501F               	movf	main@paquete,w,c
   644  007FF6  ECAC  F03E         	call	_Send_4Disp
   645  007FFA  D766               	goto	l1695
   646  007FFC  EF0C  F010         	goto	start
   647  008000                     __end_of_main:
   648                           	opt stack 0
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           intcon	equ	0xFF2
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           postdec1	equ	0xFE5
   657                           fsr1l	equ	0xFE1
   658                           status	equ	0xFD8
   659                           
   660 ;; *************** function _usart_ini13 *****************
   661 ;; Defined at:
   662 ;;		line 77 in file "Ap_ini.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;		None               void
   669 ;; Registers used:
   670 ;;		wreg, status,2
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   676 ;;      Params:         0       0       0       0       0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0       0       0       0       0
   679 ;;      Totals:         0       0       0       0       0       0       0       0       0
   680 ;;Total ram usage:        0 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; Hardware stack levels required when called:    2
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text1
   691  007B00                     __ptext1:
   692                           	opt stack 0
   693  007B00                     _usart_ini13:
   694                           	opt stack 28
   695                           
   696                           ;Ap_ini.c: 82: TXSTAbits.BRGH = 1;
   697                           
   698                           ;incstack = 0
   699  007B00  84AC               	bsf	4012,2,c	;volatile
   700                           
   701                           ;Ap_ini.c: 83: BAUDCONbits.BRG16=1;
   702  007B02  86B8               	bsf	4024,3,c	;volatile
   703                           
   704                           ;Ap_ini.c: 84: TXSTAbits.SYNC = 0;
   705  007B04  98AC               	bcf	4012,4,c	;volatile
   706                           
   707                           ;Ap_ini.c: 85: SPBRG = 0xE1;
   708  007B06  0EE1               	movlw	225
   709  007B08  6EAF               	movwf	4015,c	;volatile
   710                           
   711                           ;Ap_ini.c: 86: SPBRGH = 0x04;
   712  007B0A  0E04               	movlw	4
   713  007B0C  6EB0               	movwf	4016,c	;volatile
   714                           
   715                           ;Ap_ini.c: 87: RCSTAbits.SPEN = 1;
   716  007B0E  8EAB               	bsf	4011,7,c	;volatile
   717                           
   718                           ;Ap_ini.c: 90: TXSTAbits.TX9 = 0;
   719  007B10  9CAC               	bcf	4012,6,c	;volatile
   720                           
   721                           ;Ap_ini.c: 91: TXSTAbits.TXEN = 1;
   722  007B12  8AAC               	bsf	4012,5,c	;volatile
   723                           
   724                           ;Ap_ini.c: 94: (void) RCREG;
   725  007B14  50AE               	movf	4014,w,c	;volatile
   726                           
   727                           ;Ap_ini.c: 95: (void) RCREG;
   728  007B16  50AE               	movf	4014,w,c	;volatile
   729                           
   730                           ;Ap_ini.c: 96: (void) RCREG;
   731  007B18  50AE               	movf	4014,w,c	;volatile
   732                           
   733                           ;Ap_ini.c: 97: RCSTAbits.RX9 = 0 ;
   734  007B1A  9CAB               	bcf	4011,6,c	;volatile
   735                           
   736                           ;Ap_ini.c: 98: PIE1bits.RCIE = 1;
   737  007B1C  8A9D               	bsf	3997,5,c	;volatile
   738                           
   739                           ;Ap_ini.c: 99: RCSTAbits.CREN = 1;
   740  007B1E  88AB               	bsf	4011,4,c	;volatile
   741                           
   742                           ;Ap_ini.c: 100: INTCONbits.PEIE = 1;
   743  007B20  8CF2               	bsf	intcon,6,c	;volatile
   744                           
   745                           ;Ap_ini.c: 102: TRISCbits.RC6 = 1;
   746  007B22  8C94               	bsf	3988,6,c	;volatile
   747                           
   748                           ;Ap_ini.c: 103: TRISCbits.RC7 = 1;
   749  007B24  8E94               	bsf	3988,7,c	;volatile
   750  007B26  0012               	return		;funcret
   751  007B28                     __end_of_usart_ini13:
   752                           	opt stack 0
   753                           tblptru	equ	0xFF8
   754                           tblptrh	equ	0xFF7
   755                           tblptrl	equ	0xFF6
   756                           tablat	equ	0xFF5
   757                           intcon	equ	0xFF2
   758                           postinc0	equ	0xFEE
   759                           wreg	equ	0xFE8
   760                           postdec1	equ	0xFE5
   761                           fsr1l	equ	0xFE1
   762                           status	equ	0xFD8
   763                           
   764 ;; *************** function _timer_ini13 *****************
   765 ;; Defined at:
   766 ;;		line 37 in file "Ap_ini.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;		None               void
   773 ;; Registers used:
   774 ;;		wreg, status,2
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   780 ;;      Params:         0       0       0       0       0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    2
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text2
   795  007AC0                     __ptext2:
   796                           	opt stack 0
   797  007AC0                     _timer_ini13:
   798                           	opt stack 28
   799                           
   800                           ;Ap_ini.c: 38: T0CONbits.TMR0ON = 0;
   801                           
   802                           ;incstack = 0
   803  007AC0  9ED5               	bcf	4053,7,c	;volatile
   804                           
   805                           ;Ap_ini.c: 39: T0CONbits.T08BIT = 1;
   806  007AC2  8CD5               	bsf	4053,6,c	;volatile
   807                           
   808                           ;Ap_ini.c: 40: T0CONbits.T0CS = 0;
   809  007AC4  9AD5               	bcf	4053,5,c	;volatile
   810                           
   811                           ;Ap_ini.c: 41: T0CONbits.PSA = 0;
   812  007AC6  96D5               	bcf	4053,3,c	;volatile
   813                           
   814                           ;Ap_ini.c: 42: T0CONbits.T0PS0 = 1;
   815  007AC8  80D5               	bsf	4053,0,c	;volatile
   816                           
   817                           ;Ap_ini.c: 43: T0CONbits.T0PS1 = 1;
   818  007ACA  82D5               	bsf	4053,1,c	;volatile
   819                           
   820                           ;Ap_ini.c: 44: T0CONbits.T0PS2 = 1;
   821  007ACC  84D5               	bsf	4053,2,c	;volatile
   822                           
   823                           ;Ap_ini.c: 45: TMR0L = 209;
   824  007ACE  0ED1               	movlw	209
   825  007AD0  6ED6               	movwf	4054,c	;volatile
   826                           
   827                           ;Ap_ini.c: 46: TMR0H = 0xFF;
   828  007AD2  68D7               	setf	4055,c	;volatile
   829                           
   830                           ;Ap_ini.c: 47: INTCONbits.TMR0IE = 1;
   831  007AD4  8AF2               	bsf	intcon,5,c	;volatile
   832                           
   833                           ;Ap_ini.c: 48: T0CONbits.TMR0ON = 1;
   834  007AD6  8ED5               	bsf	4053,7,c	;volatile
   835  007AD8  0012               	return		;funcret
   836  007ADA                     __end_of_timer_ini13:
   837                           	opt stack 0
   838                           tblptru	equ	0xFF8
   839                           tblptrh	equ	0xFF7
   840                           tblptrl	equ	0xFF6
   841                           tablat	equ	0xFF5
   842                           intcon	equ	0xFF2
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           postdec1	equ	0xFE5
   846                           fsr1l	equ	0xFE1
   847                           status	equ	0xFD8
   848                           
   849 ;; *************** function _timer1_ini13 *****************
   850 ;; Defined at:
   851 ;;		line 51 in file "Ap_ini.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;		None               void
   858 ;; Registers used:
   859 ;;		wreg, status,2
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   865 ;;      Params:         0       0       0       0       0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0
   868 ;;      Totals:         0       0       0       0       0       0       0       0       0
   869 ;;Total ram usage:        0 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    2
   872 ;; This function calls:
   873 ;;		Nothing
   874 ;; This function is called by:
   875 ;;		_main
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text3
   880  007A86                     __ptext3:
   881                           	opt stack 0
   882  007A86                     _timer1_ini13:
   883                           	opt stack 28
   884                           
   885                           ;Ap_ini.c: 53: T1CONbits.T1CKPS0=0;
   886                           
   887                           ;incstack = 0
   888  007A86  98CD               	bcf	4045,4,c	;volatile
   889                           
   890                           ;Ap_ini.c: 54: T1CONbits.T1CKPS1=0;
   891  007A88  9ACD               	bcf	4045,5,c	;volatile
   892                           
   893                           ;Ap_ini.c: 55: TMR1L=145;
   894  007A8A  0E91               	movlw	145
   895  007A8C  6ECE               	movwf	4046,c	;volatile
   896                           
   897                           ;Ap_ini.c: 56: TMR1H=0xFF;
   898  007A8E  68CF               	setf	4047,c	;volatile
   899                           
   900                           ;Ap_ini.c: 57: PIR1bits.TMR1IF=0;
   901  007A90  909E               	bcf	3998,0,c	;volatile
   902                           
   903                           ;Ap_ini.c: 58: PIE1bits.TMR1IE=1;
   904  007A92  809D               	bsf	3997,0,c	;volatile
   905                           
   906                           ;Ap_ini.c: 59: T1CONbits.TMR1ON = 1;
   907  007A94  80CD               	bsf	4045,0,c	;volatile
   908  007A96  0012               	return		;funcret
   909  007A98                     __end_of_timer1_ini13:
   910                           	opt stack 0
   911                           tblptru	equ	0xFF8
   912                           tblptrh	equ	0xFF7
   913                           tblptrl	equ	0xFF6
   914                           tablat	equ	0xFF5
   915                           intcon	equ	0xFF2
   916                           postinc0	equ	0xFEE
   917                           wreg	equ	0xFE8
   918                           postdec1	equ	0xFE5
   919                           fsr1l	equ	0xFE1
   920                           status	equ	0xFD8
   921                           
   922 ;; *************** function _rampa_ini13 *****************
   923 ;; Defined at:
   924 ;;		line 5 in file "rampa.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;		None               void
   931 ;; Registers used:
   932 ;;		wreg, status,2
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   938 ;;      Params:         0       0       0       0       0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0       0       0       0       0
   940 ;;      Temps:          0       0       0       0       0       0       0       0       0
   941 ;;      Totals:         0       0       0       0       0       0       0       0       0
   942 ;;Total ram usage:        0 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    2
   945 ;; This function calls:
   946 ;;		Nothing
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text4
   953  007AAC                     __ptext4:
   954                           	opt stack 0
   955  007AAC                     _rampa_ini13:
   956                           	opt stack 28
   957                           
   958                           ;rampa.c: 6: rampa_status = 0;
   959                           
   960                           ;incstack = 0
   961  007AAC  0E00               	movlw	0
   962  007AAE  6E32               	movwf	_rampa_status,c
   963                           
   964                           ;rampa.c: 7: tiempo_rampa = 0;
   965  007AB0  0E00               	movlw	0
   966  007AB2  6E28               	movwf	_tiempo_rampa+1,c
   967  007AB4  0E00               	movlw	0
   968  007AB6  6E27               	movwf	_tiempo_rampa,c
   969                           
   970                           ;rampa.c: 8: TRISBbits.RB7 = 0;
   971  007AB8  9E93               	bcf	3987,7,c	;volatile
   972                           
   973                           ;rampa.c: 9: TRISBbits.RB0 = 1;
   974  007ABA  8093               	bsf	3987,0,c	;volatile
   975                           
   976                           ;rampa.c: 10: INTCON2bits.INTEDG0=0;
   977  007ABC  9CF1               	bcf	intcon2,6,c	;volatile
   978  007ABE  0012               	return		;funcret
   979  007AC0                     __end_of_rampa_ini13:
   980                           	opt stack 0
   981                           tblptru	equ	0xFF8
   982                           tblptrh	equ	0xFF7
   983                           tblptrl	equ	0xFF6
   984                           tablat	equ	0xFF5
   985                           intcon	equ	0xFF2
   986                           intcon2	equ	0xFF1
   987                           postinc0	equ	0xFEE
   988                           wreg	equ	0xFE8
   989                           postdec1	equ	0xFE5
   990                           fsr1l	equ	0xFE1
   991                           status	equ	0xFD8
   992                           
   993 ;; *************** function _pic_ini13 *****************
   994 ;; Defined at:
   995 ;;		line 9 in file "Ap_ini.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;		None               void
  1002 ;; Registers used:
  1003 ;;		wreg, status,2
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1009 ;;      Params:         0       0       0       0       0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    2
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text5
  1024  007B28                     __ptext5:
  1025                           	opt stack 0
  1026  007B28                     _pic_ini13:
  1027                           	opt stack 28
  1028                           
  1029                           ;Ap_ini.c: 12: LATA = 0x00;
  1030                           
  1031                           ;incstack = 0
  1032  007B28  0E00               	movlw	0
  1033  007B2A  6E89               	movwf	3977,c	;volatile
  1034                           
  1035                           ;Ap_ini.c: 13: LATB = 0x00;
  1036  007B2C  0E00               	movlw	0
  1037  007B2E  6E8A               	movwf	3978,c	;volatile
  1038                           
  1039                           ;Ap_ini.c: 14: LATC = 0x00;
  1040  007B30  0E00               	movlw	0
  1041  007B32  6E8B               	movwf	3979,c	;volatile
  1042                           
  1043                           ;Ap_ini.c: 15: LATD = 0x00;
  1044  007B34  0E00               	movlw	0
  1045  007B36  6E8C               	movwf	3980,c	;volatile
  1046                           
  1047                           ;Ap_ini.c: 16: LATE = 0x00;
  1048  007B38  0E00               	movlw	0
  1049  007B3A  6E8D               	movwf	3981,c	;volatile
  1050                           
  1051                           ;Ap_ini.c: 20: TRISD = 0xF0;
  1052  007B3C  0EF0               	movlw	240
  1053  007B3E  6E95               	movwf	3989,c	;volatile
  1054                           
  1055                           ;Ap_ini.c: 21: TRISCbits.RC6 = 0;
  1056  007B40  9C94               	bcf	3988,6,c	;volatile
  1057                           
  1058                           ;Ap_ini.c: 22: TRISCbits.RC7 = 0;
  1059  007B42  9E94               	bcf	3988,7,c	;volatile
  1060                           
  1061                           ;Ap_ini.c: 26: CMCON = 0x07;
  1062  007B44  0E07               	movlw	7
  1063  007B46  6EB4               	movwf	4020,c	;volatile
  1064                           
  1065                           ;Ap_ini.c: 27: ADCON1 = 0x0F;
  1066  007B48  0E0F               	movlw	15
  1067  007B4A  6EC1               	movwf	4033,c	;volatile
  1068                           
  1069                           ;Ap_ini.c: 28: TRISA = 0xC0;
  1070  007B4C  0EC0               	movlw	192
  1071  007B4E  6E92               	movwf	3986,c	;volatile
  1072                           
  1073                           ;Ap_ini.c: 29: TRISE = 0x00;
  1074  007B50  0E00               	movlw	0
  1075  007B52  6E96               	movwf	3990,c	;volatile
  1076                           
  1077                           ;Ap_ini.c: 33: TRISB = 0xFF;
  1078  007B54  6893               	setf	3987,c	;volatile
  1079  007B56  0012               	return		;funcret
  1080  007B58                     __end_of_pic_ini13:
  1081                           	opt stack 0
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           intcon	equ	0xFF2
  1087                           intcon2	equ	0xFF1
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postdec1	equ	0xFE5
  1091                           fsr1l	equ	0xFE1
  1092                           status	equ	0xFD8
  1093                           
  1094 ;; *************** function _informar *****************
  1095 ;; Defined at:
  1096 ;;		line 74 in file "rampa.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  dato            2   15[COMRAM] PTR unsigned char 
  1099 ;;		 -> main@paquete(4), 
  1100 ;;  longitud        1   17[COMRAM] unsigned char 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  i               1   18[COMRAM] unsigned char 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;		None               void
  1105 ;; Registers used:
  1106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1112 ;;      Params:         3       0       0       0       0       0       0       0       0
  1113 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1115 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1116 ;;Total ram usage:        4 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    3
  1119 ;; This function calls:
  1120 ;;		_transmitir
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text6
  1127  007C2A                     __ptext6:
  1128                           	opt stack 0
  1129  007C2A                     _informar:
  1130                           	opt stack 27
  1131                           
  1132                           ;rampa.c: 75: char i=0;
  1133                           
  1134                           ;incstack = 0
  1135  007C2A  0E00               	movlw	0
  1136  007C2C  6E13               	movwf	informar@i,c
  1137                           
  1138                           ;rampa.c: 76: LATDbits.LD3=1;
  1139  007C2E  868C               	bsf	3980,3,c	;volatile
  1140                           
  1141                           ;rampa.c: 77: demora_envio=15;
  1142  007C30  0E0F               	movlw	15
  1143  007C32  6E2F               	movwf	_demora_envio,c
  1144                           
  1145                           ;rampa.c: 78: while(demora_envio);
  1146  007C34  D000               	goto	l1581
  1147  007C36                     l1581:
  1148  007C36  502F               	movf	_demora_envio,w,c
  1149  007C38  A4D8               	btfss	status,2,c
  1150  007C3A  D7FD               	goto	l1581
  1151                           
  1152                           ;rampa.c: 80: transmitir(slave_id);
  1153  007C3C  503A               	movf	_slave_id,w,c
  1154  007C3E  EC3C  F03D         	call	_transmitir
  1155                           
  1156                           ;rampa.c: 82: for(i=0;i<longitud;i++) transmitir(*(dato+i)+48);
  1157  007C42  0E00               	movlw	0
  1158  007C44  6E13               	movwf	informar@i,c
  1159  007C46  D00E               	goto	l1591
  1160  007C48                     l1587:
  1161  007C48  5013               	movf	informar@i,w,c
  1162  007C4A  0D01               	mullw	1
  1163  007C4C  50F3               	movf	prodl,w,c
  1164  007C4E  2410               	addwf	informar@dato,w,c
  1165  007C50  6ED9               	movwf	fsr2l,c
  1166  007C52  50F4               	movf	prodh,w,c
  1167  007C54  2011               	addwfc	informar@dato+1,w,c
  1168  007C56  6EDA               	movwf	fsr2h,c
  1169  007C58  50DF               	movf	indf2,w,c
  1170  007C5A  0F30               	addlw	48
  1171  007C5C  EC3C  F03D         	call	_transmitir
  1172  007C60  2A13               	incf	informar@i,f,c
  1173  007C62  D000               	goto	l1591
  1174  007C64                     l1591:
  1175  007C64  5012               	movf	informar@longitud,w,c
  1176  007C66  5C13               	subwf	informar@i,w,c
  1177  007C68  A0D8               	btfss	status,0,c
  1178  007C6A  D7EE               	goto	l1587
  1179                           
  1180                           ;rampa.c: 84: transmitir('f');
  1181  007C6C  0E66               	movlw	102
  1182  007C6E  EC3C  F03D         	call	_transmitir
  1183                           
  1184                           ;rampa.c: 86: demora_envio=15-10;
  1185  007C72  0E05               	movlw	5
  1186  007C74  6E2F               	movwf	_demora_envio,c
  1187                           
  1188                           ;rampa.c: 87: while(demora_envio);
  1189  007C76  D000               	goto	l1597
  1190  007C78                     l1597:
  1191  007C78  502F               	movf	_demora_envio,w,c
  1192  007C7A  A4D8               	btfss	status,2,c
  1193  007C7C  D7FD               	goto	l1597
  1194                           
  1195                           ;rampa.c: 88: LATDbits.LD3=0;
  1196  007C7E  968C               	bcf	3980,3,c	;volatile
  1197  007C80  0012               	return		;funcret
  1198  007C82                     __end_of_informar:
  1199                           	opt stack 0
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           prodh	equ	0xFF4
  1205                           prodl	equ	0xFF3
  1206                           intcon	equ	0xFF2
  1207                           intcon2	equ	0xFF1
  1208                           postinc0	equ	0xFEE
  1209                           wreg	equ	0xFE8
  1210                           postdec1	equ	0xFE5
  1211                           fsr1l	equ	0xFE1
  1212                           indf2	equ	0xFDF
  1213                           fsr2h	equ	0xFDA
  1214                           fsr2l	equ	0xFD9
  1215                           status	equ	0xFD8
  1216                           
  1217 ;; *************** function _transmitir *****************
  1218 ;; Defined at:
  1219 ;;		line 90 in file "rampa.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  Dato            1    wreg     unsigned char 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  Dato            1   14[COMRAM] unsigned char 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;		None               void
  1226 ;; Registers used:
  1227 ;;		wreg
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1233 ;;      Params:         0       0       0       0       0       0       0       0       0
  1234 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1236 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1237 ;;Total ram usage:        1 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    2
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_informar
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text7
  1248  007A78                     __ptext7:
  1249                           	opt stack 0
  1250  007A78                     _transmitir:
  1251                           	opt stack 27
  1252                           
  1253                           ;incstack = 0
  1254                           ;transmitir@Dato stored from wreg
  1255  007A78  6E0F               	movwf	transmitir@Dato,c
  1256                           
  1257                           ;rampa.c: 92: while(!TXSTAbits.TRMT);
  1258  007A7A  D000               	goto	l347
  1259  007A7C                     l347:
  1260  007A7C  A2AC               	btfss	4012,1,c	;volatile
  1261  007A7E  D7FE               	goto	l347
  1262                           
  1263                           ;rampa.c: 93: TXREG = Dato;
  1264  007A80  C00F  FFAD         	movff	transmitir@Dato,4013	;volatile
  1265  007A84  0012               	return		;funcret
  1266  007A86                     __end_of_transmitir:
  1267                           	opt stack 0
  1268                           tblptru	equ	0xFF8
  1269                           tblptrh	equ	0xFF7
  1270                           tblptrl	equ	0xFF6
  1271                           tablat	equ	0xFF5
  1272                           prodh	equ	0xFF4
  1273                           prodl	equ	0xFF3
  1274                           intcon	equ	0xFF2
  1275                           intcon2	equ	0xFF1
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           postdec1	equ	0xFE5
  1279                           fsr1l	equ	0xFE1
  1280                           indf2	equ	0xFDF
  1281                           fsr2h	equ	0xFDA
  1282                           fsr2l	equ	0xFD9
  1283                           status	equ	0xFD8
  1284                           
  1285 ;; *************** function _decode *****************
  1286 ;; Defined at:
  1287 ;;		line 30 in file "rampa.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  dato_a_decod    1    wreg     unsigned char 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  dato_a_decod    1   15[COMRAM] unsigned char 
  1292 ;;  retorno         1   14[COMRAM] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      unsigned char 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1302 ;;      Params:         0       0       0       0       0       0       0       0       0
  1303 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1305 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1306 ;;Total ram usage:        2 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    2
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text8
  1317  007CDE                     __ptext8:
  1318                           	opt stack 0
  1319  007CDE                     _decode:
  1320                           	opt stack 28
  1321                           
  1322                           ;incstack = 0
  1323                           ;decode@dato_a_decod stored from wreg
  1324  007CDE  6E10               	movwf	decode@dato_a_decod,c
  1325                           
  1326                           ;rampa.c: 34: static unsigned char est_rec=address;
  1327                           ;rampa.c: 36: static char com_rec;
  1328                           ;rampa.c: 37: unsigned char retorno;
  1329                           ;rampa.c: 39: switch(est_rec){
  1330  007CE0  D02D               	goto	l1169
  1331  007CE2                     l1135:
  1332                           
  1333                           ;rampa.c: 41: if(dato_a_decod==slave_id ){
  1334  007CE2  503A               	movf	_slave_id,w,c
  1335  007CE4  1810               	xorwf	decode@dato_a_decod,w,c
  1336  007CE6  A4D8               	btfss	status,2,c
  1337  007CE8  D005               	goto	l1143
  1338                           
  1339                           ;rampa.c: 42: est_rec++;
  1340  007CEA  2A34               	incf	decode@est_rec,f,c
  1341                           
  1342                           ;rampa.c: 43: dato_a_decod = 0;
  1343  007CEC  0E00               	movlw	0
  1344  007CEE  6E10               	movwf	decode@dato_a_decod,c
  1345                           
  1346                           ;rampa.c: 44: retorno='p';
  1347  007CF0  0E70               	movlw	112
  1348  007CF2  D017               	goto	L3
  1349  007CF4                     l1143:
  1350                           
  1351                           ;rampa.c: 46: else if(dato_a_decod == broadcast_id){
  1352  007CF4  0E1D               	movlw	low _broadcast_id
  1353  007CF6  6EF6               	movwf	tblptrl,c
  1354  007CF8                     	if	1	;There is more than 1 active tblptr byte
  1355  007CF8  0E20               	movlw	high _broadcast_id
  1356  007CFA  6EF7               	movwf	tblptrh,c
  1357  007CFC                     	endif
  1358  007CFC                     	if	0	;There are less than 3 active tblptr bytes
  1359  007CFC                     	endif
  1360  007CFC  0008               	tblrd		*
  1361  007CFE  50F5               	movf	tablat,w,c
  1362  007D00  6210               	cpfseq	decode@dato_a_decod,c
  1363  007D02  D027               	goto	l1171
  1364                           
  1365                           ;rampa.c: 47: est_rec++;
  1366  007D04  2A34               	incf	decode@est_rec,f,c
  1367                           
  1368                           ;rampa.c: 48: dato_a_decod = 0;
  1369  007D06  0E00               	movlw	0
  1370  007D08  6E10               	movwf	decode@dato_a_decod,c
  1371                           
  1372                           ;rampa.c: 49: retorno='b';
  1373  007D0A  0E62               	movlw	98
  1374  007D0C  D00A               	goto	L3
  1375                           
  1376                           ;rampa.c: 50: }
  1377                           ;rampa.c: 51: }break;
  1378  007D0E  D021               	goto	l1171
  1379  007D10                     l1151:
  1380                           
  1381                           ;rampa.c: 54: if(dato_a_decod){
  1382  007D10  5010               	movf	decode@dato_a_decod,w,c
  1383  007D12  B4D8               	btfsc	status,2,c
  1384  007D14  D01E               	goto	l1171
  1385                           
  1386                           ;rampa.c: 55: com_rec=dato_a_decod;
  1387  007D16  C010  F033         	movff	decode@dato_a_decod,decode@com_rec
  1388                           
  1389                           ;rampa.c: 56: est_rec++;
  1390  007D1A  2A34               	incf	decode@est_rec,f,c
  1391                           
  1392                           ;rampa.c: 57: dato_a_decod = 0;
  1393  007D1C  0E00               	movlw	0
  1394  007D1E  6E10               	movwf	decode@dato_a_decod,c
  1395                           
  1396                           ;rampa.c: 58: retorno=0;
  1397  007D20  0E00               	movlw	0
  1398  007D22                     L3:
  1399  007D22  6E0F               	movwf	decode@retorno,c
  1400                           
  1401                           ;rampa.c: 60: }
  1402                           ;rampa.c: 61: }break;
  1403  007D24  D016               	goto	l1171
  1404  007D26                     l1161:
  1405                           
  1406                           ;rampa.c: 64: if(dato_a_decod=='f'){
  1407  007D26  0E66               	movlw	102
  1408  007D28  1810               	xorwf	decode@dato_a_decod,w,c
  1409  007D2A  A4D8               	btfss	status,2,c
  1410  007D2C  D012               	goto	l1171
  1411                           
  1412                           ;rampa.c: 65: est_rec=address;
  1413  007D2E  0E00               	movlw	0
  1414  007D30  6E34               	movwf	decode@est_rec,c
  1415                           
  1416                           ;rampa.c: 66: retorno = com_rec;
  1417  007D32  C033  F00F         	movff	decode@com_rec,decode@retorno
  1418                           
  1419                           ;rampa.c: 67: com_rec=0;
  1420  007D36  0E00               	movlw	0
  1421  007D38  6E33               	movwf	decode@com_rec,c
  1422                           
  1423                           ;rampa.c: 71: }
  1424                           
  1425                           ;rampa.c: 69: }
  1426                           ;rampa.c: 70: }break;
  1427  007D3A  D00B               	goto	l1171
  1428  007D3C                     l1169:
  1429  007D3C  5034               	movf	decode@est_rec,w,c
  1430                           
  1431                           ; Switch size 1, requested type "space"
  1432                           ; Number of cases is 3, Range of values is 0 to 2
  1433                           ; switch strategies available:
  1434                           ; Name         Instructions Cycles
  1435                           ; simple_byte           10     6 (average)
  1436                           ;	Chosen strategy is simple_byte
  1437  007D3E  0A00               	xorlw	0	; case 0
  1438  007D40  B4D8               	btfsc	status,2,c
  1439  007D42  D7CF               	goto	l1135
  1440  007D44  0A01               	xorlw	1	; case 1
  1441  007D46  B4D8               	btfsc	status,2,c
  1442  007D48  D7E3               	goto	l1151
  1443  007D4A  0A03               	xorlw	3	; case 2
  1444  007D4C  B4D8               	btfsc	status,2,c
  1445  007D4E  D7EB               	goto	l1161
  1446  007D50  D000               	goto	l1171
  1447  007D52                     l1171:
  1448                           
  1449                           ;rampa.c: 72: return retorno;
  1450  007D52  500F               	movf	decode@retorno,w,c
  1451  007D54  D000               	goto	l332
  1452  007D56                     l332:
  1453  007D56  0012               	return		;funcret
  1454  007D58                     __end_of_decode:
  1455                           	opt stack 0
  1456                           tblptru	equ	0xFF8
  1457                           tblptrh	equ	0xFF7
  1458                           tblptrl	equ	0xFF6
  1459                           tablat	equ	0xFF5
  1460                           prodh	equ	0xFF4
  1461                           prodl	equ	0xFF3
  1462                           intcon	equ	0xFF2
  1463                           intcon2	equ	0xFF1
  1464                           postinc0	equ	0xFEE
  1465                           wreg	equ	0xFE8
  1466                           postdec1	equ	0xFE5
  1467                           fsr1l	equ	0xFE1
  1468                           indf2	equ	0xFDF
  1469                           fsr2h	equ	0xFDA
  1470                           fsr2l	equ	0xFD9
  1471                           status	equ	0xFD8
  1472                           
  1473 ;; *************** function _assign_id *****************
  1474 ;; Defined at:
  1475 ;;		line 13 in file "rampa.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  id              1    wreg     unsigned char 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  id              1   14[COMRAM] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;		None               void
  1482 ;; Registers used:
  1483 ;;		wreg
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1489 ;;      Params:         0       0       0       0       0       0       0       0       0
  1490 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1492 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1493 ;;Total ram usage:        1 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    2
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text9
  1504  007A64                     __ptext9:
  1505                           	opt stack 0
  1506  007A64                     _assign_id:
  1507                           	opt stack 28
  1508                           
  1509                           ;incstack = 0
  1510                           ;assign_id@id stored from wreg
  1511  007A64  6E0F               	movwf	assign_id@id,c
  1512                           
  1513                           ;rampa.c: 14: slave_id=id;
  1514  007A66  C00F  F03A         	movff	assign_id@id,_slave_id
  1515  007A6A  0012               	return		;funcret
  1516  007A6C                     __end_of_assign_id:
  1517                           	opt stack 0
  1518                           tblptru	equ	0xFF8
  1519                           tblptrh	equ	0xFF7
  1520                           tblptrl	equ	0xFF6
  1521                           tablat	equ	0xFF5
  1522                           prodh	equ	0xFF4
  1523                           prodl	equ	0xFF3
  1524                           intcon	equ	0xFF2
  1525                           intcon2	equ	0xFF1
  1526                           postinc0	equ	0xFEE
  1527                           wreg	equ	0xFE8
  1528                           postdec1	equ	0xFE5
  1529                           fsr1l	equ	0xFE1
  1530                           indf2	equ	0xFDF
  1531                           fsr2h	equ	0xFDA
  1532                           fsr2l	equ	0xFD9
  1533                           status	equ	0xFD8
  1534                           
  1535 ;; *************** function ___lwmod *****************
  1536 ;; Defined at:
  1537 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  dividend        2   14[COMRAM] unsigned int 
  1540 ;;  divisor         2   16[COMRAM] unsigned int 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  counter         1   18[COMRAM] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  2   14[COMRAM] unsigned int 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1552 ;;      Params:         4       0       0       0       0       0       0       0       0
  1553 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1555 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1556 ;;Total ram usage:        5 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    2
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text10
  1567  007B8E                     __ptext10:
  1568                           	opt stack 0
  1569  007B8E                     ___lwmod:
  1570                           	opt stack 28
  1571                           
  1572                           ;incstack = 0
  1573  007B8E  5011               	movf	___lwmod@divisor,w,c
  1574  007B90  1012               	iorwf	___lwmod@divisor+1,w,c
  1575  007B92  B4D8               	btfsc	status,2,c
  1576  007B94  D01D               	goto	l956
  1577  007B96  0E01               	movlw	1
  1578  007B98  6E13               	movwf	___lwmod@counter,c
  1579  007B9A  D005               	goto	l1665
  1580  007B9C                     l1663:
  1581  007B9C  90D8               	bcf	status,0,c
  1582  007B9E  3611               	rlcf	___lwmod@divisor,f,c
  1583  007BA0  3612               	rlcf	___lwmod@divisor+1,f,c
  1584  007BA2  2A13               	incf	___lwmod@counter,f,c
  1585  007BA4  D000               	goto	l1665
  1586  007BA6                     l1665:
  1587  007BA6  BE12               	btfsc	___lwmod@divisor+1,7,c
  1588  007BA8  D002               	goto	l1667
  1589  007BAA  D7F8               	goto	l1663
  1590  007BAC  D000               	goto	l1667
  1591  007BAE                     l1667:
  1592  007BAE  5011               	movf	___lwmod@divisor,w,c
  1593  007BB0  5C0F               	subwf	___lwmod@dividend,w,c
  1594  007BB2  5012               	movf	___lwmod@divisor+1,w,c
  1595  007BB4  5810               	subwfb	___lwmod@dividend+1,w,c
  1596  007BB6  A0D8               	btfss	status,0,c
  1597  007BB8  D005               	goto	l1671
  1598  007BBA  5011               	movf	___lwmod@divisor,w,c
  1599  007BBC  5E0F               	subwf	___lwmod@dividend,f,c
  1600  007BBE  5012               	movf	___lwmod@divisor+1,w,c
  1601  007BC0  5A10               	subwfb	___lwmod@dividend+1,f,c
  1602  007BC2  D000               	goto	l1671
  1603  007BC4                     l1671:
  1604  007BC4  90D8               	bcf	status,0,c
  1605  007BC6  3212               	rrcf	___lwmod@divisor+1,f,c
  1606  007BC8  3211               	rrcf	___lwmod@divisor,f,c
  1607  007BCA  2E13               	decfsz	___lwmod@counter,f,c
  1608  007BCC  D7F0               	goto	l1667
  1609  007BCE  D000               	goto	l956
  1610  007BD0                     l956:
  1611  007BD0  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  1612  007BD4  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  1613  007BD8  0012               	return		;funcret
  1614  007BDA                     __end_of___lwmod:
  1615                           	opt stack 0
  1616                           tblptru	equ	0xFF8
  1617                           tblptrh	equ	0xFF7
  1618                           tblptrl	equ	0xFF6
  1619                           tablat	equ	0xFF5
  1620                           prodh	equ	0xFF4
  1621                           prodl	equ	0xFF3
  1622                           intcon	equ	0xFF2
  1623                           intcon2	equ	0xFF1
  1624                           postinc0	equ	0xFEE
  1625                           wreg	equ	0xFE8
  1626                           postdec1	equ	0xFE5
  1627                           fsr1l	equ	0xFE1
  1628                           indf2	equ	0xFDF
  1629                           fsr2h	equ	0xFDA
  1630                           fsr2l	equ	0xFD9
  1631                           status	equ	0xFD8
  1632                           
  1633 ;; *************** function ___lwdiv *****************
  1634 ;; Defined at:
  1635 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  dividend        2   19[COMRAM] unsigned int 
  1638 ;;  divisor         2   21[COMRAM] unsigned int 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  quotient        2   23[COMRAM] unsigned int 
  1641 ;;  counter         1   25[COMRAM] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  2   19[COMRAM] unsigned int 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1651 ;;      Params:         4       0       0       0       0       0       0       0       0
  1652 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1654 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1655 ;;Total ram usage:        7 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    2
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text11
  1666  007C82                     __ptext11:
  1667                           	opt stack 0
  1668  007C82                     ___lwdiv:
  1669                           	opt stack 28
  1670                           
  1671                           ;incstack = 0
  1672  007C82  0E00               	movlw	0
  1673  007C84  6E19               	movwf	___lwdiv@quotient+1,c
  1674  007C86  0E00               	movlw	0
  1675  007C88  6E18               	movwf	___lwdiv@quotient,c
  1676  007C8A  5016               	movf	___lwdiv@divisor,w,c
  1677  007C8C  1017               	iorwf	___lwdiv@divisor+1,w,c
  1678  007C8E  B4D8               	btfsc	status,2,c
  1679  007C90  D021               	goto	l946
  1680  007C92  0E01               	movlw	1
  1681  007C94  6E1A               	movwf	___lwdiv@counter,c
  1682  007C96  D005               	goto	l1645
  1683  007C98                     l1643:
  1684  007C98  90D8               	bcf	status,0,c
  1685  007C9A  3616               	rlcf	___lwdiv@divisor,f,c
  1686  007C9C  3617               	rlcf	___lwdiv@divisor+1,f,c
  1687  007C9E  2A1A               	incf	___lwdiv@counter,f,c
  1688  007CA0  D000               	goto	l1645
  1689  007CA2                     l1645:
  1690  007CA2  BE17               	btfsc	___lwdiv@divisor+1,7,c
  1691  007CA4  D002               	goto	l1647
  1692  007CA6  D7F8               	goto	l1643
  1693  007CA8  D000               	goto	l1647
  1694  007CAA                     l1647:
  1695  007CAA  90D8               	bcf	status,0,c
  1696  007CAC  3618               	rlcf	___lwdiv@quotient,f,c
  1697  007CAE  3619               	rlcf	___lwdiv@quotient+1,f,c
  1698  007CB0  5016               	movf	___lwdiv@divisor,w,c
  1699  007CB2  5C14               	subwf	___lwdiv@dividend,w,c
  1700  007CB4  5017               	movf	___lwdiv@divisor+1,w,c
  1701  007CB6  5815               	subwfb	___lwdiv@dividend+1,w,c
  1702  007CB8  A0D8               	btfss	status,0,c
  1703  007CBA  D006               	goto	l1655
  1704  007CBC  5016               	movf	___lwdiv@divisor,w,c
  1705  007CBE  5E14               	subwf	___lwdiv@dividend,f,c
  1706  007CC0  5017               	movf	___lwdiv@divisor+1,w,c
  1707  007CC2  5A15               	subwfb	___lwdiv@dividend+1,f,c
  1708  007CC4  8018               	bsf	___lwdiv@quotient,0,c
  1709  007CC6  D000               	goto	l1655
  1710  007CC8                     l1655:
  1711  007CC8  90D8               	bcf	status,0,c
  1712  007CCA  3217               	rrcf	___lwdiv@divisor+1,f,c
  1713  007CCC  3216               	rrcf	___lwdiv@divisor,f,c
  1714  007CCE  2E1A               	decfsz	___lwdiv@counter,f,c
  1715  007CD0  D7EC               	goto	l1647
  1716  007CD2  D000               	goto	l946
  1717  007CD4                     l946:
  1718  007CD4  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
  1719  007CD8  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1720  007CDC  0012               	return		;funcret
  1721  007CDE                     __end_of___lwdiv:
  1722                           	opt stack 0
  1723                           tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           prodh	equ	0xFF4
  1728                           prodl	equ	0xFF3
  1729                           intcon	equ	0xFF2
  1730                           intcon2	equ	0xFF1
  1731                           postinc0	equ	0xFEE
  1732                           wreg	equ	0xFE8
  1733                           postdec1	equ	0xFE5
  1734                           fsr1l	equ	0xFE1
  1735                           indf2	equ	0xFDF
  1736                           fsr2h	equ	0xFDA
  1737                           fsr2l	equ	0xFD9
  1738                           status	equ	0xFD8
  1739                           
  1740 ;; *************** function _Send_4Disp *****************
  1741 ;; Defined at:
  1742 ;;		line 74 in file "Lemos.C"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  Umil            1    wreg     unsigned char 
  1745 ;;  Cent            1   16[COMRAM] unsigned char 
  1746 ;;  Dec             1   17[COMRAM] unsigned char 
  1747 ;;  Uni             1   18[COMRAM] unsigned char 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  Umil            1   19[COMRAM] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;		None               void
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1759 ;;      Params:         3       0       0       0       0       0       0       0       0
  1760 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1762 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1763 ;;Total ram usage:        4 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    3
  1766 ;; This function calls:
  1767 ;;		_Send_Disp
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text12
  1774  007D58                     __ptext12:
  1775                           	opt stack 0
  1776  007D58                     _Send_4Disp:
  1777                           	opt stack 27
  1778                           
  1779                           ;incstack = 0
  1780                           ;Send_4Disp@Umil stored from wreg
  1781  007D58  6E14               	movwf	Send_4Disp@Umil,c
  1782                           
  1783                           ;Lemos.C: 76: static unsigned char Nro_Disp=1;
  1784                           ;Lemos.C: 78: switch(Nro_Disp){
  1785  007D5A  D036               	goto	l1635
  1786  007D5C                     l1601:
  1787                           
  1788                           ;Lemos.C: 80: if(!mux_tout){
  1789  007D5C  5031               	movf	_mux_tout,w,c
  1790  007D5E  A4D8               	btfss	status,2,c
  1791  007D60  D041               	goto	l239
  1792                           
  1793                           ;Lemos.C: 81: Send_Disp(1,Umil);
  1794  007D62  C014  F00F         	movff	Send_4Disp@Umil,Send_Disp@Dato
  1795  007D66  0E01               	movlw	1
  1796  007D68  ECED  F03D         	call	_Send_Disp
  1797                           
  1798                           ;Lemos.C: 82: mux_tout = 4;;
  1799  007D6C  0E04               	movlw	4
  1800  007D6E  6E31               	movwf	_mux_tout,c
  1801                           
  1802                           ;Lemos.C: 83: Nro_Disp = 2;
  1803  007D70  0E02               	movlw	2
  1804  007D72  D025               	goto	L6
  1805                           
  1806                           ;Lemos.C: 84: }
  1807                           ;Lemos.C: 85: }
  1808                           ;Lemos.C: 86: break;
  1809  007D74  D037               	goto	l239
  1810  007D76                     l1609:
  1811                           
  1812                           ;Lemos.C: 88: if(!mux_tout){
  1813  007D76  5031               	movf	_mux_tout,w,c
  1814  007D78  A4D8               	btfss	status,2,c
  1815  007D7A  D034               	goto	l239
  1816                           
  1817                           ;Lemos.C: 89: Send_Disp(2,Cent);
  1818  007D7C  C011  F00F         	movff	Send_4Disp@Cent,Send_Disp@Dato
  1819  007D80  0E02               	movlw	2
  1820  007D82  ECED  F03D         	call	_Send_Disp
  1821                           
  1822                           ;Lemos.C: 90: mux_tout = 4;;
  1823  007D86  0E04               	movlw	4
  1824  007D88  6E31               	movwf	_mux_tout,c
  1825                           
  1826                           ;Lemos.C: 91: Nro_Disp = 3;
  1827  007D8A  0E03               	movlw	3
  1828  007D8C  D018               	goto	L6
  1829                           
  1830                           ;Lemos.C: 92: }
  1831                           ;Lemos.C: 93: }
  1832                           ;Lemos.C: 94: break;
  1833  007D8E  D02A               	goto	l239
  1834  007D90                     l1617:
  1835                           
  1836                           ;Lemos.C: 96: if(!mux_tout){
  1837  007D90  5031               	movf	_mux_tout,w,c
  1838  007D92  A4D8               	btfss	status,2,c
  1839  007D94  D027               	goto	l239
  1840                           
  1841                           ;Lemos.C: 97: Send_Disp(3,Dec);
  1842  007D96  C012  F00F         	movff	Send_4Disp@Dec,Send_Disp@Dato
  1843  007D9A  0E03               	movlw	3
  1844  007D9C  ECED  F03D         	call	_Send_Disp
  1845                           
  1846                           ;Lemos.C: 98: mux_tout = 4;;
  1847  007DA0  0E04               	movlw	4
  1848  007DA2  6E31               	movwf	_mux_tout,c
  1849                           
  1850                           ;Lemos.C: 99: Nro_Disp = 4;
  1851  007DA4  0E04               	movlw	4
  1852  007DA6  D00B               	goto	L6
  1853                           
  1854                           ;Lemos.C: 100: }
  1855                           ;Lemos.C: 101: }
  1856                           ;Lemos.C: 102: break;
  1857  007DA8  D01D               	goto	l239
  1858  007DAA                     l1625:
  1859                           
  1860                           ;Lemos.C: 104: if(!mux_tout){
  1861  007DAA  5031               	movf	_mux_tout,w,c
  1862  007DAC  A4D8               	btfss	status,2,c
  1863  007DAE  D01A               	goto	l239
  1864                           
  1865                           ;Lemos.C: 105: Send_Disp(4,Uni);
  1866  007DB0  C013  F00F         	movff	Send_4Disp@Uni,Send_Disp@Dato
  1867  007DB4  0E04               	movlw	4
  1868  007DB6  ECED  F03D         	call	_Send_Disp
  1869  007DBA  D003               	goto	l1633
  1870  007DBC                     l1631:
  1871                           
  1872                           ;Lemos.C: 107: Nro_Disp = 1;
  1873  007DBC  0E01               	movlw	1
  1874  007DBE                     L6:
  1875  007DBE  6E36               	movwf	Send_4Disp@Nro_Disp,c
  1876                           
  1877                           ;Lemos.C: 108: }
  1878                           ;Lemos.C: 109: }
  1879                           ;Lemos.C: 110: break;
  1880  007DC0  D011               	goto	l239
  1881  007DC2                     l1633:
  1882                           
  1883                           ;Lemos.C: 112: mux_tout = 4;;
  1884  007DC2  0E04               	movlw	4
  1885  007DC4  6E31               	movwf	_mux_tout,c
  1886  007DC6  D7FA               	goto	l1631
  1887  007DC8                     l1635:
  1888  007DC8  5036               	movf	Send_4Disp@Nro_Disp,w,c
  1889                           
  1890                           ; Switch size 1, requested type "space"
  1891                           ; Number of cases is 4, Range of values is 1 to 4
  1892                           ; switch strategies available:
  1893                           ; Name         Instructions Cycles
  1894                           ; simple_byte           13     7 (average)
  1895                           ;	Chosen strategy is simple_byte
  1896  007DCA  0A01               	xorlw	1	; case 1
  1897  007DCC  B4D8               	btfsc	status,2,c
  1898  007DCE  D7C6               	goto	l1601
  1899  007DD0  0A03               	xorlw	3	; case 2
  1900  007DD2  B4D8               	btfsc	status,2,c
  1901  007DD4  D7D0               	goto	l1609
  1902  007DD6  0A01               	xorlw	1	; case 3
  1903  007DD8  B4D8               	btfsc	status,2,c
  1904  007DDA  D7DA               	goto	l1617
  1905  007DDC  0A07               	xorlw	7	; case 4
  1906  007DDE  B4D8               	btfsc	status,2,c
  1907  007DE0  D7E4               	goto	l1625
  1908  007DE2  D7EF               	goto	l1633
  1909  007DE4                     l239:
  1910  007DE4  0012               	return		;funcret
  1911  007DE6                     __end_of_Send_4Disp:
  1912                           	opt stack 0
  1913                           tblptru	equ	0xFF8
  1914                           tblptrh	equ	0xFF7
  1915                           tblptrl	equ	0xFF6
  1916                           tablat	equ	0xFF5
  1917                           prodh	equ	0xFF4
  1918                           prodl	equ	0xFF3
  1919                           intcon	equ	0xFF2
  1920                           intcon2	equ	0xFF1
  1921                           postinc0	equ	0xFEE
  1922                           wreg	equ	0xFE8
  1923                           postdec1	equ	0xFE5
  1924                           fsr1l	equ	0xFE1
  1925                           indf2	equ	0xFDF
  1926                           fsr2h	equ	0xFDA
  1927                           fsr2l	equ	0xFD9
  1928                           status	equ	0xFD8
  1929                           
  1930 ;; *************** function _Send_Disp *****************
  1931 ;; Defined at:
  1932 ;;		line 43 in file "Lemos.C"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  NroDisp         1    wreg     unsigned char 
  1935 ;;  Dato            1   14[COMRAM] unsigned char 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  NroDisp         1   15[COMRAM] unsigned char 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;		None               void
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1947 ;;      Params:         1       0       0       0       0       0       0       0       0
  1948 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1950 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1951 ;;Total ram usage:        2 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    2
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_Send_4Disp
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text13
  1962  007BDA                     __ptext13:
  1963                           	opt stack 0
  1964  007BDA                     _Send_Disp:
  1965                           	opt stack 27
  1966                           
  1967                           ;incstack = 0
  1968                           ;Send_Disp@NroDisp stored from wreg
  1969  007BDA  6E10               	movwf	Send_Disp@NroDisp,c
  1970                           
  1971                           ;Lemos.C: 45: LATA = 0;
  1972  007BDC  0E00               	movlw	0
  1973  007BDE  6E89               	movwf	3977,c	;volatile
  1974                           
  1975                           ;Lemos.C: 47: LATAbits.LA4 = 0;
  1976  007BE0  9889               	bcf	3977,4,c	;volatile
  1977                           
  1978                           ;Lemos.C: 48: LATAbits.LA5 = 0;
  1979  007BE2  9A89               	bcf	3977,5,c	;volatile
  1980                           
  1981                           ;Lemos.C: 49: LATEbits.LATE0 = 0;
  1982  007BE4  908D               	bcf	3981,0,c	;volatile
  1983                           
  1984                           ;Lemos.C: 50: LATEbits.LATE1 = 0;
  1985  007BE6  928D               	bcf	3981,1,c	;volatile
  1986                           
  1987                           ;Lemos.C: 52: switch(NroDisp){
  1988  007BE8  D008               	goto	l1573
  1989  007BEA                     l219:
  1990                           
  1991                           ;Lemos.C: 57: LATAbits.LA5 = 1;
  1992  007BEA  8A89               	bsf	3977,5,c	;volatile
  1993                           
  1994                           ;Lemos.C: 58: }break;
  1995  007BEC  D014               	goto	l1575
  1996  007BEE                     l220:
  1997                           
  1998                           ;Lemos.C: 60: LATEbits.LATE0 = 1;
  1999  007BEE  808D               	bsf	3981,0,c	;volatile
  2000                           
  2001                           ;Lemos.C: 61: }break;
  2002  007BF0  D012               	goto	l1575
  2003  007BF2                     l221:
  2004                           
  2005                           ;Lemos.C: 63: LATEbits.LATE1 = 1;
  2006  007BF2  828D               	bsf	3981,1,c	;volatile
  2007                           
  2008                           ;Lemos.C: 64: }break;
  2009  007BF4  D010               	goto	l1575
  2010  007BF6                     l222:
  2011                           
  2012                           ;Lemos.C: 66: LATAbits.LA4 = 1;
  2013  007BF6  8889               	bsf	3977,4,c	;volatile
  2014                           
  2015                           ;Lemos.C: 68: }
  2016                           
  2017                           ;Lemos.C: 67: }break;
  2018  007BF8  D00E               	goto	l1575
  2019  007BFA                     l1573:
  2020  007BFA  5010               	movf	Send_Disp@NroDisp,w,c
  2021                           
  2022                           ; Switch size 1, requested type "space"
  2023                           ; Number of cases is 4, Range of values is 1 to 4
  2024                           ; switch strategies available:
  2025                           ; Name         Instructions Cycles
  2026                           ; simple_byte           13     7 (average)
  2027                           ;	Chosen strategy is simple_byte
  2028  007BFC  0A01               	xorlw	1	; case 1
  2029  007BFE  B4D8               	btfsc	status,2,c
  2030  007C00  D7FA               	goto	l222
  2031  007C02  0A03               	xorlw	3	; case 2
  2032  007C04  B4D8               	btfsc	status,2,c
  2033  007C06  D7F1               	goto	l219
  2034  007C08  0A01               	xorlw	1	; case 3
  2035  007C0A  B4D8               	btfsc	status,2,c
  2036  007C0C  D7F0               	goto	l220
  2037  007C0E  0A07               	xorlw	7	; case 4
  2038  007C10  B4D8               	btfsc	status,2,c
  2039  007C12  D7EF               	goto	l221
  2040  007C14  D7F0               	goto	l222
  2041  007C16                     l1575:
  2042                           
  2043                           ;Lemos.C: 69: Dato = Dato & 0x0F;
  2044  007C16  500F               	movf	Send_Disp@Dato,w,c
  2045  007C18  0B0F               	andlw	15
  2046  007C1A  6E0F               	movwf	Send_Disp@Dato,c
  2047                           
  2048                           ;Lemos.C: 70: LATA = LATA & 0xF0;
  2049  007C1C  5089               	movf	3977,w,c	;volatile
  2050  007C1E  0BF0               	andlw	240
  2051  007C20  6E89               	movwf	3977,c	;volatile
  2052                           
  2053                           ;Lemos.C: 71: LATA = LATA | Dato;
  2054  007C22  5089               	movf	3977,w,c	;volatile
  2055  007C24  100F               	iorwf	Send_Disp@Dato,w,c
  2056  007C26  6E89               	movwf	3977,c	;volatile
  2057  007C28  0012               	return		;funcret
  2058  007C2A                     __end_of_Send_Disp:
  2059                           	opt stack 0
  2060                           tblptru	equ	0xFF8
  2061                           tblptrh	equ	0xFF7
  2062                           tblptrl	equ	0xFF6
  2063                           tablat	equ	0xFF5
  2064                           prodh	equ	0xFF4
  2065                           prodl	equ	0xFF3
  2066                           intcon	equ	0xFF2
  2067                           intcon2	equ	0xFF1
  2068                           postinc0	equ	0xFEE
  2069                           wreg	equ	0xFE8
  2070                           postdec1	equ	0xFE5
  2071                           fsr1l	equ	0xFE1
  2072                           indf2	equ	0xFDF
  2073                           fsr2h	equ	0xFDA
  2074                           fsr2l	equ	0xFD9
  2075                           status	equ	0xFD8
  2076                           
  2077 ;; *************** function _myISR *****************
  2078 ;; Defined at:
  2079 ;;		line 119 in file "main.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;		None               void
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         0       0       0       0       0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2095 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2096 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2097 ;;Total ram usage:       14 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    1
  2100 ;; This function calls:
  2101 ;;		_ENVIO_tic
  2102 ;;		_RAMPA_tic
  2103 ;;		_tic_timer0
  2104 ;; This function is called by:
  2105 ;;		Interrupt level 2
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	intcode
  2110  002008                     __pintcode:
  2111                           	opt stack 0
  2112  002008                     _myISR:
  2113                           	opt stack 27
  2114                           
  2115                           ;incstack = 0
  2116  002008  CFFA F001          	movff	pclath,??_myISR
  2117  00200C  CFFB F002          	movff	pclatu,??_myISR+1
  2118  002010  CFE9 F003          	movff	fsr0l,??_myISR+2
  2119  002014  EDF3  F03E         	call	int_func,f	;refresh shadow registers
  2120                           pclatu	equ	0xFFB
  2121                           pclath	equ	0xFFA
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           prodh	equ	0xFF4
  2127                           prodl	equ	0xFF3
  2128                           intcon	equ	0xFF2
  2129                           intcon2	equ	0xFF1
  2130                           postinc0	equ	0xFEE
  2131                           fsr0l	equ	0xFE9
  2132                           wreg	equ	0xFE8
  2133                           postdec1	equ	0xFE5
  2134                           fsr1l	equ	0xFE1
  2135                           indf2	equ	0xFDF
  2136                           fsr2h	equ	0xFDA
  2137                           fsr2l	equ	0xFD9
  2138                           status	equ	0xFD8
  2139                           
  2140                           	psect	intcode_body
  2141  007DE6                     __pintcode_body:
  2142                           	opt stack 27
  2143  007DE6                     int_func:
  2144                           	opt stack 27
  2145  007DE6  0006               	pop		; remove dummy address from shadow register refresh
  2146  007DE8  CFEA F004          	movff	fsr0h,??_myISR+3
  2147  007DEC  CFE1 F005          	movff	fsr1l,??_myISR+4
  2148  007DF0  CFE2 F006          	movff	fsr1h,??_myISR+5
  2149  007DF4  CFD9 F007          	movff	fsr2l,??_myISR+6
  2150  007DF8  CFDA F008          	movff	fsr2h,??_myISR+7
  2151  007DFC  CFF3 F009          	movff	prodl,??_myISR+8
  2152  007E00  CFF4 F00A          	movff	prodh,??_myISR+9
  2153  007E04  CFF6 F00B          	movff	tblptrl,??_myISR+10
  2154  007E08  CFF7 F00C          	movff	tblptrh,??_myISR+11
  2155  007E0C  CFF8 F00D          	movff	tblptru,??_myISR+12
  2156  007E10  CFF5 F00E          	movff	tablat,??_myISR+13
  2157                           
  2158                           ;main.c: 121: if(TMR0IF){
  2159  007E14  A4F2               	btfss	intcon,2,c	;volatile
  2160  007E16  D012               	goto	i2l1345
  2161                           
  2162                           ;main.c: 122: INTCONbits.TMR0IF = 0;
  2163  007E18  94F2               	bcf	intcon,2,c	;volatile
  2164                           
  2165                           ;main.c: 123: TMR0L = 209;
  2166  007E1A  0ED1               	movlw	209
  2167  007E1C  6ED6               	movwf	4054,c	;volatile
  2168                           
  2169                           ;main.c: 124: TMR0H = 0xFF;
  2170  007E1E  68D7               	setf	4055,c	;volatile
  2171                           
  2172                           ;main.c: 126: tic_timer0();
  2173  007E20  EC6D  F03D         	call	_tic_timer0	;wreg free
  2174                           
  2175                           ;main.c: 132: if(rampa_status) RAMPA_tic();
  2176  007E24  5032               	movf	_rampa_status,w,c
  2177  007E26  B4D8               	btfsc	status,2,c
  2178  007E28  D003               	goto	i2l1341
  2179  007E2A  EC4C  F03D         	call	_RAMPA_tic	;wreg free
  2180  007E2E  D000               	goto	i2l1341
  2181  007E30                     i2l1341:
  2182                           
  2183                           ;main.c: 133: if(demora_envio) ENVIO_tic();
  2184  007E30  502F               	movf	_demora_envio,w,c
  2185  007E32  B4D8               	btfsc	status,2,c
  2186  007E34  D003               	goto	i2l1345
  2187  007E36  EC36  F03D         	call	_ENVIO_tic	;wreg free
  2188  007E3A  D000               	goto	i2l1345
  2189  007E3C                     i2l1345:
  2190                           
  2191                           ;main.c: 138: }
  2192                           ;main.c: 141: if(TMR1IF){
  2193  007E3C  A09E               	btfss	3998,0,c	;volatile
  2194  007E3E  D006               	goto	i2l1355
  2195                           
  2196                           ;main.c: 142: PIR1bits.TMR1IF = 0;
  2197  007E40  909E               	bcf	3998,0,c	;volatile
  2198                           
  2199                           ;main.c: 143: TMR1L=144;
  2200  007E42  0E90               	movlw	144
  2201  007E44  6ECE               	movwf	4046,c	;volatile
  2202                           
  2203                           ;main.c: 144: TMR1H=0xFF;
  2204  007E46  68CF               	setf	4047,c	;volatile
  2205                           
  2206                           ;main.c: 147: LATBbits.LATB7 = ~LATBbits.LATB7;
  2207  007E48  7E8A               	btg	3978,7,c	;volatile
  2208  007E4A  D000               	goto	i2l1355
  2209  007E4C                     i2l1355:
  2210                           
  2211                           ;main.c: 149: }
  2212                           ;main.c: 150: if(RCIF){
  2213  007E4C  AA9E               	btfss	3998,5,c	;volatile
  2214  007E4E  D005               	goto	i2l1361
  2215                           
  2216                           ;main.c: 151: RCIF=0;
  2217  007E50  9A9E               	bcf	3998,5,c	;volatile
  2218                           
  2219                           ;main.c: 152: caracter_recibido=RCREG;
  2220  007E52  CFAE F02E          	movff	4014,_caracter_recibido	;volatile
  2221                           
  2222                           ;main.c: 153: (void) RCREG;
  2223  007E56  50AE               	movf	4014,w,c	;volatile
  2224  007E58  D000               	goto	i2l1361
  2225  007E5A                     i2l1361:
  2226                           
  2227                           ;main.c: 154: }
  2228                           ;main.c: 155: if(INT0IF){
  2229  007E5A  A2F2               	btfss	intcon,1,c	;volatile
  2230  007E5C  D005               	goto	i2l99
  2231                           
  2232                           ;main.c: 156: rampa_status=0;
  2233  007E5E  0E00               	movlw	0
  2234  007E60  6E32               	movwf	_rampa_status,c
  2235                           
  2236                           ;main.c: 157: INTCONbits.INT0IE=0;
  2237  007E62  98F2               	bcf	intcon,4,c	;volatile
  2238                           
  2239                           ;main.c: 158: INTCONbits.INT0IF=0;
  2240  007E64  92F2               	bcf	intcon,1,c	;volatile
  2241  007E66  D000               	goto	i2l99
  2242  007E68                     i2l99:
  2243  007E68  C00E  FFF5         	movff	??_myISR+13,tablat
  2244  007E6C  C00D  FFF8         	movff	??_myISR+12,tblptru
  2245  007E70  C00C  FFF7         	movff	??_myISR+11,tblptrh
  2246  007E74  C00B  FFF6         	movff	??_myISR+10,tblptrl
  2247  007E78  C00A  FFF4         	movff	??_myISR+9,prodh
  2248  007E7C  C009  FFF3         	movff	??_myISR+8,prodl
  2249  007E80  C008  FFDA         	movff	??_myISR+7,fsr2h
  2250  007E84  C007  FFD9         	movff	??_myISR+6,fsr2l
  2251  007E88  C006  FFE2         	movff	??_myISR+5,fsr1h
  2252  007E8C  C005  FFE1         	movff	??_myISR+4,fsr1l
  2253  007E90  C004  FFEA         	movff	??_myISR+3,fsr0h
  2254  007E94  C003  FFE9         	movff	??_myISR+2,fsr0l
  2255  007E98  C002  FFFB         	movff	??_myISR+1,pclatu
  2256  007E9C  C001  FFFA         	movff	??_myISR,pclath
  2257  007EA0  0011               	retfie		f
  2258  007EA2                     __end_of_myISR:
  2259                           	opt stack 0
  2260                           pclatu	equ	0xFFB
  2261                           pclath	equ	0xFFA
  2262                           tblptru	equ	0xFF8
  2263                           tblptrh	equ	0xFF7
  2264                           tblptrl	equ	0xFF6
  2265                           tablat	equ	0xFF5
  2266                           prodh	equ	0xFF4
  2267                           prodl	equ	0xFF3
  2268                           intcon	equ	0xFF2
  2269                           intcon2	equ	0xFF1
  2270                           postinc0	equ	0xFEE
  2271                           fsr0h	equ	0xFEA
  2272                           fsr0l	equ	0xFE9
  2273                           wreg	equ	0xFE8
  2274                           postdec1	equ	0xFE5
  2275                           fsr1h	equ	0xFE2
  2276                           fsr1l	equ	0xFE1
  2277                           indf2	equ	0xFDF
  2278                           fsr2h	equ	0xFDA
  2279                           fsr2l	equ	0xFD9
  2280                           status	equ	0xFD8
  2281                           
  2282 ;; *************** function _tic_timer0 *****************
  2283 ;; Defined at:
  2284 ;;		line 117 in file "Lemos.C"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2298 ;;      Params:         0       0       0       0       0       0       0       0       0
  2299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2301 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2302 ;;Total ram usage:        0 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_myISR
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text15
  2312  007ADA                     __ptext15:
  2313                           	opt stack 0
  2314  007ADA                     _tic_timer0:
  2315                           	opt stack 27
  2316                           
  2317                           ;Lemos.C: 118: if(mux_tout)mux_tout--;
  2318                           
  2319                           ;incstack = 0
  2320  007ADA  5031               	movf	_mux_tout,w,c
  2321  007ADC  B4D8               	btfsc	status,2,c
  2322  007ADE  D002               	goto	i2l1217
  2323  007AE0  0631               	decf	_mux_tout,f,c
  2324  007AE2  D000               	goto	i2l1217
  2325  007AE4                     i2l1217:
  2326                           
  2327                           ;Lemos.C: 119: if(bot_tout)bot_tout--;
  2328  007AE4  502D               	movf	_bot_tout,w,c
  2329  007AE6  B4D8               	btfsc	status,2,c
  2330  007AE8  D002               	goto	i2l1221
  2331  007AEA  062D               	decf	_bot_tout,f,c
  2332  007AEC  D000               	goto	i2l1221
  2333  007AEE                     i2l1221:
  2334                           
  2335                           ;Lemos.C: 120: if(led_tout)led_tout--;
  2336  007AEE  5025               	movf	_led_tout,w,c
  2337  007AF0  1026               	iorwf	_led_tout+1,w,c
  2338  007AF2  B4D8               	btfsc	status,2,c
  2339  007AF4  D004               	goto	i2l245
  2340  007AF6  0625               	decf	_led_tout,f,c
  2341  007AF8  A0D8               	btfss	status,0,c
  2342  007AFA  0626               	decf	_led_tout+1,f,c
  2343  007AFC  D000               	goto	i2l245
  2344  007AFE                     i2l245:
  2345  007AFE  0012               	return		;funcret
  2346  007B00                     __end_of_tic_timer0:
  2347                           	opt stack 0
  2348                           pclatu	equ	0xFFB
  2349                           pclath	equ	0xFFA
  2350                           tblptru	equ	0xFF8
  2351                           tblptrh	equ	0xFF7
  2352                           tblptrl	equ	0xFF6
  2353                           tablat	equ	0xFF5
  2354                           prodh	equ	0xFF4
  2355                           prodl	equ	0xFF3
  2356                           intcon	equ	0xFF2
  2357                           intcon2	equ	0xFF1
  2358                           postinc0	equ	0xFEE
  2359                           fsr0h	equ	0xFEA
  2360                           fsr0l	equ	0xFE9
  2361                           wreg	equ	0xFE8
  2362                           postdec1	equ	0xFE5
  2363                           fsr1h	equ	0xFE2
  2364                           fsr1l	equ	0xFE1
  2365                           indf2	equ	0xFDF
  2366                           fsr2h	equ	0xFDA
  2367                           fsr2l	equ	0xFD9
  2368                           status	equ	0xFD8
  2369                           
  2370 ;; *************** function _RAMPA_tic *****************
  2371 ;; Defined at:
  2372 ;;		line 16 in file "rampa.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;		None               void
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2386 ;;      Params:         0       0       0       0       0       0       0       0       0
  2387 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2389 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_myISR
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text16
  2400  007A98                     __ptext16:
  2401                           	opt stack 0
  2402  007A98                     _RAMPA_tic:
  2403                           	opt stack 27
  2404                           
  2405                           ;rampa.c: 17: if(tiempo_rampa<9999)tiempo_rampa++;
  2406                           
  2407                           ;incstack = 0
  2408  007A98  0E0F               	movlw	15
  2409  007A9A  5C27               	subwf	_tiempo_rampa,w,c
  2410  007A9C  0E27               	movlw	39
  2411  007A9E  5828               	subwfb	_tiempo_rampa+1,w,c
  2412  007AA0  B0D8               	btfsc	status,0,c
  2413  007AA2  D003               	goto	i2l306
  2414  007AA4  4A27               	infsnz	_tiempo_rampa,f,c
  2415  007AA6  2A28               	incf	_tiempo_rampa+1,f,c
  2416  007AA8  D000               	goto	i2l306
  2417  007AAA                     i2l306:
  2418  007AAA  0012               	return		;funcret
  2419  007AAC                     __end_of_RAMPA_tic:
  2420                           	opt stack 0
  2421                           pclatu	equ	0xFFB
  2422                           pclath	equ	0xFFA
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           prodh	equ	0xFF4
  2428                           prodl	equ	0xFF3
  2429                           intcon	equ	0xFF2
  2430                           intcon2	equ	0xFF1
  2431                           postinc0	equ	0xFEE
  2432                           fsr0h	equ	0xFEA
  2433                           fsr0l	equ	0xFE9
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           indf2	equ	0xFDF
  2439                           fsr2h	equ	0xFDA
  2440                           fsr2l	equ	0xFD9
  2441                           status	equ	0xFD8
  2442                           
  2443 ;; *************** function _ENVIO_tic *****************
  2444 ;; Defined at:
  2445 ;;		line 19 in file "rampa.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;		None               void
  2452 ;; Registers used:
  2453 ;;		wreg, status,2, status,0
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2459 ;;      Params:         0       0       0       0       0       0       0       0       0
  2460 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2462 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_myISR
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text17
  2473  007A6C                     __ptext17:
  2474                           	opt stack 0
  2475  007A6C                     _ENVIO_tic:
  2476                           	opt stack 27
  2477                           
  2478                           ;rampa.c: 20: if(demora_envio)demora_envio--;
  2479                           
  2480                           ;incstack = 0
  2481  007A6C  502F               	movf	_demora_envio,w,c
  2482  007A6E  B4D8               	btfsc	status,2,c
  2483  007A70  D002               	goto	i2l310
  2484  007A72  062F               	decf	_demora_envio,f,c
  2485  007A74  D000               	goto	i2l310
  2486  007A76                     i2l310:
  2487  007A76  0012               	return		;funcret
  2488  007A78                     __end_of_ENVIO_tic:
  2489                           	opt stack 0
  2490                           pclatu	equ	0xFFB
  2491                           pclath	equ	0xFFA
  2492                           tblptru	equ	0xFF8
  2493                           tblptrh	equ	0xFF7
  2494                           tblptrl	equ	0xFF6
  2495                           tablat	equ	0xFF5
  2496                           prodh	equ	0xFF4
  2497                           prodl	equ	0xFF3
  2498                           intcon	equ	0xFF2
  2499                           intcon2	equ	0xFF1
  2500                           postinc0	equ	0xFEE
  2501                           fsr0h	equ	0xFEA
  2502                           fsr0l	equ	0xFE9
  2503                           wreg	equ	0xFE8
  2504                           postdec1	equ	0xFE5
  2505                           fsr1h	equ	0xFE2
  2506                           fsr1l	equ	0xFE1
  2507                           indf2	equ	0xFDF
  2508                           fsr2h	equ	0xFDA
  2509                           fsr2l	equ	0xFD9
  2510                           status	equ	0xFD8
  2511                           pclatu	equ	0xFFB
  2512                           pclath	equ	0xFFA
  2513                           tblptru	equ	0xFF8
  2514                           tblptrh	equ	0xFF7
  2515                           tblptrl	equ	0xFF6
  2516                           tablat	equ	0xFF5
  2517                           prodh	equ	0xFF4
  2518                           prodl	equ	0xFF3
  2519                           intcon	equ	0xFF2
  2520                           intcon2	equ	0xFF1
  2521                           postinc0	equ	0xFEE
  2522                           fsr0h	equ	0xFEA
  2523                           fsr0l	equ	0xFE9
  2524                           wreg	equ	0xFE8
  2525                           postdec1	equ	0xFE5
  2526                           fsr1h	equ	0xFE2
  2527                           fsr1l	equ	0xFE1
  2528                           indf2	equ	0xFDF
  2529                           fsr2h	equ	0xFDA
  2530                           fsr2l	equ	0xFD9
  2531                           status	equ	0xFD8
  2532                           
  2533                           	psect	rparam
  2534  0000                     pclatu	equ	0xFFB
  2535                           pclath	equ	0xFFA
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           prodh	equ	0xFF4
  2541                           prodl	equ	0xFF3
  2542                           intcon	equ	0xFF2
  2543                           intcon2	equ	0xFF1
  2544                           postinc0	equ	0xFEE
  2545                           fsr0h	equ	0xFEA
  2546                           fsr0l	equ	0xFE9
  2547                           wreg	equ	0xFE8
  2548                           postdec1	equ	0xFE5
  2549                           fsr1h	equ	0xFE2
  2550                           fsr1l	equ	0xFE1
  2551                           indf2	equ	0xFDF
  2552                           fsr2h	equ	0xFDA
  2553                           fsr2l	equ	0xFD9
  2554                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1
    Data        4
    BSS         19
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      58
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    informar@dato	PTR unsigned char  size(2) Largest target is 4
		 -> main@paquete(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->___lwdiv
    _informar->_transmitir
    ___lwdiv->___lwmod
    _Send_4Disp->_Send_Disp

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2289
                                             26 COMRAM     8     8      0
                         _Send_4Disp
                            ___lwdiv
                            ___lwmod
                          _assign_id
                             _decode
                           _informar
                          _pic_ini13
                        _rampa_ini13
                       _timer1_ini13
                        _timer_ini13
                        _usart_ini13
 ---------------------------------------------------------------------------------
 (1) _usart_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_ini13                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rampa_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pic_ini13                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _informar                                             4     1      3     234
                                             15 COMRAM     4     1      3
                         _transmitir
 ---------------------------------------------------------------------------------
 (2) _transmitir                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _decode                                               2     2      0      90
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _assign_id                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     543
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     546
                                             19 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Send_4Disp                                           4     1      3     603
                                             16 COMRAM     4     1      3
                          _Send_Disp
 ---------------------------------------------------------------------------------
 (2) _Send_Disp                                            2     1      1     323
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                               14    14      0       0
                                              0 COMRAM    14    14      0
                          _ENVIO_tic
                          _RAMPA_tic
                         _tic_timer0
 ---------------------------------------------------------------------------------
 (4) _tic_timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RAMPA_tic                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ENVIO_tic                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_4Disp
     _Send_Disp
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _assign_id
   _decode
   _informar
     _transmitir
   _pic_ini13
   _rampa_ini13
   _timer1_ini13
   _timer_ini13
   _usart_ini13

 _myISR (ROOT)
   _ENVIO_tic
   _RAMPA_tic
   _tic_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      3A       1       61.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3A      20        0.0%
DATA                 0      0      3A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jul 28 21:43:23 2015

                        l87 7FE8                 __CFG_BOR$ON 000000                 __CFG_BORV$3 000000  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                         l220 7BEE  
                       l221 7BF2                         l222 7BF6                         l219 7BEA  
                       l332 7D56                         l239 7DE4                         l347 7A7C  
                       _DEC 002A                         l946 7CD4                         l956 7BD0  
              __CFG_CPB$OFF 000000                         _PR2 000FCB                         u700 7F58  
                       _UNI 002C                         wreg 000FE8               Send_Disp@Dato 000F  
              __CFG_LVP$OFF 000000                __CFG_WDT$OFF 000000                        l1151 7D10  
                      l1143 7CF4                        l1135 7CE2                        l1161 7D26  
                      l1171 7D52                        l1601 7D5C                        l1169 7D3C  
                      l1701 7EDC                        l1631 7DBC                        l1703 7EE2  
                      l1633 7DC2                        l1625 7DAA                        l1617 7D90  
                      l1609 7D76                        l1635 7DC8                        l1643 7C98  
                      l1715 7EF6                        l1723 7F18                        l1573 7BFA  
                      l1645 7CA2                        l1581 7C36                        l1709 7EEC  
                      l1725 7F4A                        l1575 7C16                        l1655 7CC8  
                      l1647 7CAA                        l1671 7BC4                        l1663 7B9C  
                      l1591 7C64                        l1719 7F0E                        l1665 7BA6  
                      l1667 7BAE                        l1587 7C48                        l1597 7C78  
                      l1695 7EC8                        l1699 7ED8                        _CENT 0029  
                      _LATA 000F89                        _LATB 000F8A                        _LATC 000F8B  
                      _LATD 000F8C                        _LATE 000F8D                        _RCIF 007CF5  
                      i2l99 7E68                        _UMIL 002B                 _usart_ini13 7B00  
               main@paquete 001F                        _main 7EA2                        fsr0h 000FEA  
                      fsr1h 000FE2                        fsr0l 000FE9                        fsr2h 000FDA  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
                      pclat 000FFA          __size_of_ENVIO_tic 000C                        prodh 000FF4  
                      prodl 000FF3                        start 2018               __CFG_IESO$OFF 000000  
             __CFG_MCLRE$ON 000000                ___param_bank 000010          __size_of_RAMPA_tic 0014  
             __CFG_PLLDIV$5 000000                 assign_id@id 000F                       ?_main 0001  
                     _CMCON 000FB4             __end_of___lwdiv 7CDE             __end_of___lwmod 7BDA  
                     i2l310 7A76                       i2l306 7AAA                       i2l245 7AFE  
                     _RCREG 000FAE                       _TMR0H 000FD7                       _TMR1H 000FCF  
                     _TMR0L 000FD6                       _TMR1L 000FCE                       _SPBRG 000FAF  
             __CFG_USBDIV$2 000000                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISD 000F95                       _TRISE 000F96                       _TXREG 000FAD  
             __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000              __CFG_EBTRB$OFF 000000  
                     _myISR 2008                       leds@i 0039                       tablat 000FF5  
                     status 000FD8             __initialization 7B58  main@backup_ultimo_caracter 001D  
              ?_rampa_ini13 0001                __end_of_main 8000                      ??_main 001B  
             __activetblptr 000002           __end_of_ENVIO_tic 7A78                  _Send_4Disp 7D58  
                    _ADCON1 000FC1                      ?_myISR 0001                      _CCPR1L 000FBE  
         __end_of_RAMPA_tic 7AAC                      _INT0IF 007F91                      _MEMDIG 0037  
                    i2l1221 7AEE                      i2l1217 7AE4                      i2l1341 7E30  
                    i2l1361 7E5A                      i2l1345 7E3C                      i2l1355 7E4C  
                    _TMR0IF 007F92                      _TMR1IF 007CF0                      _SPBRGH 000FB0  
            __CFG_VREGEN$ON 000000              __CFG_XINST$OFF 000000          __size_of_Send_Disp 0050  
            __CFG_STVREN$ON 000000                      _decode 7CDE                   ??___lwdiv 0018  
                 ??___lwmod 0013            __end_of_informar 7C82                      clear_0 7B5E  
                    _modula 0038        __end_of_broadcast_id 201E                __pdataCOMRAM 0036  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                ?_timer_ini13 0001               decode@com_rec 0033  
             decode@est_rec 0034                  __accesstop 0060     __end_of__initialization 7B84  
           __CFG_PBADEN$OFF 000000            Send_Disp@NroDisp 0010               decode@retorno 000F  
             ___rparam_used 000001              __pcstackCOMRAM 0001               __end_of_myISR 7EA2  
        main@broadcast_flag 001E                 ?_Send_4Disp 0011                     ??_myISR 0001  
         __end_of_Send_Disp 7C2A          __size_of_assign_id 0008                ?_usart_ini13 0001  
                __pnvCOMRAM 003A          __size_of_pic_ini13 0030                     ?_decode 0001  
        Send_4Disp@Nro_Disp 0036        __size_of_rampa_ini13 0014                _demora_envio 002F  
                 ?_informar 0010                     __Hparam 0000                     __Lparam 0000  
       __size_of_Send_4Disp 008E             __size_of_decode 007A                     ___lwdiv 7C82  
                   ___lwmod 7B8E           __end_of_assign_id 7A6C                __psmallconst 201C  
                   __pcinit 7B58               ?_timer1_ini13 0001                     __ramtop 0800  
                   __ptext0 7EA2                     __ptext1 7B00                     __ptext2 7AC0  
                   __ptext3 7A86                     __ptext4 7AAC                     __ptext5 7B28  
                   __ptext6 7C2A                     __ptext7 7A78                     __ptext8 7CDE  
                   __ptext9 7A64                informar@dato 0010                   _T0CONbits 000FD5  
                 _T1CONbits 000FCD                   _T2CONbits 000FCA           __end_of_pic_ini13 7B58  
       mux_display@contdisp 0035                   _ENVIO_tic 7A6C              __pintcode_body 7DE6  
      __size_of_timer_ini13 001A        end_of_initialization 7B84                  ??_informar 0013  
             __Lmediumconst 0000                     int_func 7DE6                _broadcast_id 201D  
                 _RAMPA_tic 7A98                  _tic_timer0 7ADA                   _RCSTAbits 000FAB  
                   postdec1 000FE5                     postinc0 000FEE              ??_timer1_ini13 000F  
                 _PORTBbits 000F81                   _TRISBbits 000F93                   _TRISCbits 000F94  
                ?_ENVIO_tic 0001                  _transmitir 7A78                 _CCP1CONbits 000FBD  
                 _TXSTAbits 000FAC                  ?_RAMPA_tic 0001        __size_of_usart_ini13 0028  
        decode@dato_a_decod 0010              __end_of_decode 7D58                 _BAUDCONbits 000FB8  
             __pidataCOMRAM 7A60                ??_Send_4Disp 0014         start_initialization 7B58  
                 _Send_Disp 7BDA                 ?_tic_timer0 0001          __end_of_Send_4Disp 7DE6  
                  ??_decode 000F            __CFG_LPT1OSC$OFF 000000                 __pbssCOMRAM 0023  
               ??_ENVIO_tic 0001                 ?_transmitir 0001        __end_of_timer1_ini13 7A98  
                ?_Send_Disp 000F                 ??_RAMPA_tic 0001           __size_of_informar 0058  
          ___lwdiv@dividend 0014               ??_rampa_ini13 000F                   __pintcode 2008  
                  ?___lwdiv 0014                    ?___lwmod 000F                   _assign_id 7A64  
               __smallconst 201C         __size_of_tic_timer0 0026                 _flag_modula 0030  
          ___lwdiv@quotient 0018              __size_of_myISR 5E9A                   _pic_ini13 7B28  
                  _LATAbits 000F89                    _LATBbits 000F8A                    _LATCbits 000F8B  
                  _LATDbits 000F8C                    _LATEbits 000F8D                    _LCD_tout 0023  
                  _PIE1bits 000F9D                    _PIR1bits 000F9E            __CFG_WDTPS$32768 000000  
          informar@longitud 0012         __size_of_transmitir 000E         __end_of_rampa_ini13 7AC0  
              _rampa_status 0032                  ?_assign_id 0001               ??_timer_ini13 000F  
            Send_4Disp@Cent 0011              Send_4Disp@Umil 0014                 _INTCON2bits 000FF1  
                ?_pic_ini13 0001                   copy_data0 7B78                 ??_Send_Disp 0010  
                  __Hrparam 0000                    __Lrparam 0000                   informar@i 0013  
         _caracter_recibido 002E            __size_of___lwdiv 005C            __size_of___lwmod 004C  
           ___lwdiv@divisor 0016       __size_of_timer1_ini13 0012             ___lwdiv@counter 001A  
                  __ptext10 7B8E                    __ptext11 7C82                    __ptext12 7D58  
                  __ptext13 7BDA                    __ptext15 7ADA                    __ptext16 7A98  
                  __ptext17 7A6C                    _bot_tout 002D               ??_usart_ini13 000F  
                  _led_tout 0025         __end_of_timer_ini13 7ADA                    _informar 7C2A  
             __size_of_main 015E                ??_tic_timer0 0001                    _slave_id 003A  
               _rampa_ini13 7AAC                    _mux_tout 0031                _timer1_ini13 7A86  
             Send_4Disp@Dec 0012               Send_4Disp@Uni 0013       __CFG_CPUDIV$OSC1_PLL2 000000  
               ??_assign_id 000F                  _INTCONbits 000FF2          __end_of_tic_timer0 7B00  
               ??_pic_ini13 000F                ??_transmitir 000F                    intlevel2 0000  
              _tiempo_rampa 0027              transmitir@Dato 000F            ___lwmod@dividend 000F  
       __end_of_usart_ini13 7B28          __end_of_transmitir 7A86             ___lwmod@divisor 0011  
           ___lwmod@counter 0013                 _timer_ini13 7AC0          __CFG_FOSC$HSPLL_HS 000000  
   main@backup_tiempo_rampa 001B  
