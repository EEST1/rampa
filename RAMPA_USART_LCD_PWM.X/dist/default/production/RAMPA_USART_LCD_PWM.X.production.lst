

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun May 31 17:38:01 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	idataCOMRAM
    33  007A5C                     __pidataCOMRAM:
    34                           	opt stack 0
    35                           
    36                           ;initializer for Send_4Disp@Nro_Disp
    37  007A5C  01                 	db	1
    38                           
    39                           ;initializer for _MEMDIG
    40  007A5D  01                 	db	1
    41                           
    42                           ;initializer for _rampa_status
    43  007A5E  01                 	db	1
    44                           
    45                           ;initializer for leds@i
    46  007A5F  01                 	db	1
    47                           
    48                           	psect	smallconst
    49  00201C                     __psmallconst:
    50                           	opt stack 0
    51  00201C  00                 	db	0
    52  00201D                     _broadcast_id:
    53                           	opt stack 0
    54  00201D  6D                 	db	109
    55  00201E                     __end_of_broadcast_id:
    56                           	opt stack 0
    57  0000                     _ADCON1	set	4033
    58  0000                     _BAUDCONbits	set	4024
    59  0000                     _CCP1CONbits	set	4029
    60  0000                     _CCPR1L	set	4030
    61  0000                     _CMCON	set	4020
    62  0000                     _INTCON2bits	set	4081
    63  0000                     _INTCONbits	set	4082
    64  0000                     _LATA	set	3977
    65  0000                     _LATAbits	set	3977
    66  0000                     _LATB	set	3978
    67  0000                     _LATBbits	set	3978
    68  0000                     _LATC	set	3979
    69  0000                     _LATCbits	set	3979
    70  0000                     _LATD	set	3980
    71  0000                     _LATDbits	set	3980
    72  0000                     _LATE	set	3981
    73  0000                     _LATEbits	set	3981
    74  0000                     _PIE1bits	set	3997
    75  0000                     _PIR1bits	set	3998
    76  0000                     _PORTBbits	set	3969
    77  0000                     _PR2	set	4043
    78  0000                     _RCREG	set	4014
    79  0000                     _RCSTAbits	set	4011
    80  0000                     _SPBRG	set	4015
    81  0000                     _SPBRGH	set	4016
    82  0000                     _T0CONbits	set	4053
    83  0000                     _T1CONbits	set	4045
    84  0000                     _T2CONbits	set	4042
    85  0000                     _TMR0H	set	4055
    86  0000                     _TMR0L	set	4054
    87  0000                     _TMR1H	set	4047
    88  0000                     _TMR1L	set	4046
    89  0000                     _TRISA	set	3986
    90  0000                     _TRISB	set	3987
    91  0000                     _TRISBbits	set	3987
    92  0000                     _TRISCbits	set	3988
    93  0000                     _TRISD	set	3989
    94  0000                     _TRISE	set	3990
    95  0000                     _TXREG	set	4013
    96  0000                     _TXSTAbits	set	4012
    97  0000                     _INT0IF	set	32657
    98  0000                     _RCIF	set	31989
    99  0000                     _TMR0IF	set	32658
   100  0000                     _TMR1IF	set	31984
   101  0000                     _TRMT	set	32097
   102  00201E  00                 	db	0	; dummy byte at the end
   103  0000                     
   104                           	psect	nvCOMRAM
   105  000039                     __pnvCOMRAM:
   106                           	opt stack 0
   107  000039                     _slave_id:
   108                           	opt stack 0
   109  000039                     	ds	1
   110                           
   111                           ; #config settings
   112  0000                     
   113                           	psect	cinit
   114  007B32                     __pcinit:
   115                           	opt stack 0
   116  007B32                     start_initialization:
   117                           	opt stack 0
   118  007B32                     __initialization:
   119                           	opt stack 0
   120                           
   121                           ; Clear objects allocated to COMRAM (16 bytes)
   122  007B32  EE00  F025         	lfsr	0,__pbssCOMRAM
   123  007B36  0E10               	movlw	16
   124  007B38                     clear_0:
   125  007B38  6AEE               	clrf	postinc0,c
   126  007B3A  06E8               	decf	wreg,f,c
   127  007B3C  E1FD               	bnz	clear_0
   128                           
   129                           ; Initialize objects allocated to COMRAM (4 bytes)
   130                           ; load TBLPTR registers with __pidataCOMRAM
   131  007B3E  0E5C               	movlw	low __pidataCOMRAM
   132  007B40  6EF6               	movwf	tblptrl,c
   133  007B42  0E7A               	movlw	high __pidataCOMRAM
   134  007B44  6EF7               	movwf	tblptrh,c
   135  007B46  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   136  007B48  6EF8               	movwf	tblptru,c
   137  007B4A  EE00  F035         	lfsr	0,__pdataCOMRAM
   138  007B4E  EE10 F004          	lfsr	1,4
   139  007B52                     copy_data0:
   140  007B52  0009               	tblrd		*+
   141  007B54  CFF5 FFEE          	movff	tablat,postinc0
   142  007B58  50E5               	movf	postdec1,w,c
   143  007B5A  50E1               	movf	fsr1l,w,c
   144  007B5C  E1FA               	bnz	copy_data0
   145  007B5E                     end_of_initialization:
   146                           	opt stack 0
   147  007B5E                     __end_of__initialization:
   148                           	opt stack 0
   149  007B5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   150  007B60  6EF8               	movwf	tblptru,c
   151  007B62  0100               	movlb	0
   152  007B64  EF44  F03F         	goto	_main	;jump to C main() function
   153                           tblptru	equ	0xFF8
   154                           tblptrh	equ	0xFF7
   155                           tblptrl	equ	0xFF6
   156                           tablat	equ	0xFF5
   157                           postinc0	equ	0xFEE
   158                           wreg	equ	0xFE8
   159                           postdec1	equ	0xFE5
   160                           fsr1l	equ	0xFE1
   161                           
   162                           	psect	bssCOMRAM
   163  000025                     __pbssCOMRAM:
   164                           	opt stack 0
   165  000025                     _LCD_tout:
   166                           	opt stack 0
   167  000025                     	ds	2
   168  000027                     _led_tout:
   169                           	opt stack 0
   170  000027                     	ds	2
   171  000029                     _tiempo_rampa:
   172                           	opt stack 0
   173  000029                     	ds	2
   174  00002B                     _CENT:
   175                           	opt stack 0
   176  00002B                     	ds	1
   177  00002C                     _DEC:
   178                           	opt stack 0
   179  00002C                     	ds	1
   180  00002D                     _UMIL:
   181                           	opt stack 0
   182  00002D                     	ds	1
   183  00002E                     _UNI:
   184                           	opt stack 0
   185  00002E                     	ds	1
   186  00002F                     _bot_tout:
   187                           	opt stack 0
   188  00002F                     	ds	1
   189  000030                     _caracter:
   190                           	opt stack 0
   191  000030                     	ds	1
   192  000031                     _mux_tout:
   193                           	opt stack 0
   194  000031                     	ds	1
   195  000032                     decode@com_rec:
   196                           	opt stack 0
   197  000032                     	ds	1
   198  000033                     decode@est_rec:
   199                           	opt stack 0
   200  000033                     	ds	1
   201  000034                     mux_display@contdisp:
   202                           	opt stack 0
   203  000034                     	ds	1
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           postdec1	equ	0xFE5
   211                           fsr1l	equ	0xFE1
   212                           
   213                           	psect	dataCOMRAM
   214  000035                     __pdataCOMRAM:
   215                           	opt stack 0
   216  000035                     Send_4Disp@Nro_Disp:
   217                           	opt stack 0
   218  000035                     	ds	1
   219  000036                     _MEMDIG:
   220                           	opt stack 0
   221  000036                     	ds	1
   222  000037                     _rampa_status:
   223                           	opt stack 0
   224  000037                     	ds	1
   225  000038                     leds@i:
   226                           	opt stack 0
   227  000038                     	ds	1
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           tblptrl	equ	0xFF6
   231                           tablat	equ	0xFF5
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           postdec1	equ	0xFE5
   235                           fsr1l	equ	0xFE1
   236                           
   237                           	psect	cstackCOMRAM
   238  000001                     __pcstackCOMRAM:
   239                           	opt stack 0
   240  000001                     ??_myISR:
   241  000001                     
   242                           ; 1 bytes @ 0x0
   243  000001                     	ds	14
   244  00000F                     ?___awmod:
   245                           	opt stack 0
   246  00000F                     Send_Disp@Dato:
   247                           	opt stack 0
   248  00000F                     assign_id@id:
   249                           	opt stack 0
   250  00000F                     decode@retorno:
   251                           	opt stack 0
   252  00000F                     informar@dec:
   253                           	opt stack 0
   254  00000F                     ___awmod@dividend:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0xE
   258  00000F                     	ds	1
   259  000010                     Send_Disp@NroDisp:
   260                           	opt stack 0
   261  000010                     decode@buffer:
   262                           	opt stack 0
   263  000010                     informar@cent:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0xF
   267  000010                     	ds	1
   268  000011                     Send_4Disp@Cent:
   269                           	opt stack 0
   270  000011                     informar@mil:
   271                           	opt stack 0
   272  000011                     ___awmod@divisor:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x10
   276  000011                     	ds	1
   277  000012                     Send_4Disp@Dec:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x11
   281  000012                     	ds	1
   282  000013                     Send_4Disp@Uni:
   283                           	opt stack 0
   284  000013                     ___awmod@counter:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0x12
   288  000013                     	ds	1
   289  000014                     Send_4Disp@Umil:
   290                           	opt stack 0
   291  000014                     ___awmod@sign:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x13
   295  000014                     	ds	1
   296  000015                     ?___awdiv:
   297                           	opt stack 0
   298  000015                     ___awdiv@dividend:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x14
   302  000015                     	ds	2
   303  000017                     ___awdiv@divisor:
   304                           	opt stack 0
   305                           
   306                           ; 2 bytes @ 0x16
   307  000017                     	ds	2
   308  000019                     ___awdiv@counter:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x18
   312  000019                     	ds	1
   313  00001A                     ___awdiv@sign:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x19
   317  00001A                     	ds	1
   318  00001B                     ___awdiv@quotient:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x1A
   322  00001B                     	ds	2
   323  00001D                     main@backup_rampa:
   324                           	opt stack 0
   325                           
   326                           ; 2 bytes @ 0x1C
   327  00001D                     	ds	2
   328  00001F                     main@backup:
   329                           	opt stack 0
   330                           
   331                           ; 1 bytes @ 0x1E
   332  00001F                     	ds	1
   333  000020                     main@broadcast_flag:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x1F
   337  000020                     	ds	1
   338  000021                     main@seg:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0x20
   342  000021                     	ds	1
   343  000022                     main@dec:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x21
   347  000022                     	ds	1
   348  000023                     main@cent:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x22
   352  000023                     	ds	1
   353  000024                     main@mil:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x23
   357  000024                     	ds	1
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367 ;;
   368 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   369 ;;
   370 ;; *************** function _main *****************
   371 ;; Defined at:
   372 ;;		line 36 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;  backup_rampa    2   28[COMRAM] unsigned int 
   377 ;;  mil             1   35[COMRAM] unsigned char 
   378 ;;  cent            1   34[COMRAM] unsigned char 
   379 ;;  dec             1   33[COMRAM] unsigned char 
   380 ;;  seg             1   32[COMRAM] unsigned char 
   381 ;;  broadcast_fl    1   31[COMRAM] unsigned char 
   382 ;;  backup          1   30[COMRAM] unsigned char 
   383 ;; Return value:  Size  Location     Type
   384 ;;		None               void
   385 ;; Registers used:
   386 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   392 ;;      Params:         0       0       0       0       0       0       0       0       0
   393 ;;      Locals:         8       0       0       0       0       0       0       0       0
   394 ;;      Temps:          0       0       0       0       0       0       0       0       0
   395 ;;      Totals:         8       0       0       0       0       0       0       0       0
   396 ;;Total ram usage:        8 bytes
   397 ;; Hardware stack levels required when called:    4
   398 ;; This function calls:
   399 ;;		_Send_4Disp
   400 ;;		___awdiv
   401 ;;		___awmod
   402 ;;		_assign_id
   403 ;;		_decode
   404 ;;		_informar
   405 ;;		_pic_ini13
   406 ;;		_timer1_ini13
   407 ;;		_timer_ini13
   408 ;;		_usart_ini13
   409 ;; This function is called by:
   410 ;;		Startup code after reset
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text0
   415  007E88                     __ptext0:
   416                           	opt stack 0
   417  007E88                     _main:
   418                           	opt stack 27
   419                           
   420                           ;main.c: 37: unsigned char backup,seg=0,dec=0,cent=0,mil=0,broadcast_flag=0;
   421                           
   422                           ;incstack = 0
   423  007E88  0E00               	movlw	0
   424  007E8A  6E21               	movwf	main@seg,c
   425  007E8C  0E00               	movlw	0
   426  007E8E  6E22               	movwf	main@dec,c
   427  007E90  0E00               	movlw	0
   428  007E92  6E23               	movwf	main@cent,c
   429  007E94  0E00               	movlw	0
   430  007E96  6E24               	movwf	main@mil,c
   431  007E98  0E00               	movlw	0
   432  007E9A  6E20               	movwf	main@broadcast_flag,c
   433                           
   434                           ;main.c: 38: unsigned int backup_rampa;
   435                           ;main.c: 40: pic_ini13();
   436  007E9C  EC81  F03D         	call	_pic_ini13	;wreg free
   437                           
   438                           ;main.c: 41: timer_ini13();
   439  007EA0  EC52  F03D         	call	_timer_ini13	;wreg free
   440                           
   441                           ;main.c: 43: timer1_ini13();
   442  007EA4  EC3C  F03D         	call	_timer1_ini13	;wreg free
   443                           
   444                           ;main.c: 44: usart_ini13();
   445  007EA8  EC6D  F03D         	call	_usart_ini13	;wreg free
   446                           
   447                           ;main.c: 45: (INTCONbits.GIE = 1);
   448  007EAC  8EF2               	bsf	intcon,7,c	;volatile
   449                           
   450                           ;main.c: 47: assign_id('a');
   451  007EAE  0E61               	movlw	97
   452  007EB0  EC30  F03D         	call	_assign_id
   453                           
   454                           ;main.c: 50: rampa_status = 0;
   455  007EB4  0E00               	movlw	0
   456  007EB6  6E37               	movwf	_rampa_status,c
   457                           
   458                           ;main.c: 51: tiempo_rampa = 0;
   459  007EB8  0E00               	movlw	0
   460  007EBA  6E2A               	movwf	_tiempo_rampa+1,c
   461  007EBC  0E00               	movlw	0
   462  007EBE  6E29               	movwf	_tiempo_rampa,c
   463                           
   464                           ;main.c: 52: TRISBbits.RB7 = 0;
   465  007EC0  9E93               	bcf	3987,7,c	;volatile
   466                           
   467                           ;main.c: 53: INTCON2bits.INTEDG0=0;
   468  007EC2  9CF1               	bcf	intcon2,6,c	;volatile
   469  007EC4                     l1233:
   470                           
   471                           ;main.c: 56: if(caracter != backup){
   472  007EC4  5030               	movf	_caracter,w,c
   473  007EC6  181F               	xorwf	main@backup,w,c
   474  007EC8  B4D8               	btfsc	status,2,c
   475  007ECA  D041               	goto	l1259
   476                           
   477                           ;main.c: 58: backup=caracter;
   478  007ECC  C030  F01F         	movff	_caracter,main@backup
   479                           
   480                           ;main.c: 68: switch(decode(caracter)){
   481  007ED0  D026               	goto	l1257
   482  007ED2                     l1237:
   483                           
   484                           ;main.c: 72: broadcast_flag=0;
   485  007ED2  0E00               	movlw	0
   486  007ED4  D001               	goto	L1
   487  007ED6                     l1239:
   488                           
   489                           ;main.c: 75: broadcast_flag=1;
   490  007ED6  0E01               	movlw	1
   491  007ED8                     L1:
   492  007ED8  6E20               	movwf	main@broadcast_flag,c
   493                           
   494                           ;main.c: 76: }break;
   495  007EDA  D039               	goto	l1259
   496  007EDC                     l78:
   497                           
   498                           ;main.c: 78: LATDbits.LD2=1;
   499  007EDC  848C               	bsf	3980,2,c	;volatile
   500                           
   501                           ;main.c: 79: LATDbits.LD3=0;
   502  007EDE  968C               	bcf	3980,3,c	;volatile
   503                           
   504                           ;main.c: 80: rampa_status=1;
   505  007EE0  0E01               	movlw	1
   506  007EE2  6E37               	movwf	_rampa_status,c
   507                           
   508                           ;main.c: 81: INTCONbits.INT0IF=0;
   509  007EE4  92F2               	bcf	intcon,1,c	;volatile
   510                           
   511                           ;main.c: 82: INTCONbits.INT0IE=0;
   512  007EE6  98F2               	bcf	intcon,4,c	;volatile
   513                           
   514                           ;main.c: 83: }break;
   515  007EE8  D032               	goto	l1259
   516  007EEA                     l79:
   517                           
   518                           ;main.c: 85: LATDbits.LD2=0;
   519  007EEA  948C               	bcf	3980,2,c	;volatile
   520                           
   521                           ;main.c: 86: LATDbits.LD3=1;
   522  007EEC  868C               	bsf	3980,3,c	;volatile
   523                           
   524                           ;main.c: 87: rampa_status=0;
   525  007EEE  0E00               	movlw	0
   526  007EF0  6E37               	movwf	_rampa_status,c
   527                           
   528                           ;main.c: 88: }break;
   529  007EF2  D02D               	goto	l1259
   530  007EF4                     l80:
   531                           
   532                           ;main.c: 90: if(!broadcast_flag){
   533  007EF4  6620               	tstfsz	main@broadcast_flag,c
   534  007EF6  D02B               	goto	l1259
   535                           
   536                           ;main.c: 91: LATDbits.LD2=1;
   537  007EF8  848C               	bsf	3980,2,c	;volatile
   538                           
   539                           ;main.c: 92: LATDbits.LD3=1;
   540  007EFA  868C               	bsf	3980,3,c	;volatile
   541                           
   542                           ;main.c: 93: informar(seg,dec,cent,mil);
   543  007EFC  C022  F00F         	movff	main@dec,informar@dec
   544  007F00  C023  F010         	movff	main@cent,informar@cent
   545  007F04  C024  F011         	movff	main@mil,informar@mil
   546  007F08  5021               	movf	main@seg,w,c
   547  007F0A  EC02  F010         	call	_informar
   548  007F0E  D01F               	goto	l1259
   549  007F10                     l82:
   550                           
   551                           ;main.c: 97: LATDbits.LD2=0;
   552  007F10  948C               	bcf	3980,2,c	;volatile
   553                           
   554                           ;main.c: 98: LATDbits.LD3=0;
   555  007F12  968C               	bcf	3980,3,c	;volatile
   556                           
   557                           ;main.c: 99: tiempo_rampa=0;
   558  007F14  0E00               	movlw	0
   559  007F16  6E2A               	movwf	_tiempo_rampa+1,c
   560  007F18  0E00               	movlw	0
   561  007F1A  6E29               	movwf	_tiempo_rampa,c
   562                           
   563                           ;main.c: 100: }break;
   564  007F1C  D018               	goto	l1259
   565  007F1E                     l1257:
   566  007F1E  5030               	movf	_caracter,w,c
   567  007F20  ECDC  F03D         	call	_decode
   568                           
   569                           ; Switch size 1, requested type "space"
   570                           ; Number of cases is 7, Range of values is 0 to 115
   571                           ; switch strategies available:
   572                           ; Name         Instructions Cycles
   573                           ; simple_byte           22    12 (average)
   574                           ;	Chosen strategy is simple_byte
   575  007F24  0A00               	xorlw	0	; case 0
   576  007F26  B4D8               	btfsc	status,2,c
   577  007F28  D012               	goto	l1259
   578  007F2A  0A62               	xorlw	98	; case 98
   579  007F2C  B4D8               	btfsc	status,2,c
   580  007F2E  D7D3               	goto	l1239
   581  007F30  0A06               	xorlw	6	; case 100
   582  007F32  B4D8               	btfsc	status,2,c
   583  007F34  D7DA               	goto	l79
   584  007F36  0A08               	xorlw	8	; case 108
   585  007F38  B4D8               	btfsc	status,2,c
   586  007F3A  D7DC               	goto	l80
   587  007F3C  0A1C               	xorlw	28	; case 112
   588  007F3E  B4D8               	btfsc	status,2,c
   589  007F40  D7C8               	goto	l1237
   590  007F42  0A02               	xorlw	2	; case 114
   591  007F44  B4D8               	btfsc	status,2,c
   592  007F46  D7E4               	goto	l82
   593  007F48  0A01               	xorlw	1	; case 115
   594  007F4A  B4D8               	btfsc	status,2,c
   595  007F4C  D7C7               	goto	l78
   596  007F4E                     l1259:
   597                           
   598                           ;main.c: 102: }
   599                           ;main.c: 104: if(tiempo_rampa !=backup_rampa){
   600  007F4E  501E               	movf	main@backup_rampa+1,w,c
   601  007F50  182A               	xorwf	_tiempo_rampa+1,w,c
   602  007F52  E102               	bnz	u285
   603  007F54  501D               	movf	main@backup_rampa,w,c
   604  007F56  1829               	xorwf	_tiempo_rampa,w,c
   605  007F58                     u285:
   606  007F58  B4D8               	btfsc	status,2,c
   607  007F5A  D048               	goto	l1265
   608                           
   609                           ;main.c: 106: seg=tiempo_rampa/1000;
   610  007F5C  C029  F015         	movff	_tiempo_rampa,___awdiv@dividend
   611  007F60  C02A  F016         	movff	_tiempo_rampa+1,___awdiv@dividend+1
   612  007F64  0E03               	movlw	3
   613  007F66  6E18               	movwf	___awdiv@divisor+1,c
   614  007F68  0EE8               	movlw	232
   615  007F6A  6E17               	movwf	___awdiv@divisor,c
   616  007F6C  EC9D  F03E         	call	___awdiv	;wreg free
   617  007F70  5015               	movf	?___awdiv,w,c
   618  007F72  6E21               	movwf	main@seg,c
   619                           
   620                           ;main.c: 107: dec=(tiempo_rampa%1000)/100;
   621  007F74  0E03               	movlw	3
   622  007F76  6E12               	movwf	___awmod@divisor+1,c
   623  007F78  0EE8               	movlw	232
   624  007F7A  6E11               	movwf	___awmod@divisor,c
   625  007F7C  C029  F00F         	movff	_tiempo_rampa,___awmod@dividend
   626  007F80  C02A  F010         	movff	_tiempo_rampa+1,___awmod@dividend+1
   627  007F84  EC55  F03E         	call	___awmod	;wreg free
   628  007F88  C00F  F015         	movff	?___awmod,___awdiv@dividend
   629  007F8C  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
   630  007F90  0E00               	movlw	0
   631  007F92  6E18               	movwf	___awdiv@divisor+1,c
   632  007F94  0E64               	movlw	100
   633  007F96  6E17               	movwf	___awdiv@divisor,c
   634  007F98  EC9D  F03E         	call	___awdiv	;wreg free
   635  007F9C  5015               	movf	?___awdiv,w,c
   636  007F9E  6E22               	movwf	main@dec,c
   637                           
   638                           ;main.c: 108: cent=(tiempo_rampa%100)/10;
   639  007FA0  0E00               	movlw	0
   640  007FA2  6E12               	movwf	___awmod@divisor+1,c
   641  007FA4  0E64               	movlw	100
   642  007FA6  6E11               	movwf	___awmod@divisor,c
   643  007FA8  C029  F00F         	movff	_tiempo_rampa,___awmod@dividend
   644  007FAC  C02A  F010         	movff	_tiempo_rampa+1,___awmod@dividend+1
   645  007FB0  EC55  F03E         	call	___awmod	;wreg free
   646  007FB4  C00F  F015         	movff	?___awmod,___awdiv@dividend
   647  007FB8  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
   648  007FBC  0E00               	movlw	0
   649  007FBE  6E18               	movwf	___awdiv@divisor+1,c
   650  007FC0  0E0A               	movlw	10
   651  007FC2  6E17               	movwf	___awdiv@divisor,c
   652  007FC4  EC9D  F03E         	call	___awdiv	;wreg free
   653  007FC8  5015               	movf	?___awdiv,w,c
   654  007FCA  6E23               	movwf	main@cent,c
   655                           
   656                           ;main.c: 109: mil=tiempo_rampa%10;
   657  007FCC  C029  F00F         	movff	_tiempo_rampa,___awmod@dividend
   658  007FD0  C02A  F010         	movff	_tiempo_rampa+1,___awmod@dividend+1
   659  007FD4  0E00               	movlw	0
   660  007FD6  6E12               	movwf	___awmod@divisor+1,c
   661  007FD8  0E0A               	movlw	10
   662  007FDA  6E11               	movwf	___awmod@divisor,c
   663  007FDC  EC55  F03E         	call	___awmod	;wreg free
   664  007FE0  500F               	movf	?___awmod,w,c
   665  007FE2  6E24               	movwf	main@mil,c
   666                           
   667                           ;main.c: 111: backup_rampa=tiempo_rampa;
   668  007FE4  C029  F01D         	movff	_tiempo_rampa,main@backup_rampa
   669  007FE8  C02A  F01E         	movff	_tiempo_rampa+1,main@backup_rampa+1
   670  007FEC                     l1265:
   671                           
   672                           ;main.c: 112: }
   673                           ;main.c: 113: Send_4Disp(seg,dec,cent,mil);
   674  007FEC  C022  F011         	movff	main@dec,Send_4Disp@Cent
   675  007FF0  C023  F012         	movff	main@cent,Send_4Disp@Dec
   676  007FF4  C024  F013         	movff	main@mil,Send_4Disp@Uni
   677  007FF8  5021               	movf	main@seg,w,c
   678  007FFA  EC15  F03E         	call	_Send_4Disp
   679  007FFE  D762               	goto	l1233
   680  008000                     __end_of_main:
   681                           	opt stack 0
   682                           tblptru	equ	0xFF8
   683                           tblptrh	equ	0xFF7
   684                           tblptrl	equ	0xFF6
   685                           tablat	equ	0xFF5
   686                           intcon	equ	0xFF2
   687                           intcon2	equ	0xFF1
   688                           postinc0	equ	0xFEE
   689                           wreg	equ	0xFE8
   690                           postdec1	equ	0xFE5
   691                           fsr1l	equ	0xFE1
   692                           status	equ	0xFD8
   693                           
   694 ;; *************** function _usart_ini13 *****************
   695 ;; Defined at:
   696 ;;		line 77 in file "Ap_ini.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;		None               void
   703 ;; Registers used:
   704 ;;		wreg, status,2
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   710 ;;      Params:         0       0       0       0       0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0       0       0
   713 ;;      Totals:         0       0       0       0       0       0       0       0       0
   714 ;;Total ram usage:        0 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    2
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text1
   725  007ADA                     __ptext1:
   726                           	opt stack 0
   727  007ADA                     _usart_ini13:
   728                           	opt stack 28
   729                           
   730                           ;Ap_ini.c: 82: TXSTAbits.BRGH = 1;
   731                           
   732                           ;incstack = 0
   733  007ADA  84AC               	bsf	4012,2,c	;volatile
   734                           
   735                           ;Ap_ini.c: 83: BAUDCONbits.BRG16=1;
   736  007ADC  86B8               	bsf	4024,3,c	;volatile
   737                           
   738                           ;Ap_ini.c: 84: TXSTAbits.SYNC = 0;
   739  007ADE  98AC               	bcf	4012,4,c	;volatile
   740                           
   741                           ;Ap_ini.c: 85: SPBRG = 0xE1;
   742  007AE0  0EE1               	movlw	225
   743  007AE2  6EAF               	movwf	4015,c	;volatile
   744                           
   745                           ;Ap_ini.c: 86: SPBRGH = 0x04;
   746  007AE4  0E04               	movlw	4
   747  007AE6  6EB0               	movwf	4016,c	;volatile
   748                           
   749                           ;Ap_ini.c: 87: RCSTAbits.SPEN = 1;
   750  007AE8  8EAB               	bsf	4011,7,c	;volatile
   751                           
   752                           ;Ap_ini.c: 90: TXSTAbits.TX9 = 0;
   753  007AEA  9CAC               	bcf	4012,6,c	;volatile
   754                           
   755                           ;Ap_ini.c: 91: TXSTAbits.TXEN = 0;
   756  007AEC  9AAC               	bcf	4012,5,c	;volatile
   757                           
   758                           ;Ap_ini.c: 94: (void) RCREG;
   759  007AEE  50AE               	movf	4014,w,c	;volatile
   760                           
   761                           ;Ap_ini.c: 95: (void) RCREG;
   762  007AF0  50AE               	movf	4014,w,c	;volatile
   763                           
   764                           ;Ap_ini.c: 96: (void) RCREG;
   765  007AF2  50AE               	movf	4014,w,c	;volatile
   766                           
   767                           ;Ap_ini.c: 97: RCSTAbits.RX9 = 0 ;
   768  007AF4  9CAB               	bcf	4011,6,c	;volatile
   769                           
   770                           ;Ap_ini.c: 98: PIE1bits.RCIE = 1;
   771  007AF6  8A9D               	bsf	3997,5,c	;volatile
   772                           
   773                           ;Ap_ini.c: 99: RCSTAbits.CREN = 1;
   774  007AF8  88AB               	bsf	4011,4,c	;volatile
   775                           
   776                           ;Ap_ini.c: 100: INTCONbits.PEIE = 1;
   777  007AFA  8CF2               	bsf	intcon,6,c	;volatile
   778                           
   779                           ;Ap_ini.c: 102: TRISCbits.RC6 = 1;
   780  007AFC  8C94               	bsf	3988,6,c	;volatile
   781                           
   782                           ;Ap_ini.c: 103: TRISCbits.RC7 = 1;
   783  007AFE  8E94               	bsf	3988,7,c	;volatile
   784  007B00  0012               	return	
   785  007B02                     __end_of_usart_ini13:
   786                           	opt stack 0
   787                           tblptru	equ	0xFF8
   788                           tblptrh	equ	0xFF7
   789                           tblptrl	equ	0xFF6
   790                           tablat	equ	0xFF5
   791                           intcon	equ	0xFF2
   792                           intcon2	equ	0xFF1
   793                           postinc0	equ	0xFEE
   794                           wreg	equ	0xFE8
   795                           postdec1	equ	0xFE5
   796                           fsr1l	equ	0xFE1
   797                           status	equ	0xFD8
   798                           
   799 ;; *************** function _timer_ini13 *****************
   800 ;; Defined at:
   801 ;;		line 37 in file "Ap_ini.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;		None               void
   808 ;; Registers used:
   809 ;;		wreg, status,2
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   815 ;;      Params:         0       0       0       0       0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0       0       0       0       0
   817 ;;      Temps:          0       0       0       0       0       0       0       0       0
   818 ;;      Totals:         0       0       0       0       0       0       0       0       0
   819 ;;Total ram usage:        0 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    2
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text2
   830  007AA4                     __ptext2:
   831                           	opt stack 0
   832  007AA4                     _timer_ini13:
   833                           	opt stack 28
   834                           
   835                           ;Ap_ini.c: 38: T0CONbits.TMR0ON = 0;
   836                           
   837                           ;incstack = 0
   838  007AA4  9ED5               	bcf	4053,7,c	;volatile
   839                           
   840                           ;Ap_ini.c: 39: T0CONbits.T08BIT = 1;
   841  007AA6  8CD5               	bsf	4053,6,c	;volatile
   842                           
   843                           ;Ap_ini.c: 40: T0CONbits.T0CS = 0;
   844  007AA8  9AD5               	bcf	4053,5,c	;volatile
   845                           
   846                           ;Ap_ini.c: 41: T0CONbits.PSA = 0;
   847  007AAA  96D5               	bcf	4053,3,c	;volatile
   848                           
   849                           ;Ap_ini.c: 42: T0CONbits.T0PS0 = 1;
   850  007AAC  80D5               	bsf	4053,0,c	;volatile
   851                           
   852                           ;Ap_ini.c: 43: T0CONbits.T0PS1 = 1;
   853  007AAE  82D5               	bsf	4053,1,c	;volatile
   854                           
   855                           ;Ap_ini.c: 44: T0CONbits.T0PS2 = 1;
   856  007AB0  84D5               	bsf	4053,2,c	;volatile
   857                           
   858                           ;Ap_ini.c: 45: TMR0L = 209;
   859  007AB2  0ED1               	movlw	209
   860  007AB4  6ED6               	movwf	4054,c	;volatile
   861                           
   862                           ;Ap_ini.c: 46: TMR0H = 0xFF;
   863  007AB6  68D7               	setf	4055,c	;volatile
   864                           
   865                           ;Ap_ini.c: 47: INTCONbits.TMR0IE = 1;
   866  007AB8  8AF2               	bsf	intcon,5,c	;volatile
   867                           
   868                           ;Ap_ini.c: 48: T0CONbits.TMR0ON = 1;
   869  007ABA  8ED5               	bsf	4053,7,c	;volatile
   870  007ABC  0012               	return	
   871  007ABE                     __end_of_timer_ini13:
   872                           	opt stack 0
   873                           tblptru	equ	0xFF8
   874                           tblptrh	equ	0xFF7
   875                           tblptrl	equ	0xFF6
   876                           tablat	equ	0xFF5
   877                           intcon	equ	0xFF2
   878                           intcon2	equ	0xFF1
   879                           postinc0	equ	0xFEE
   880                           wreg	equ	0xFE8
   881                           postdec1	equ	0xFE5
   882                           fsr1l	equ	0xFE1
   883                           status	equ	0xFD8
   884                           
   885 ;; *************** function _timer1_ini13 *****************
   886 ;; Defined at:
   887 ;;		line 51 in file "Ap_ini.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;		None               void
   894 ;; Registers used:
   895 ;;		wreg, status,2
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   901 ;;      Params:         0       0       0       0       0       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0       0       0       0       0
   903 ;;      Temps:          0       0       0       0       0       0       0       0       0
   904 ;;      Totals:         0       0       0       0       0       0       0       0       0
   905 ;;Total ram usage:        0 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    2
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text3
   916  007A78                     __ptext3:
   917                           	opt stack 0
   918  007A78                     _timer1_ini13:
   919                           	opt stack 28
   920                           
   921                           ;Ap_ini.c: 53: T1CONbits.T1CKPS0=0;
   922                           
   923                           ;incstack = 0
   924  007A78  98CD               	bcf	4045,4,c	;volatile
   925                           
   926                           ;Ap_ini.c: 54: T1CONbits.T1CKPS1=0;
   927  007A7A  9ACD               	bcf	4045,5,c	;volatile
   928                           
   929                           ;Ap_ini.c: 55: TMR1L=145;
   930  007A7C  0E91               	movlw	145
   931  007A7E  6ECE               	movwf	4046,c	;volatile
   932                           
   933                           ;Ap_ini.c: 56: TMR1H=0xFF;
   934  007A80  68CF               	setf	4047,c	;volatile
   935                           
   936                           ;Ap_ini.c: 57: PIR1bits.TMR1IF=0;
   937  007A82  909E               	bcf	3998,0,c	;volatile
   938                           
   939                           ;Ap_ini.c: 58: PIE1bits.TMR1IE=1;
   940  007A84  809D               	bsf	3997,0,c	;volatile
   941                           
   942                           ;Ap_ini.c: 59: T1CONbits.TMR1ON = 1;
   943  007A86  80CD               	bsf	4045,0,c	;volatile
   944  007A88  0012               	return	
   945  007A8A                     __end_of_timer1_ini13:
   946                           	opt stack 0
   947                           tblptru	equ	0xFF8
   948                           tblptrh	equ	0xFF7
   949                           tblptrl	equ	0xFF6
   950                           tablat	equ	0xFF5
   951                           intcon	equ	0xFF2
   952                           intcon2	equ	0xFF1
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           postdec1	equ	0xFE5
   956                           fsr1l	equ	0xFE1
   957                           status	equ	0xFD8
   958                           
   959 ;; *************** function _pic_ini13 *****************
   960 ;; Defined at:
   961 ;;		line 9 in file "Ap_ini.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;		None               void
   968 ;; Registers used:
   969 ;;		wreg, status,2
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   975 ;;      Params:         0       0       0       0       0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0
   978 ;;      Totals:         0       0       0       0       0       0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    2
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text4
   990  007B02                     __ptext4:
   991                           	opt stack 0
   992  007B02                     _pic_ini13:
   993                           	opt stack 28
   994                           
   995                           ;Ap_ini.c: 12: LATA = 0x00;
   996                           
   997                           ;incstack = 0
   998  007B02  0E00               	movlw	0
   999  007B04  6E89               	movwf	3977,c	;volatile
  1000                           
  1001                           ;Ap_ini.c: 13: LATB = 0x00;
  1002  007B06  0E00               	movlw	0
  1003  007B08  6E8A               	movwf	3978,c	;volatile
  1004                           
  1005                           ;Ap_ini.c: 14: LATC = 0x00;
  1006  007B0A  0E00               	movlw	0
  1007  007B0C  6E8B               	movwf	3979,c	;volatile
  1008                           
  1009                           ;Ap_ini.c: 15: LATD = 0x00;
  1010  007B0E  0E00               	movlw	0
  1011  007B10  6E8C               	movwf	3980,c	;volatile
  1012                           
  1013                           ;Ap_ini.c: 16: LATE = 0x00;
  1014  007B12  0E00               	movlw	0
  1015  007B14  6E8D               	movwf	3981,c	;volatile
  1016                           
  1017                           ;Ap_ini.c: 20: TRISD = 0xF0;
  1018  007B16  0EF0               	movlw	240
  1019  007B18  6E95               	movwf	3989,c	;volatile
  1020                           
  1021                           ;Ap_ini.c: 21: TRISCbits.RC6 = 0;
  1022  007B1A  9C94               	bcf	3988,6,c	;volatile
  1023                           
  1024                           ;Ap_ini.c: 22: TRISCbits.RC7 = 0;
  1025  007B1C  9E94               	bcf	3988,7,c	;volatile
  1026                           
  1027                           ;Ap_ini.c: 26: CMCON = 0x07;
  1028  007B1E  0E07               	movlw	7
  1029  007B20  6EB4               	movwf	4020,c	;volatile
  1030                           
  1031                           ;Ap_ini.c: 27: ADCON1 = 0x0F;
  1032  007B22  0E0F               	movlw	15
  1033  007B24  6EC1               	movwf	4033,c	;volatile
  1034                           
  1035                           ;Ap_ini.c: 28: TRISA = 0xC0;
  1036  007B26  0EC0               	movlw	192
  1037  007B28  6E92               	movwf	3986,c	;volatile
  1038                           
  1039                           ;Ap_ini.c: 29: TRISE = 0x00;
  1040  007B2A  0E00               	movlw	0
  1041  007B2C  6E96               	movwf	3990,c	;volatile
  1042                           
  1043                           ;Ap_ini.c: 33: TRISB = 0xFF;
  1044  007B2E  6893               	setf	3987,c	;volatile
  1045  007B30  0012               	return	
  1046  007B32                     __end_of_pic_ini13:
  1047                           	opt stack 0
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           intcon	equ	0xFF2
  1053                           intcon2	equ	0xFF1
  1054                           postinc0	equ	0xFEE
  1055                           wreg	equ	0xFE8
  1056                           postdec1	equ	0xFE5
  1057                           fsr1l	equ	0xFE1
  1058                           status	equ	0xFD8
  1059                           
  1060 ;; *************** function _informar *****************
  1061 ;; Defined at:
  1062 ;;		line 60 in file "rampa.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  seg             1    wreg     unsigned char 
  1065 ;;  dec             1   14[COMRAM] unsigned char 
  1066 ;;  cent            1   15[COMRAM] unsigned char 
  1067 ;;  mil             1   16[COMRAM] unsigned char 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  seg             1    0[COMRAM] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;		None               void
  1072 ;; Registers used:
  1073 ;;		wreg
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1079 ;;      Params:         3       0       0       0       0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1082 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1083 ;;Total ram usage:        3 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    2
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text5
  1094  002004                     __ptext5:
  1095                           	opt stack 0
  1096  002004                     _informar:
  1097                           	opt stack 28
  1098                           
  1099                           ;incstack = 0
  1100  002004  0012               	return	
  1101  002006                     __end_of_informar:
  1102                           	opt stack 0
  1103                           tblptru	equ	0xFF8
  1104                           tblptrh	equ	0xFF7
  1105                           tblptrl	equ	0xFF6
  1106                           tablat	equ	0xFF5
  1107                           intcon	equ	0xFF2
  1108                           intcon2	equ	0xFF1
  1109                           postinc0	equ	0xFEE
  1110                           wreg	equ	0xFE8
  1111                           postdec1	equ	0xFE5
  1112                           fsr1l	equ	0xFE1
  1113                           status	equ	0xFD8
  1114                           
  1115 ;; *************** function _decode *****************
  1116 ;; Defined at:
  1117 ;;		line 14 in file "rampa.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  buffer          1    wreg     unsigned char 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  buffer          1   15[COMRAM] unsigned char 
  1122 ;;  retorno         1   14[COMRAM] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      unsigned char 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0
  1133 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1135 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1136 ;;Total ram usage:        2 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    2
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text6
  1147  007BB8                     __ptext6:
  1148                           	opt stack 0
  1149  007BB8                     _decode:
  1150                           	opt stack 28
  1151                           
  1152                           ;incstack = 0
  1153                           ;decode@buffer stored from wreg
  1154  007BB8  6E10               	movwf	decode@buffer,c
  1155                           
  1156                           ;rampa.c: 17: static unsigned char est_rec=address;
  1157                           ;rampa.c: 18: static char com_rec;
  1158                           ;rampa.c: 20: unsigned char retorno;
  1159                           ;rampa.c: 22: switch(est_rec){
  1160  007BBA  D02B               	goto	l1075
  1161  007BBC                     l1041:
  1162                           
  1163                           ;rampa.c: 24: if(buffer==slave_id ){
  1164  007BBC  5039               	movf	_slave_id,w,c
  1165  007BBE  6210               	cpfseq	decode@buffer,c
  1166  007BC0  D005               	goto	l1049
  1167                           
  1168                           ;rampa.c: 25: est_rec++;
  1169  007BC2  2A33               	incf	decode@est_rec,f,c
  1170                           
  1171                           ;rampa.c: 26: buffer = 0;
  1172  007BC4  0E00               	movlw	0
  1173  007BC6  6E10               	movwf	decode@buffer,c
  1174                           
  1175                           ;rampa.c: 27: retorno='p';
  1176  007BC8  0E70               	movlw	112
  1177  007BCA  D016               	goto	L3
  1178  007BCC                     l1049:
  1179                           
  1180                           ;rampa.c: 31: else if(buffer == broadcast_id){
  1181  007BCC  0E1D               	movlw	low _broadcast_id
  1182  007BCE  6EF6               	movwf	tblptrl,c
  1183  007BD0                     	if	1	;There is more than 1 active tblptr byte
  1184  007BD0  0E20               	movlw	high _broadcast_id
  1185  007BD2  6EF7               	movwf	tblptrh,c
  1186  007BD4                     	endif
  1187  007BD4                     	if	0	;There are less than 3 active tblptr bytes
  1188  007BD4                     	endif
  1189  007BD4  0008               	tblrd		*
  1190  007BD6  50F5               	movf	tablat,w,c
  1191  007BD8  6210               	cpfseq	decode@buffer,c
  1192  007BDA  D025               	goto	l1077
  1193                           
  1194                           ;rampa.c: 32: est_rec++;
  1195  007BDC  2A33               	incf	decode@est_rec,f,c
  1196                           
  1197                           ;rampa.c: 33: buffer = 0;
  1198  007BDE  0E00               	movlw	0
  1199  007BE0  6E10               	movwf	decode@buffer,c
  1200                           
  1201                           ;rampa.c: 34: retorno='b';
  1202  007BE2  0E62               	movlw	98
  1203  007BE4  D009               	goto	L3
  1204  007BE6                     l1057:
  1205                           
  1206                           ;rampa.c: 40: if(buffer){
  1207  007BE6  5010               	movf	decode@buffer,w,c
  1208  007BE8  B4D8               	btfsc	status,2,c
  1209  007BEA  D01D               	goto	l1077
  1210                           
  1211                           ;rampa.c: 41: com_rec=buffer;
  1212  007BEC  C010  F032         	movff	decode@buffer,decode@com_rec
  1213                           
  1214                           ;rampa.c: 42: est_rec++;
  1215  007BF0  2A33               	incf	decode@est_rec,f,c
  1216                           
  1217                           ;rampa.c: 43: buffer = 0;
  1218  007BF2  0E00               	movlw	0
  1219  007BF4  6E10               	movwf	decode@buffer,c
  1220                           
  1221                           ;rampa.c: 44: retorno=0;
  1222  007BF6  0E00               	movlw	0
  1223  007BF8                     L3:
  1224  007BF8  6E0F               	movwf	decode@retorno,c
  1225  007BFA  D015               	goto	l1077
  1226  007BFC                     l1067:
  1227                           
  1228                           ;rampa.c: 50: if(buffer=='f'){
  1229  007BFC  5010               	movf	decode@buffer,w,c
  1230  007BFE  0A66               	xorlw	102
  1231  007C00  A4D8               	btfss	status,2,c
  1232  007C02  D011               	goto	l1077
  1233                           
  1234                           ;rampa.c: 51: est_rec=address;
  1235  007C04  0E00               	movlw	0
  1236  007C06  6E33               	movwf	decode@est_rec,c
  1237                           
  1238                           ;rampa.c: 52: retorno = com_rec;
  1239  007C08  C032  F00F         	movff	decode@com_rec,decode@retorno
  1240                           
  1241                           ;rampa.c: 53: com_rec=0;
  1242  007C0C  0E00               	movlw	0
  1243  007C0E  6E32               	movwf	decode@com_rec,c
  1244  007C10  D00A               	goto	l1077
  1245  007C12                     l1075:
  1246  007C12  5033               	movf	decode@est_rec,w,c
  1247                           
  1248                           ; Switch size 1, requested type "space"
  1249                           ; Number of cases is 3, Range of values is 0 to 2
  1250                           ; switch strategies available:
  1251                           ; Name         Instructions Cycles
  1252                           ; simple_byte           10     6 (average)
  1253                           ;	Chosen strategy is simple_byte
  1254  007C14  0A00               	xorlw	0	; case 0
  1255  007C16  B4D8               	btfsc	status,2,c
  1256  007C18  D7D1               	goto	l1041
  1257  007C1A  0A01               	xorlw	1	; case 1
  1258  007C1C  B4D8               	btfsc	status,2,c
  1259  007C1E  D7E3               	goto	l1057
  1260  007C20  0A03               	xorlw	3	; case 2
  1261  007C22  B4D8               	btfsc	status,2,c
  1262  007C24  D7EB               	goto	l1067
  1263  007C26                     l1077:
  1264                           
  1265                           ;rampa.c: 58: return retorno;
  1266  007C26  500F               	movf	decode@retorno,w,c
  1267  007C28  0012               	return	
  1268  007C2A                     __end_of_decode:
  1269                           	opt stack 0
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           intcon	equ	0xFF2
  1275                           intcon2	equ	0xFF1
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           postdec1	equ	0xFE5
  1279                           fsr1l	equ	0xFE1
  1280                           status	equ	0xFD8
  1281                           
  1282 ;; *************** function _assign_id *****************
  1283 ;; Defined at:
  1284 ;;		line 7 in file "rampa.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  id              1    wreg     unsigned char 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  id              1   14[COMRAM] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;		None               void
  1291 ;; Registers used:
  1292 ;;		wreg
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1298 ;;      Params:         0       0       0       0       0       0       0       0       0
  1299 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1301 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1302 ;;Total ram usage:        1 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    2
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text7
  1313  007A60                     __ptext7:
  1314                           	opt stack 0
  1315  007A60                     _assign_id:
  1316                           	opt stack 28
  1317                           
  1318                           ;incstack = 0
  1319                           ;assign_id@id stored from wreg
  1320  007A60  6E0F               	movwf	assign_id@id,c
  1321                           
  1322                           ;rampa.c: 8: slave_id=id;
  1323  007A62  C00F  F039         	movff	assign_id@id,_slave_id
  1324  007A66  0012               	return	
  1325  007A68                     __end_of_assign_id:
  1326                           	opt stack 0
  1327                           tblptru	equ	0xFF8
  1328                           tblptrh	equ	0xFF7
  1329                           tblptrl	equ	0xFF6
  1330                           tablat	equ	0xFF5
  1331                           intcon	equ	0xFF2
  1332                           intcon2	equ	0xFF1
  1333                           postinc0	equ	0xFEE
  1334                           wreg	equ	0xFE8
  1335                           postdec1	equ	0xFE5
  1336                           fsr1l	equ	0xFE1
  1337                           status	equ	0xFD8
  1338                           
  1339 ;; *************** function ___awmod *****************
  1340 ;; Defined at:
  1341 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/awmod.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  dividend        2   14[COMRAM] int 
  1344 ;;  divisor         2   16[COMRAM] int 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  sign            1   19[COMRAM] unsigned char 
  1347 ;;  counter         1   18[COMRAM] unsigned char 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  2   14[COMRAM] int 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0, prodl
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1357 ;;      Params:         4       0       0       0       0       0       0       0       0
  1358 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1360 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1361 ;;Total ram usage:        6 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    2
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text8
  1372  007CAA                     __ptext8:
  1373                           	opt stack 0
  1374  007CAA                     ___awmod:
  1375                           	opt stack 28
  1376                           
  1377                           ;incstack = 0
  1378  007CAA  0E00               	movlw	0
  1379  007CAC  6E14               	movwf	___awmod@sign,c
  1380  007CAE  5010               	movf	___awmod@dividend+1,w,c
  1381  007CB0  0A80               	xorlw	128
  1382  007CB2  6EF3               	movwf	prodl,c
  1383  007CB4  0E80               	movlw	128
  1384  007CB6  5CF3               	subwf	prodl,w,c
  1385  007CB8  0E00               	movlw	0
  1386  007CBA  B4D8               	btfsc	status,2,c
  1387  007CBC  5C0F               	subwf	___awmod@dividend,w,c
  1388  007CBE  B0D8               	btfsc	status,0,c
  1389  007CC0  D006               	goto	l1183
  1390  007CC2  6C0F               	negf	___awmod@dividend,c
  1391  007CC4  1E10               	comf	___awmod@dividend+1,f,c
  1392  007CC6  B0D8               	btfsc	status,0,c
  1393  007CC8  2A10               	incf	___awmod@dividend+1,f,c
  1394  007CCA  0E01               	movlw	1
  1395  007CCC  6E14               	movwf	___awmod@sign,c
  1396  007CCE                     l1183:
  1397  007CCE  5012               	movf	___awmod@divisor+1,w,c
  1398  007CD0  0A80               	xorlw	128
  1399  007CD2  6EF3               	movwf	prodl,c
  1400  007CD4  0E80               	movlw	128
  1401  007CD6  5CF3               	subwf	prodl,w,c
  1402  007CD8  0E00               	movlw	0
  1403  007CDA  B4D8               	btfsc	status,2,c
  1404  007CDC  5C11               	subwf	___awmod@divisor,w,c
  1405  007CDE  B0D8               	btfsc	status,0,c
  1406  007CE0  D004               	goto	l1187
  1407  007CE2  6C11               	negf	___awmod@divisor,c
  1408  007CE4  1E12               	comf	___awmod@divisor+1,f,c
  1409  007CE6  B0D8               	btfsc	status,0,c
  1410  007CE8  2A12               	incf	___awmod@divisor+1,f,c
  1411  007CEA                     l1187:
  1412  007CEA  5012               	movf	___awmod@divisor+1,w,c
  1413  007CEC  1011               	iorwf	___awmod@divisor,w,c
  1414  007CEE  B4D8               	btfsc	status,2,c
  1415  007CF0  D018               	goto	l1203
  1416  007CF2  0E01               	movlw	1
  1417  007CF4  6E13               	movwf	___awmod@counter,c
  1418  007CF6  D004               	goto	l1193
  1419  007CF8                     l1191:
  1420  007CF8  90D8               	bcf	status,0,c
  1421  007CFA  3611               	rlcf	___awmod@divisor,f,c
  1422  007CFC  3612               	rlcf	___awmod@divisor+1,f,c
  1423  007CFE  2A13               	incf	___awmod@counter,f,c
  1424  007D00                     l1193:
  1425  007D00  AE12               	btfss	___awmod@divisor+1,7,c
  1426  007D02  D7FA               	goto	l1191
  1427  007D04                     l1195:
  1428  007D04  5011               	movf	___awmod@divisor,w,c
  1429  007D06  5C0F               	subwf	___awmod@dividend,w,c
  1430  007D08  5012               	movf	___awmod@divisor+1,w,c
  1431  007D0A  5810               	subwfb	___awmod@dividend+1,w,c
  1432  007D0C  A0D8               	btfss	status,0,c
  1433  007D0E  D004               	goto	l1199
  1434  007D10  5011               	movf	___awmod@divisor,w,c
  1435  007D12  5E0F               	subwf	___awmod@dividend,f,c
  1436  007D14  5012               	movf	___awmod@divisor+1,w,c
  1437  007D16  5A10               	subwfb	___awmod@dividend+1,f,c
  1438  007D18                     l1199:
  1439  007D18  90D8               	bcf	status,0,c
  1440  007D1A  3212               	rrcf	___awmod@divisor+1,f,c
  1441  007D1C  3211               	rrcf	___awmod@divisor,f,c
  1442  007D1E  2E13               	decfsz	___awmod@counter,f,c
  1443  007D20  D7F1               	goto	l1195
  1444  007D22                     l1203:
  1445  007D22  5014               	movf	___awmod@sign,w,c
  1446  007D24  B4D8               	btfsc	status,2,c
  1447  007D26  D004               	goto	l1207
  1448  007D28  6C0F               	negf	___awmod@dividend,c
  1449  007D2A  1E10               	comf	___awmod@dividend+1,f,c
  1450  007D2C  B0D8               	btfsc	status,0,c
  1451  007D2E  2A10               	incf	___awmod@dividend+1,f,c
  1452  007D30                     l1207:
  1453  007D30  C00F  F00F         	movff	___awmod@dividend,?___awmod
  1454  007D34  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  1455  007D38  0012               	return	
  1456  007D3A                     __end_of___awmod:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           prodl	equ	0xFF3
  1463                           intcon	equ	0xFF2
  1464                           intcon2	equ	0xFF1
  1465                           postinc0	equ	0xFEE
  1466                           wreg	equ	0xFE8
  1467                           postdec1	equ	0xFE5
  1468                           fsr1l	equ	0xFE1
  1469                           status	equ	0xFD8
  1470                           
  1471 ;; *************** function ___awdiv *****************
  1472 ;; Defined at:
  1473 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/awdiv.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  dividend        2   20[COMRAM] int 
  1476 ;;  divisor         2   22[COMRAM] int 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  quotient        2   26[COMRAM] int 
  1479 ;;  sign            1   25[COMRAM] unsigned char 
  1480 ;;  counter         1   24[COMRAM] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  2   20[COMRAM] int 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0, prodl
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1490 ;;      Params:         4       0       0       0       0       0       0       0       0
  1491 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1493 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1494 ;;Total ram usage:        8 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    2
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text9
  1505  007D3A                     __ptext9:
  1506                           	opt stack 0
  1507  007D3A                     ___awdiv:
  1508                           	opt stack 28
  1509                           
  1510                           ;incstack = 0
  1511  007D3A  0E00               	movlw	0
  1512  007D3C  6E1A               	movwf	___awdiv@sign,c
  1513  007D3E  5018               	movf	___awdiv@divisor+1,w,c
  1514  007D40  0A80               	xorlw	128
  1515  007D42  6EF3               	movwf	prodl,c
  1516  007D44  0E80               	movlw	128
  1517  007D46  5CF3               	subwf	prodl,w,c
  1518  007D48  0E00               	movlw	0
  1519  007D4A  B4D8               	btfsc	status,2,c
  1520  007D4C  5C17               	subwf	___awdiv@divisor,w,c
  1521  007D4E  B0D8               	btfsc	status,0,c
  1522  007D50  D006               	goto	l1139
  1523  007D52  6C17               	negf	___awdiv@divisor,c
  1524  007D54  1E18               	comf	___awdiv@divisor+1,f,c
  1525  007D56  B0D8               	btfsc	status,0,c
  1526  007D58  2A18               	incf	___awdiv@divisor+1,f,c
  1527  007D5A  0E01               	movlw	1
  1528  007D5C  6E1A               	movwf	___awdiv@sign,c
  1529  007D5E                     l1139:
  1530  007D5E  5016               	movf	___awdiv@dividend+1,w,c
  1531  007D60  0A80               	xorlw	128
  1532  007D62  6EF3               	movwf	prodl,c
  1533  007D64  0E80               	movlw	128
  1534  007D66  5CF3               	subwf	prodl,w,c
  1535  007D68  0E00               	movlw	0
  1536  007D6A  B4D8               	btfsc	status,2,c
  1537  007D6C  5C15               	subwf	___awdiv@dividend,w,c
  1538  007D6E  B0D8               	btfsc	status,0,c
  1539  007D70  D006               	goto	l1145
  1540  007D72  6C15               	negf	___awdiv@dividend,c
  1541  007D74  1E16               	comf	___awdiv@dividend+1,f,c
  1542  007D76  B0D8               	btfsc	status,0,c
  1543  007D78  2A16               	incf	___awdiv@dividend+1,f,c
  1544  007D7A  0E01               	movlw	1
  1545  007D7C  1A1A               	xorwf	___awdiv@sign,f,c
  1546  007D7E                     l1145:
  1547  007D7E  0E00               	movlw	0
  1548  007D80  6E1C               	movwf	___awdiv@quotient+1,c
  1549  007D82  0E00               	movlw	0
  1550  007D84  6E1B               	movwf	___awdiv@quotient,c
  1551  007D86  5018               	movf	___awdiv@divisor+1,w,c
  1552  007D88  1017               	iorwf	___awdiv@divisor,w,c
  1553  007D8A  B4D8               	btfsc	status,2,c
  1554  007D8C  D01C               	goto	l1167
  1555  007D8E  0E01               	movlw	1
  1556  007D90  6E19               	movwf	___awdiv@counter,c
  1557  007D92  D004               	goto	l1153
  1558  007D94                     l1151:
  1559  007D94  90D8               	bcf	status,0,c
  1560  007D96  3617               	rlcf	___awdiv@divisor,f,c
  1561  007D98  3618               	rlcf	___awdiv@divisor+1,f,c
  1562  007D9A  2A19               	incf	___awdiv@counter,f,c
  1563  007D9C                     l1153:
  1564  007D9C  AE18               	btfss	___awdiv@divisor+1,7,c
  1565  007D9E  D7FA               	goto	l1151
  1566  007DA0                     l1155:
  1567  007DA0  90D8               	bcf	status,0,c
  1568  007DA2  361B               	rlcf	___awdiv@quotient,f,c
  1569  007DA4  361C               	rlcf	___awdiv@quotient+1,f,c
  1570  007DA6  5017               	movf	___awdiv@divisor,w,c
  1571  007DA8  5C15               	subwf	___awdiv@dividend,w,c
  1572  007DAA  5018               	movf	___awdiv@divisor+1,w,c
  1573  007DAC  5816               	subwfb	___awdiv@dividend+1,w,c
  1574  007DAE  A0D8               	btfss	status,0,c
  1575  007DB0  D005               	goto	l1163
  1576  007DB2  5017               	movf	___awdiv@divisor,w,c
  1577  007DB4  5E15               	subwf	___awdiv@dividend,f,c
  1578  007DB6  5018               	movf	___awdiv@divisor+1,w,c
  1579  007DB8  5A16               	subwfb	___awdiv@dividend+1,f,c
  1580  007DBA  801B               	bsf	___awdiv@quotient,0,c
  1581  007DBC                     l1163:
  1582  007DBC  90D8               	bcf	status,0,c
  1583  007DBE  3218               	rrcf	___awdiv@divisor+1,f,c
  1584  007DC0  3217               	rrcf	___awdiv@divisor,f,c
  1585  007DC2  2E19               	decfsz	___awdiv@counter,f,c
  1586  007DC4  D7ED               	goto	l1155
  1587  007DC6                     l1167:
  1588  007DC6  501A               	movf	___awdiv@sign,w,c
  1589  007DC8  B4D8               	btfsc	status,2,c
  1590  007DCA  D004               	goto	l1171
  1591  007DCC  6C1B               	negf	___awdiv@quotient,c
  1592  007DCE  1E1C               	comf	___awdiv@quotient+1,f,c
  1593  007DD0  B0D8               	btfsc	status,0,c
  1594  007DD2  2A1C               	incf	___awdiv@quotient+1,f,c
  1595  007DD4                     l1171:
  1596  007DD4  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  1597  007DD8  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  1598  007DDC  0012               	return	
  1599  007DDE                     __end_of___awdiv:
  1600                           	opt stack 0
  1601                           tblptru	equ	0xFF8
  1602                           tblptrh	equ	0xFF7
  1603                           tblptrl	equ	0xFF6
  1604                           tablat	equ	0xFF5
  1605                           prodl	equ	0xFF3
  1606                           intcon	equ	0xFF2
  1607                           intcon2	equ	0xFF1
  1608                           postinc0	equ	0xFEE
  1609                           wreg	equ	0xFE8
  1610                           postdec1	equ	0xFE5
  1611                           fsr1l	equ	0xFE1
  1612                           status	equ	0xFD8
  1613                           
  1614 ;; *************** function _Send_4Disp *****************
  1615 ;; Defined at:
  1616 ;;		line 74 in file "Lemos.C"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  Umil            1    wreg     unsigned char 
  1619 ;;  Cent            1   16[COMRAM] unsigned char 
  1620 ;;  Dec             1   17[COMRAM] unsigned char 
  1621 ;;  Uni             1   18[COMRAM] unsigned char 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  Umil            1   19[COMRAM] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;		None               void
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1633 ;;      Params:         3       0       0       0       0       0       0       0       0
  1634 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1636 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1637 ;;Total ram usage:        4 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    3
  1640 ;; This function calls:
  1641 ;;		_Send_Disp
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text10
  1648  007C2A                     __ptext10:
  1649                           	opt stack 0
  1650  007C2A                     _Send_4Disp:
  1651                           	opt stack 27
  1652                           
  1653                           ;incstack = 0
  1654                           ;Send_4Disp@Umil stored from wreg
  1655  007C2A  6E14               	movwf	Send_4Disp@Umil,c
  1656                           
  1657                           ;Lemos.C: 76: static unsigned char Nro_Disp=1;
  1658                           ;Lemos.C: 78: switch(Nro_Disp){
  1659  007C2C  D02F               	goto	l1109
  1660  007C2E                     l224:
  1661                           
  1662                           ;Lemos.C: 80: if(!mux_tout){
  1663  007C2E  6631               	tstfsz	_mux_tout,c
  1664  007C30  D03B               	goto	l234
  1665                           
  1666                           ;Lemos.C: 81: Send_Disp(1,Umil);
  1667  007C32  C014  F00F         	movff	Send_4Disp@Umil,Send_Disp@Dato
  1668  007C36  0E01               	movlw	1
  1669  007C38  ECB4  F03D         	call	_Send_Disp
  1670                           
  1671                           ;Lemos.C: 82: mux_tout = 4;;
  1672  007C3C  0E04               	movlw	4
  1673  007C3E  6E31               	movwf	_mux_tout,c
  1674                           
  1675                           ;Lemos.C: 83: Nro_Disp = 2;
  1676  007C40  0E02               	movlw	2
  1677  007C42  D01E               	goto	L6
  1678  007C44                     l227:
  1679                           
  1680                           ;Lemos.C: 88: if(!mux_tout){
  1681  007C44  6631               	tstfsz	_mux_tout,c
  1682  007C46  D030               	goto	l234
  1683                           
  1684                           ;Lemos.C: 89: Send_Disp(2,Cent);
  1685  007C48  C011  F00F         	movff	Send_4Disp@Cent,Send_Disp@Dato
  1686  007C4C  0E02               	movlw	2
  1687  007C4E  ECB4  F03D         	call	_Send_Disp
  1688                           
  1689                           ;Lemos.C: 90: mux_tout = 4;;
  1690  007C52  0E04               	movlw	4
  1691  007C54  6E31               	movwf	_mux_tout,c
  1692                           
  1693                           ;Lemos.C: 91: Nro_Disp = 3;
  1694  007C56  0E03               	movlw	3
  1695  007C58  D013               	goto	L6
  1696  007C5A                     l229:
  1697                           
  1698                           ;Lemos.C: 96: if(!mux_tout){
  1699  007C5A  6631               	tstfsz	_mux_tout,c
  1700  007C5C  D025               	goto	l234
  1701                           
  1702                           ;Lemos.C: 97: Send_Disp(3,Dec);
  1703  007C5E  C012  F00F         	movff	Send_4Disp@Dec,Send_Disp@Dato
  1704  007C62  0E03               	movlw	3
  1705  007C64  ECB4  F03D         	call	_Send_Disp
  1706                           
  1707                           ;Lemos.C: 98: mux_tout = 4;;
  1708  007C68  0E04               	movlw	4
  1709  007C6A  6E31               	movwf	_mux_tout,c
  1710                           
  1711                           ;Lemos.C: 99: Nro_Disp = 4;
  1712  007C6C  0E04               	movlw	4
  1713  007C6E  D008               	goto	L6
  1714  007C70                     l231:
  1715                           
  1716                           ;Lemos.C: 104: if(!mux_tout){
  1717  007C70  6631               	tstfsz	_mux_tout,c
  1718  007C72  D01A               	goto	l234
  1719                           
  1720                           ;Lemos.C: 105: Send_Disp(4,Uni);
  1721  007C74  C013  F00F         	movff	Send_4Disp@Uni,Send_Disp@Dato
  1722  007C78  0E04               	movlw	4
  1723  007C7A  ECB4  F03D         	call	_Send_Disp
  1724  007C7E  D002               	goto	l1107
  1725  007C80                     L6:
  1726  007C80  6E35               	movwf	Send_4Disp@Nro_Disp,c
  1727  007C82  D012               	goto	l234
  1728  007C84                     l1107:
  1729                           
  1730                           ;Lemos.C: 112: mux_tout = 4;;
  1731  007C84  0E04               	movlw	4
  1732  007C86  6E31               	movwf	_mux_tout,c
  1733                           
  1734                           ;Lemos.C: 113: Nro_Disp = 1;
  1735  007C88  0E01               	movlw	1
  1736  007C8A  D7FA               	goto	L6
  1737  007C8C                     l1109:
  1738  007C8C  5035               	movf	Send_4Disp@Nro_Disp,w,c
  1739                           
  1740                           ; Switch size 1, requested type "space"
  1741                           ; Number of cases is 4, Range of values is 1 to 4
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte           13     7 (average)
  1745                           ;	Chosen strategy is simple_byte
  1746  007C8E  0A01               	xorlw	1	; case 1
  1747  007C90  B4D8               	btfsc	status,2,c
  1748  007C92  D7CD               	goto	l224
  1749  007C94  0A03               	xorlw	3	; case 2
  1750  007C96  B4D8               	btfsc	status,2,c
  1751  007C98  D7D5               	goto	l227
  1752  007C9A  0A01               	xorlw	1	; case 3
  1753  007C9C  B4D8               	btfsc	status,2,c
  1754  007C9E  D7DD               	goto	l229
  1755  007CA0  0A07               	xorlw	7	; case 4
  1756  007CA2  B4D8               	btfsc	status,2,c
  1757  007CA4  D7E5               	goto	l231
  1758  007CA6  D7EE               	goto	l1107
  1759  007CA8                     l234:
  1760  007CA8  0012               	return	
  1761  007CAA                     __end_of_Send_4Disp:
  1762                           	opt stack 0
  1763                           tblptru	equ	0xFF8
  1764                           tblptrh	equ	0xFF7
  1765                           tblptrl	equ	0xFF6
  1766                           tablat	equ	0xFF5
  1767                           prodl	equ	0xFF3
  1768                           intcon	equ	0xFF2
  1769                           intcon2	equ	0xFF1
  1770                           postinc0	equ	0xFEE
  1771                           wreg	equ	0xFE8
  1772                           postdec1	equ	0xFE5
  1773                           fsr1l	equ	0xFE1
  1774                           status	equ	0xFD8
  1775                           
  1776 ;; *************** function _Send_Disp *****************
  1777 ;; Defined at:
  1778 ;;		line 43 in file "Lemos.C"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  NroDisp         1    wreg     unsigned char 
  1781 ;;  Dato            1   14[COMRAM] unsigned char 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  NroDisp         1   15[COMRAM] unsigned char 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;		None               void
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1793 ;;      Params:         1       0       0       0       0       0       0       0       0
  1794 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1796 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1797 ;;Total ram usage:        2 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    2
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_Send_4Disp
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text11
  1808  007B68                     __ptext11:
  1809                           	opt stack 0
  1810  007B68                     _Send_Disp:
  1811                           	opt stack 27
  1812                           
  1813                           ;incstack = 0
  1814                           ;Send_Disp@NroDisp stored from wreg
  1815  007B68  6E10               	movwf	Send_Disp@NroDisp,c
  1816                           
  1817                           ;Lemos.C: 45: LATA = 0;
  1818  007B6A  0E00               	movlw	0
  1819  007B6C  6E89               	movwf	3977,c	;volatile
  1820                           
  1821                           ;Lemos.C: 47: LATAbits.LA4 = 0;
  1822  007B6E  9889               	bcf	3977,4,c	;volatile
  1823                           
  1824                           ;Lemos.C: 48: LATAbits.LA5 = 0;
  1825  007B70  9A89               	bcf	3977,5,c	;volatile
  1826                           
  1827                           ;Lemos.C: 49: LATEbits.LATE0 = 0;
  1828  007B72  908D               	bcf	3981,0,c	;volatile
  1829                           
  1830                           ;Lemos.C: 50: LATEbits.LATE1 = 0;
  1831  007B74  928D               	bcf	3981,1,c	;volatile
  1832                           
  1833                           ;Lemos.C: 52: switch(NroDisp){
  1834  007B76  D008               	goto	l975
  1835  007B78                     l214:
  1836                           
  1837                           ;Lemos.C: 57: LATAbits.LA5 = 1;
  1838  007B78  8A89               	bsf	3977,5,c	;volatile
  1839                           
  1840                           ;Lemos.C: 58: }break;
  1841  007B7A  D014               	goto	l977
  1842  007B7C                     l215:
  1843                           
  1844                           ;Lemos.C: 60: LATEbits.LATE0 = 1;
  1845  007B7C  808D               	bsf	3981,0,c	;volatile
  1846                           
  1847                           ;Lemos.C: 61: }break;
  1848  007B7E  D012               	goto	l977
  1849  007B80                     l216:
  1850                           
  1851                           ;Lemos.C: 63: LATEbits.LATE1 = 1;
  1852  007B80  828D               	bsf	3981,1,c	;volatile
  1853                           
  1854                           ;Lemos.C: 64: }break;
  1855  007B82  D010               	goto	l977
  1856  007B84                     l217:
  1857                           
  1858                           ;Lemos.C: 66: LATAbits.LA4 = 1;
  1859  007B84  8889               	bsf	3977,4,c	;volatile
  1860                           
  1861                           ;Lemos.C: 67: }break;
  1862  007B86  D00E               	goto	l977
  1863  007B88                     l975:
  1864  007B88  5010               	movf	Send_Disp@NroDisp,w,c
  1865                           
  1866                           ; Switch size 1, requested type "space"
  1867                           ; Number of cases is 4, Range of values is 1 to 4
  1868                           ; switch strategies available:
  1869                           ; Name         Instructions Cycles
  1870                           ; simple_byte           13     7 (average)
  1871                           ;	Chosen strategy is simple_byte
  1872  007B8A  0A01               	xorlw	1	; case 1
  1873  007B8C  B4D8               	btfsc	status,2,c
  1874  007B8E  D7FA               	goto	l217
  1875  007B90  0A03               	xorlw	3	; case 2
  1876  007B92  B4D8               	btfsc	status,2,c
  1877  007B94  D7F1               	goto	l214
  1878  007B96  0A01               	xorlw	1	; case 3
  1879  007B98  B4D8               	btfsc	status,2,c
  1880  007B9A  D7F0               	goto	l215
  1881  007B9C  0A07               	xorlw	7	; case 4
  1882  007B9E  B4D8               	btfsc	status,2,c
  1883  007BA0  D7EF               	goto	l216
  1884  007BA2  D7F0               	goto	l217
  1885  007BA4                     l977:
  1886                           
  1887                           ;Lemos.C: 69: Dato = Dato & 0x0F;
  1888  007BA4  500F               	movf	Send_Disp@Dato,w,c
  1889  007BA6  0B0F               	andlw	15
  1890  007BA8  6E0F               	movwf	Send_Disp@Dato,c
  1891                           
  1892                           ;Lemos.C: 70: LATA = LATA & 0xF0;
  1893  007BAA  5089               	movf	3977,w,c	;volatile
  1894  007BAC  0BF0               	andlw	240
  1895  007BAE  6E89               	movwf	3977,c	;volatile
  1896                           
  1897                           ;Lemos.C: 71: LATA = LATA | Dato;
  1898  007BB0  5089               	movf	3977,w,c	;volatile
  1899  007BB2  100F               	iorwf	Send_Disp@Dato,w,c
  1900  007BB4  6E89               	movwf	3977,c	;volatile
  1901  007BB6  0012               	return	
  1902  007BB8                     __end_of_Send_Disp:
  1903                           	opt stack 0
  1904                           tblptru	equ	0xFF8
  1905                           tblptrh	equ	0xFF7
  1906                           tblptrl	equ	0xFF6
  1907                           tablat	equ	0xFF5
  1908                           prodl	equ	0xFF3
  1909                           intcon	equ	0xFF2
  1910                           intcon2	equ	0xFF1
  1911                           postinc0	equ	0xFEE
  1912                           wreg	equ	0xFE8
  1913                           postdec1	equ	0xFE5
  1914                           fsr1l	equ	0xFE1
  1915                           status	equ	0xFD8
  1916                           
  1917 ;; *************** function _myISR *****************
  1918 ;; Defined at:
  1919 ;;		line 117 in file "main.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;		None               void
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0, prodl, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1933 ;;      Params:         0       0       0       0       0       0       0       0       0
  1934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1935 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1936 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1937 ;;Total ram usage:       14 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    1
  1940 ;; This function calls:
  1941 ;;		_LCD_tic
  1942 ;;		_RAMPA_tic
  1943 ;;		_tic_timer0
  1944 ;; This function is called by:
  1945 ;;		Interrupt level 2
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	intcode
  1950  002008                     __pintcode:
  1951                           	opt stack 0
  1952  002008                     _myISR:
  1953                           	opt stack 27
  1954                           
  1955                           ;incstack = 0
  1956  002008  CFFA F001          	movff	pclath,??_myISR
  1957  00200C  CFFB F002          	movff	pclatu,??_myISR+1
  1958  002010  CFE9 F003          	movff	fsr0l,??_myISR+2
  1959  002014  EDEF  F03E         	call	int_func,f	;refresh shadow registers
  1960                           pclatu	equ	0xFFB
  1961                           pclath	equ	0xFFA
  1962                           tblptru	equ	0xFF8
  1963                           tblptrh	equ	0xFF7
  1964                           tblptrl	equ	0xFF6
  1965                           tablat	equ	0xFF5
  1966                           prodl	equ	0xFF3
  1967                           intcon	equ	0xFF2
  1968                           intcon2	equ	0xFF1
  1969                           postinc0	equ	0xFEE
  1970                           fsr0l	equ	0xFE9
  1971                           wreg	equ	0xFE8
  1972                           postdec1	equ	0xFE5
  1973                           fsr1l	equ	0xFE1
  1974                           status	equ	0xFD8
  1975                           
  1976                           	psect	intcode_body
  1977  007DDE                     __pintcode_body:
  1978                           	opt stack 27
  1979  007DDE                     int_func:
  1980                           	opt stack 27
  1981  007DDE  0006               	pop		; remove dummy address from shadow register refresh
  1982  007DE0  CFEA F004          	movff	fsr0h,??_myISR+3
  1983  007DE4  CFE1 F005          	movff	fsr1l,??_myISR+4
  1984  007DE8  CFE2 F006          	movff	fsr1h,??_myISR+5
  1985  007DEC  CFD9 F007          	movff	fsr2l,??_myISR+6
  1986  007DF0  CFDA F008          	movff	fsr2h,??_myISR+7
  1987  007DF4  CFF3 F009          	movff	prodl,??_myISR+8
  1988  007DF8  CFF4 F00A          	movff	prodh,??_myISR+9
  1989  007DFC  CFF6 F00B          	movff	tblptrl,??_myISR+10
  1990  007E00  CFF7 F00C          	movff	tblptrh,??_myISR+11
  1991  007E04  CFF8 F00D          	movff	tblptru,??_myISR+12
  1992  007E08  CFF5 F00E          	movff	tablat,??_myISR+13
  1993                           
  1994                           ;main.c: 126: if(TMR0IF){
  1995  007E0C  A4F2               	btfss	intcon,2,c	;volatile
  1996  007E0E  D00C               	goto	i2l1281
  1997                           
  1998                           ;main.c: 127: INTCONbits.TMR0IF = 0;
  1999  007E10  94F2               	bcf	intcon,2,c	;volatile
  2000                           
  2001                           ;main.c: 128: TMR0L = 209;
  2002  007E12  0ED1               	movlw	209
  2003  007E14  6ED6               	movwf	4054,c	;volatile
  2004                           
  2005                           ;main.c: 129: TMR0H = 0xFF;
  2006  007E16  68D7               	setf	4055,c	;volatile
  2007                           
  2008                           ;main.c: 131: tic_timer0();
  2009  007E18  EC5F  F03D         	call	_tic_timer0	;wreg free
  2010                           
  2011                           ;main.c: 134: LCD_tic();
  2012  007E1C  EC34  F03D         	call	_LCD_tic	;wreg free
  2013                           
  2014                           ;main.c: 137: if(rampa_status) RAMPA_tic();
  2015  007E20  5037               	movf	_rampa_status,w,c
  2016  007E22  A4D8               	btfss	status,2,c
  2017  007E24  EC45  F03D         	call	_RAMPA_tic	;wreg free
  2018  007E28                     i2l1281:
  2019                           
  2020                           ;main.c: 140: }
  2021                           ;main.c: 150: if(TMR1IF){
  2022  007E28  A09E               	btfss	3998,0,c	;volatile
  2023  007E2A  D005               	goto	i2l1291
  2024                           
  2025                           ;main.c: 151: PIR1bits.TMR1IF = 0;
  2026  007E2C  909E               	bcf	3998,0,c	;volatile
  2027                           
  2028                           ;main.c: 152: TMR1L=144;
  2029  007E2E  0E90               	movlw	144
  2030  007E30  6ECE               	movwf	4046,c	;volatile
  2031                           
  2032                           ;main.c: 153: TMR1H=0xFF;
  2033  007E32  68CF               	setf	4047,c	;volatile
  2034                           
  2035                           ;main.c: 154: LATBbits.LATB7 =~ LATBbits.LATB7;
  2036  007E34  7E8A               	btg	3978,7,c	;volatile
  2037  007E36                     i2l1291:
  2038                           
  2039                           ;main.c: 155: }
  2040                           ;main.c: 156: if(RCIF){
  2041  007E36  AA9E               	btfss	3998,5,c	;volatile
  2042  007E38  D004               	goto	i2l1297
  2043                           
  2044                           ;main.c: 157: RCIF=0;
  2045  007E3A  9A9E               	bcf	3998,5,c	;volatile
  2046                           
  2047                           ;main.c: 158: caracter=RCREG;
  2048  007E3C  CFAE F030          	movff	4014,_caracter	;volatile
  2049                           
  2050                           ;main.c: 159: (void) RCREG;
  2051  007E40  50AE               	movf	4014,w,c	;volatile
  2052  007E42                     i2l1297:
  2053                           
  2054                           ;main.c: 160: }
  2055                           ;main.c: 161: if(INT0IF){
  2056  007E42  A2F2               	btfss	intcon,1,c	;volatile
  2057  007E44  D004               	goto	i2l94
  2058                           
  2059                           ;main.c: 162: rampa_status=0;
  2060  007E46  0E00               	movlw	0
  2061  007E48  6E37               	movwf	_rampa_status,c
  2062                           
  2063                           ;main.c: 163: INTCONbits.INT0IE=0;
  2064  007E4A  98F2               	bcf	intcon,4,c	;volatile
  2065                           
  2066                           ;main.c: 164: INTCONbits.INT0IF=0;
  2067  007E4C  92F2               	bcf	intcon,1,c	;volatile
  2068  007E4E                     i2l94:
  2069  007E4E  C00E  FFF5         	movff	??_myISR+13,tablat
  2070  007E52  C00D  FFF8         	movff	??_myISR+12,tblptru
  2071  007E56  C00C  FFF7         	movff	??_myISR+11,tblptrh
  2072  007E5A  C00B  FFF6         	movff	??_myISR+10,tblptrl
  2073  007E5E  C00A  FFF4         	movff	??_myISR+9,prodh
  2074  007E62  C009  FFF3         	movff	??_myISR+8,prodl
  2075  007E66  C008  FFDA         	movff	??_myISR+7,fsr2h
  2076  007E6A  C007  FFD9         	movff	??_myISR+6,fsr2l
  2077  007E6E  C006  FFE2         	movff	??_myISR+5,fsr1h
  2078  007E72  C005  FFE1         	movff	??_myISR+4,fsr1l
  2079  007E76  C004  FFEA         	movff	??_myISR+3,fsr0h
  2080  007E7A  C003  FFE9         	movff	??_myISR+2,fsr0l
  2081  007E7E  C002  FFFB         	movff	??_myISR+1,pclatu
  2082  007E82  C001  FFFA         	movff	??_myISR,pclath
  2083  007E86  0011               	retfie		f
  2084  007E88                     __end_of_myISR:
  2085                           	opt stack 0
  2086                           pclatu	equ	0xFFB
  2087                           pclath	equ	0xFFA
  2088                           tblptru	equ	0xFF8
  2089                           tblptrh	equ	0xFF7
  2090                           tblptrl	equ	0xFF6
  2091                           tablat	equ	0xFF5
  2092                           prodh	equ	0xFF4
  2093                           prodl	equ	0xFF3
  2094                           intcon	equ	0xFF2
  2095                           intcon2	equ	0xFF1
  2096                           postinc0	equ	0xFEE
  2097                           fsr0h	equ	0xFEA
  2098                           fsr0l	equ	0xFE9
  2099                           wreg	equ	0xFE8
  2100                           postdec1	equ	0xFE5
  2101                           fsr1h	equ	0xFE2
  2102                           fsr1l	equ	0xFE1
  2103                           fsr2h	equ	0xFDA
  2104                           fsr2l	equ	0xFD9
  2105                           status	equ	0xFD8
  2106                           
  2107 ;; *************** function _tic_timer0 *****************
  2108 ;; Defined at:
  2109 ;;		line 117 in file "Lemos.C"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;		None               void
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2123 ;;      Params:         0       0       0       0       0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2126 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_myISR
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text13
  2137  007ABE                     __ptext13:
  2138                           	opt stack 0
  2139  007ABE                     _tic_timer0:
  2140                           	opt stack 27
  2141                           
  2142                           ;Lemos.C: 118: if(mux_tout)mux_tout--;
  2143                           
  2144                           ;incstack = 0
  2145  007ABE  5031               	movf	_mux_tout,w,c
  2146  007AC0  A4D8               	btfss	status,2,c
  2147  007AC2  0631               	decf	_mux_tout,f,c
  2148                           
  2149                           ;Lemos.C: 119: if(bot_tout)bot_tout--;
  2150  007AC4  502F               	movf	_bot_tout,w,c
  2151  007AC6  A4D8               	btfss	status,2,c
  2152  007AC8  062F               	decf	_bot_tout,f,c
  2153                           
  2154                           ;Lemos.C: 120: if(led_tout)led_tout--;
  2155  007ACA  5028               	movf	_led_tout+1,w,c
  2156  007ACC  1027               	iorwf	_led_tout,w,c
  2157  007ACE  B4D8               	btfsc	status,2,c
  2158  007AD0  D003               	goto	i2l240
  2159  007AD2  0627               	decf	_led_tout,f,c
  2160  007AD4  A0D8               	btfss	status,0,c
  2161  007AD6  0628               	decf	_led_tout+1,f,c
  2162  007AD8                     i2l240:
  2163  007AD8  0012               	return	
  2164  007ADA                     __end_of_tic_timer0:
  2165                           	opt stack 0
  2166                           pclatu	equ	0xFFB
  2167                           pclath	equ	0xFFA
  2168                           tblptru	equ	0xFF8
  2169                           tblptrh	equ	0xFF7
  2170                           tblptrl	equ	0xFF6
  2171                           tablat	equ	0xFF5
  2172                           prodh	equ	0xFF4
  2173                           prodl	equ	0xFF3
  2174                           intcon	equ	0xFF2
  2175                           intcon2	equ	0xFF1
  2176                           postinc0	equ	0xFEE
  2177                           fsr0h	equ	0xFEA
  2178                           fsr0l	equ	0xFE9
  2179                           wreg	equ	0xFE8
  2180                           postdec1	equ	0xFE5
  2181                           fsr1h	equ	0xFE2
  2182                           fsr1l	equ	0xFE1
  2183                           fsr2h	equ	0xFDA
  2184                           fsr2l	equ	0xFD9
  2185                           status	equ	0xFD8
  2186                           
  2187 ;; *************** function _RAMPA_tic *****************
  2188 ;; Defined at:
  2189 ;;		line 10 in file "rampa.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;		None               void
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0, prodl
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2203 ;;      Params:         0       0       0       0       0       0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2206 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2207 ;;Total ram usage:        0 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_myISR
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text14
  2217  007A8A                     __ptext14:
  2218                           	opt stack 0
  2219  007A8A                     _RAMPA_tic:
  2220                           	opt stack 27
  2221                           
  2222                           ;rampa.c: 11: if(tiempo_rampa<9999)tiempo_rampa++;
  2223                           
  2224                           ;incstack = 0
  2225  007A8A  502A               	movf	_tiempo_rampa+1,w,c
  2226  007A8C  0A80               	xorlw	128
  2227  007A8E  6EF3               	movwf	prodl,c
  2228  007A90  0EA7               	movlw	167
  2229  007A92  5CF3               	subwf	prodl,w,c
  2230  007A94  0E0F               	movlw	15
  2231  007A96  B4D8               	btfsc	status,2,c
  2232  007A98  5C29               	subwf	_tiempo_rampa,w,c
  2233  007A9A  B0D8               	btfsc	status,0,c
  2234  007A9C  D002               	goto	i2l286
  2235  007A9E  4A29               	infsnz	_tiempo_rampa,f,c
  2236  007AA0  2A2A               	incf	_tiempo_rampa+1,f,c
  2237  007AA2                     i2l286:
  2238  007AA2  0012               	return	
  2239  007AA4                     __end_of_RAMPA_tic:
  2240                           	opt stack 0
  2241                           pclatu	equ	0xFFB
  2242                           pclath	equ	0xFFA
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           prodh	equ	0xFF4
  2248                           prodl	equ	0xFF3
  2249                           intcon	equ	0xFF2
  2250                           intcon2	equ	0xFF1
  2251                           postinc0	equ	0xFEE
  2252                           fsr0h	equ	0xFEA
  2253                           fsr0l	equ	0xFE9
  2254                           wreg	equ	0xFE8
  2255                           postdec1	equ	0xFE5
  2256                           fsr1h	equ	0xFE2
  2257                           fsr1l	equ	0xFE1
  2258                           fsr2h	equ	0xFDA
  2259                           fsr2l	equ	0xFD9
  2260                           status	equ	0xFD8
  2261                           
  2262 ;; *************** function _LCD_tic *****************
  2263 ;; Defined at:
  2264 ;;		line 149 in file "lcd.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;		None
  2269 ;; Return value:  Size  Location     Type
  2270 ;;		None               void
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2278 ;;      Params:         0       0       0       0       0       0       0       0       0
  2279 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2281 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2282 ;;Total ram usage:        0 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_myISR
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text15
  2292  007A68                     __ptext15:
  2293                           	opt stack 0
  2294  007A68                     _LCD_tic:
  2295                           	opt stack 27
  2296                           
  2297                           ;lcd.c: 150: if (LCD_tout) LCD_tout--;
  2298                           
  2299                           ;incstack = 0
  2300  007A68  5026               	movf	_LCD_tout+1,w,c
  2301  007A6A  1025               	iorwf	_LCD_tout,w,c
  2302  007A6C  B4D8               	btfsc	status,2,c
  2303  007A6E  D003               	goto	i2l387
  2304  007A70  0625               	decf	_LCD_tout,f,c
  2305  007A72  A0D8               	btfss	status,0,c
  2306  007A74  0626               	decf	_LCD_tout+1,f,c
  2307  007A76                     i2l387:
  2308  007A76  0012               	return	
  2309  007A78                     __end_of_LCD_tic:
  2310                           	opt stack 0
  2311                           pclatu	equ	0xFFB
  2312                           pclath	equ	0xFFA
  2313                           tblptru	equ	0xFF8
  2314                           tblptrh	equ	0xFF7
  2315                           tblptrl	equ	0xFF6
  2316                           tablat	equ	0xFF5
  2317                           prodh	equ	0xFF4
  2318                           prodl	equ	0xFF3
  2319                           intcon	equ	0xFF2
  2320                           intcon2	equ	0xFF1
  2321                           postinc0	equ	0xFEE
  2322                           fsr0h	equ	0xFEA
  2323                           fsr0l	equ	0xFE9
  2324                           wreg	equ	0xFE8
  2325                           postdec1	equ	0xFE5
  2326                           fsr1h	equ	0xFE2
  2327                           fsr1l	equ	0xFE1
  2328                           fsr2h	equ	0xFDA
  2329                           fsr2l	equ	0xFD9
  2330                           status	equ	0xFD8
  2331                           pclatu	equ	0xFFB
  2332                           pclath	equ	0xFFA
  2333                           tblptru	equ	0xFF8
  2334                           tblptrh	equ	0xFF7
  2335                           tblptrl	equ	0xFF6
  2336                           tablat	equ	0xFF5
  2337                           prodh	equ	0xFF4
  2338                           prodl	equ	0xFF3
  2339                           intcon	equ	0xFF2
  2340                           intcon2	equ	0xFF1
  2341                           postinc0	equ	0xFEE
  2342                           fsr0h	equ	0xFEA
  2343                           fsr0l	equ	0xFE9
  2344                           wreg	equ	0xFE8
  2345                           postdec1	equ	0xFE5
  2346                           fsr1h	equ	0xFE2
  2347                           fsr1l	equ	0xFE1
  2348                           fsr2h	equ	0xFDA
  2349                           fsr2l	equ	0xFD9
  2350                           status	equ	0xFD8
  2351                           
  2352                           	psect	rparam
  2353  0000                     pclatu	equ	0xFFB
  2354                           pclath	equ	0xFFA
  2355                           tblptru	equ	0xFF8
  2356                           tblptrh	equ	0xFF7
  2357                           tblptrl	equ	0xFF6
  2358                           tablat	equ	0xFF5
  2359                           prodh	equ	0xFF4
  2360                           prodl	equ	0xFF3
  2361                           intcon	equ	0xFF2
  2362                           intcon2	equ	0xFF1
  2363                           postinc0	equ	0xFEE
  2364                           fsr0h	equ	0xFEA
  2365                           fsr0l	equ	0xFE9
  2366                           wreg	equ	0xFE8
  2367                           postdec1	equ	0xFE5
  2368                           fsr1h	equ	0xFE2
  2369                           fsr1l	equ	0xFE1
  2370                           fsr2h	equ	0xFDA
  2371                           fsr2l	equ	0xFD9
  2372                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1
    Data        4
    BSS         16
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      57
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv
    ___awdiv->___awmod
    _Send_4Disp->_Send_Disp

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1513
                                             28 COMRAM     8     8      0
                         _Send_4Disp
                            ___awdiv
                            ___awmod
                          _assign_id
                             _decode
                           _informar
                          _pic_ini13
                       _timer1_ini13
                        _timer_ini13
                        _usart_ini13
 ---------------------------------------------------------------------------------
 (1) _usart_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer1_ini13                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pic_ini13                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _informar                                             4     1      3     102
                                             14 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _decode                                               2     2      0      90
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _assign_id                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     399
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     399
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Send_4Disp                                           4     1      3     343
                                             16 COMRAM     4     1      3
                          _Send_Disp
 ---------------------------------------------------------------------------------
 (2) _Send_Disp                                            2     1      1     181
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                               14    14      0       0
                                              0 COMRAM    14    14      0
                            _LCD_tic
                          _RAMPA_tic
                         _tic_timer0
 ---------------------------------------------------------------------------------
 (4) _tic_timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RAMPA_tic                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LCD_tic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_4Disp
     _Send_Disp
   ___awdiv
     ___awmod (ARG)
   ___awmod
   _assign_id
   _decode
   _informar
   _pic_ini13
   _timer1_ini13
   _timer_ini13
   _usart_ini13

 _myISR (ROOT)
   _LCD_tic
   _RAMPA_tic
   _tic_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      39       1       60.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      20        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun May 31 17:38:01 2015

                     l80 7EF4                       l82 7F10                       l78 7EDC  
                     l79 7EEA             ___awdiv@sign 001A              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
                    l214 7B78                      l215 7B7C                      l231 7C70  
                    l216 7B80                      l224 7C2E                      l217 7B84  
                    l234 7CA8                      l227 7C44                      l229 7C5A  
       main@backup_rampa 001D                      _DEC 002C                      l975 7B88  
                    l977 7BA4             __CFG_CPB$OFF 000000                      _PR2 000FCB  
                    u285 7F58                      _UNI 002E             ___awmod@sign 0014  
                    wreg 000FE8            Send_Disp@Dato 000F             __CFG_LVP$OFF 000000  
        __end_of_LCD_tic 7A78             __CFG_WDT$OFF 000000                     l1041 7BBC  
                   l1107 7C84                     l1203 7D22                     l1109 7C8C  
                   l1151 7D94                     l1207 7D30                     l1153 7D9C  
                   l1145 7D7E                     l1057 7BE6                     l1049 7BCC  
                   l1233 7EC4                     l1171 7DD4                     l1163 7DBC  
                   l1155 7DA0                     l1139 7D5E                     l1067 7BFC  
                   l1075 7C12                     l1077 7C26                     l1237 7ED2  
                   l1167 7DC6                     l1191 7CF8                     l1183 7CCE  
                   l1239 7ED6                     l1193 7D00                     l1265 7FEC  
                   l1257 7F1E                     l1195 7D04                     l1187 7CEA  
                   l1259 7F4E                     l1199 7D18                     _CENT 002B  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     _RCIF 007CF5  
                   i2l94 7E4E                     _UMIL 002D                     _TRMT 007D61  
            _usart_ini13 7ADA                     _main 7E88                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 2018  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000       __size_of_RAMPA_tic 001A  
          __CFG_PLLDIV$5 000000              assign_id@id 000F                    ?_main 0001  
        __end_of___awdiv 7DDE          __end_of___awmod 7D3A                    _CMCON 000FB4  
        ___awdiv@divisor 0017                    i2l240 7AD8                    i2l286 7AA2  
                  i2l387 7A76          ___awdiv@counter 0019                    _RCREG 000FAE  
                  _TMR0H 000FD7                    _TMR1H 000FCF                    _TMR0L 000FD6  
                  _TMR1L 000FCE                    _SPBRG 000FAF            __CFG_USBDIV$2 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000           __CFG_EBTRB$OFF 000000                    _myISR 2008  
                  leds@i 0038                    tablat 000FF5                    status 000FD8  
        __initialization 7B32             __end_of_main 8000                   ??_main 001D  
          __activetblptr 000002                ??_LCD_tic 0001               _Send_4Disp 7C2A  
                 _ADCON1 000FC1                   ?_myISR 0001                   _CCPR1L 000FBE  
       ___awdiv@dividend 0015        __end_of_RAMPA_tic 7AA4                   _INT0IF 007F91  
                 _MEMDIG 0036                   i2l1281 7E28                   i2l1291 7E36  
                 i2l1297 7E42                   _TMR0IF 007F92                   _TMR1IF 007CF0  
                 _SPBRGH 000FB0           __CFG_VREGEN$ON 000000           __CFG_XINST$OFF 000000  
     __size_of_Send_Disp 0050                ??___awdiv 0019           __CFG_STVREN$ON 000000  
              ??___awmod 0013                   _decode 7BB8              informar@dec 000F  
            informar@mil 0011              informar@seg 0001         __end_of_informar 2006  
                 clear_0 7B38         ___awdiv@quotient 001B          ___awmod@divisor 0011  
        ___awmod@counter 0013     __end_of_broadcast_id 201E             __pdataCOMRAM 0035  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8             ?_timer_ini13 0001            decode@com_rec 0032  
          decode@est_rec 0033               __accesstop 0060  __end_of__initialization 7B5E  
        __CFG_PBADEN$OFF 000000         Send_Disp@NroDisp 0010            decode@retorno 000F  
         __pcstackCOMRAM 0001            __end_of_myISR 7E88       main@broadcast_flag 0020  
            ?_Send_4Disp 0011                  ??_myISR 0001        __end_of_Send_Disp 7BB8  
     __size_of_assign_id 0008             ?_usart_ini13 0001               __pnvCOMRAM 0039  
     __size_of_pic_ini13 0030                  ?_decode 0001       Send_4Disp@Nro_Disp 0035  
                _LCD_tic 7A68                ?_informar 000F                  __Hparam 0000  
                __Lparam 0000      __size_of_Send_4Disp 0080                  ___awdiv 7D3A  
                ___awmod 7CAA          __size_of_decode 0072        __end_of_assign_id 7A68  
           __psmallconst 201C                  __pcinit 7B32            ?_timer1_ini13 0001  
                __ramtop 0800                  __ptext0 7E88                  __ptext1 7ADA  
                __ptext2 7AA4                  __ptext3 7A78                  __ptext4 7B02  
                __ptext5 2004                  __ptext6 7BB8                  __ptext7 7A60  
                __ptext8 7CAA                  __ptext9 7D3A             informar@cent 0010  
              _T0CONbits 000FD5                _T1CONbits 000FCD                _T2CONbits 000FCA  
       ___awmod@dividend 000F        __end_of_pic_ini13 7B32      mux_display@contdisp 0034  
                main@dec 0022                  main@mil 0024                  main@seg 0021  
         __pintcode_body 7DDE     __size_of_timer_ini13 001A     end_of_initialization 7B5E  
             ??_informar 0012            __Lmediumconst 0000                  int_func 7DDE  
           _broadcast_id 201D                _RAMPA_tic 7A8A               _tic_timer0 7ABE  
              _RCSTAbits 000FAB                  postdec1 000FE5                  postinc0 000FEE  
         ??_timer1_ini13 000F                _PORTBbits 000F81                _TRISBbits 000F93  
              _TRISCbits 000F94               main@backup 001F              _CCP1CONbits 000FBD  
              _TXSTAbits 000FAC               ?_RAMPA_tic 0001     __size_of_usart_ini13 0028  
         __end_of_decode 7C2A              _BAUDCONbits 000FB8            __pidataCOMRAM 7A5C  
           ??_Send_4Disp 0014      start_initialization 7B32                _Send_Disp 7B68  
            ?_tic_timer0 0001       __end_of_Send_4Disp 7CAA                 ??_decode 000F  
       __CFG_LPT1OSC$OFF 000000             decode@buffer 0010                 ?_LCD_tic 0001  
            __pbssCOMRAM 0025     __end_of_timer1_ini13 7A8A               ?_Send_Disp 000F  
            ??_RAMPA_tic 0001        __size_of_informar 0002                __pintcode 2008  
               ?___awdiv 0015                 ?___awmod 000F                _assign_id 7A60  
            __smallconst 201C      __size_of_tic_timer0 001C           __size_of_myISR 5E80  
              _pic_ini13 7B02                 _LATAbits 000F89                 _LATBbits 000F8A  
               _LATCbits 000F8B                 _LATDbits 000F8C                 _LATEbits 000F8D  
               _LCD_tout 0025                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000             _rampa_status 0037               ?_assign_id 0001  
          ??_timer_ini13 000F         __size_of_LCD_tic 0010           Send_4Disp@Cent 0011  
         Send_4Disp@Umil 0014              _INTCON2bits 000FF1               ?_pic_ini13 0001  
              copy_data0 7B52              ??_Send_Disp 0010                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 00A4         __size_of___awmod 0090  
               _caracter 0030    __size_of_timer1_ini13 0012                 __ptext10 7C2A  
               __ptext11 7B68                 __ptext13 7ABE                 __ptext14 7A8A  
               __ptext15 7A68                 _bot_tout 002F            ??_usart_ini13 000F  
               _led_tout 0027      __end_of_timer_ini13 7ABE                 _informar 2004  
          __size_of_main 0178             ??_tic_timer0 0001                 _slave_id 0039  
               _mux_tout 0031                 main@cent 0023             _timer1_ini13 7A78  
          Send_4Disp@Dec 0012            Send_4Disp@Uni 0013    __CFG_CPUDIV$OSC1_PLL2 000000  
            ??_assign_id 000F               _INTCONbits 000FF2       __end_of_tic_timer0 7ADA  
            ??_pic_ini13 000F                 intlevel2 0000             _tiempo_rampa 0029  
    __end_of_usart_ini13 7B02              _timer_ini13 7AA4       __CFG_FOSC$HSPLL_HS 000000  
