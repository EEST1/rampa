

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat May 23 08:39:12 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           	psect	idataCOMRAM
    38  007992                     __pidataCOMRAM:
    39                           	opt stack 0
    40                           
    41                           ;initializer for Send_4Disp@Nro_Disp
    42  007992  01                 	db	1
    43                           
    44                           ;initializer for _MEMDIG
    45  007993  01                 	db	1
    46                           
    47                           ;initializer for _rampa_status
    48  007994  01                 	db	1
    49                           
    50                           ;initializer for leds@i
    51  007995  01                 	db	1
    52                           
    53                           	psect	smallconst
    54  00201C                     __psmallconst:
    55                           	opt stack 0
    56  00201C  00                 	db	0
    57  00201D                     _broadcast_id:
    58                           	opt stack 0
    59  00201D  AA                 	db	170
    60  00201E                     __end_of_broadcast_id:
    61                           	opt stack 0
    62  0000                     _ADCON1	set	4033
    63  0000                     _BAUDCONbits	set	4024
    64  0000                     _CCP1CONbits	set	4029
    65  0000                     _CCPR1L	set	4030
    66  0000                     _CMCON	set	4020
    67  0000                     _INTCONbits	set	4082
    68  0000                     _LATA	set	3977
    69  0000                     _LATAbits	set	3977
    70  0000                     _LATB	set	3978
    71  0000                     _LATBbits	set	3978
    72  0000                     _LATC	set	3979
    73  0000                     _LATCbits	set	3979
    74  0000                     _LATD	set	3980
    75  0000                     _LATDbits	set	3980
    76  0000                     _LATE	set	3981
    77  0000                     _LATEbits	set	3981
    78  0000                     _PIE1bits	set	3997
    79  0000                     _PORTBbits	set	3969
    80  0000                     _PR2	set	4043
    81  0000                     _RCREG	set	4014
    82  0000                     _RCSTAbits	set	4011
    83  0000                     _SPBRG	set	4015
    84  0000                     _SPBRGH	set	4016
    85  0000                     _T0CONbits	set	4053
    86  0000                     _T2CONbits	set	4042
    87  0000                     _TMR0H	set	4055
    88  0000                     _TMR0L	set	4054
    89  0000                     _TRISA	set	3986
    90  0000                     _TRISB	set	3987
    91  0000                     _TRISCbits	set	3988
    92  0000                     _TRISD	set	3989
    93  0000                     _TRISE	set	3990
    94  0000                     _TXSTAbits	set	4012
    95  0000                     _RCIF	set	31989
    96  0000                     _TMR0IF	set	32658
    97  00201E                     __stringdata:
    98                           	opt stack 0
    99  00201E                     STR_1:
   100  00201E  57                 	db	87	;'W'
   101  00201F  65                 	db	101	;'e'
   102  002020  6C                 	db	108	;'l'
   103  002021  63                 	db	99	;'c'
   104  002022  6F                 	db	111	;'o'
   105  002023  6D                 	db	109	;'m'
   106  002024  65                 	db	101	;'e'
   107  002025  00                 	db	0
   108  002026                     __end_of__stringdata:
   109                           	opt stack 0
   110                           
   111                           ; #config settings
   112  002026  00                 	db	0	; dummy byte at the end
   113  0000                     
   114                           	psect	nvCOMRAM
   115  000037                     __pnvCOMRAM:
   116                           	opt stack 0
   117  000037                     _LCD_tout:
   118                           	opt stack 0
   119  000037                     	ds	2
   120                           
   121                           	psect	cinit
   122  007AFC                     __pcinit:
   123                           	opt stack 0
   124  007AFC                     start_initialization:
   125                           	opt stack 0
   126  007AFC                     __initialization:
   127                           	opt stack 0
   128                           
   129                           ; Clear objects allocated to COMRAM (15 bytes)
   130  007AFC  EE00  F024         	lfsr	0,__pbssCOMRAM
   131  007B00  0E0F               	movlw	15
   132  007B02                     clear_0:
   133  007B02  6AEE               	clrf	postinc0,c
   134  007B04  06E8               	decf	wreg,f,c
   135  007B06  E1FD               	bnz	clear_0
   136                           
   137                           ; Initialize objects allocated to COMRAM (4 bytes)
   138                           ; load TBLPTR registers with __pidataCOMRAM
   139  007B08  0E92               	movlw	low __pidataCOMRAM
   140  007B0A  6EF6               	movwf	tblptrl,c
   141  007B0C  0E79               	movlw	high __pidataCOMRAM
   142  007B0E  6EF7               	movwf	tblptrh,c
   143  007B10  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   144  007B12  6EF8               	movwf	tblptru,c
   145  007B14  EE00  F033         	lfsr	0,__pdataCOMRAM
   146  007B18  EE10 F004          	lfsr	1,4
   147  007B1C                     copy_data0:
   148  007B1C  0009               	tblrd		*+
   149  007B1E  CFF5 FFEE          	movff	tablat,postinc0
   150  007B22  50E5               	movf	postdec1,w,c
   151  007B24  50E1               	movf	fsr1l,w,c
   152  007B26  E1FA               	bnz	copy_data0
   153  007B28                     end_of_initialization:
   154                           	opt stack 0
   155  007B28                     __end_of__initialization:
   156                           	opt stack 0
   157  007B28  0E00               	movlw	low (__Lmediumconst shr (0+16))
   158  007B2A  6EF8               	movwf	tblptru,c
   159  007B2C  0100               	movlb	0
   160  007B2E  EF58  F03F         	goto	_main	;jump to C main() function
   161                           tblptru	equ	0xFF8
   162                           tblptrh	equ	0xFF7
   163                           tblptrl	equ	0xFF6
   164                           tablat	equ	0xFF5
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           postdec1	equ	0xFE5
   168                           fsr1l	equ	0xFE1
   169                           
   170                           	psect	bssCOMRAM
   171  000024                     __pbssCOMRAM:
   172                           	opt stack 0
   173  000024                     _led_tout:
   174                           	opt stack 0
   175  000024                     	ds	2
   176  000026                     _tiempo_rampa:
   177                           	opt stack 0
   178  000026                     	ds	2
   179  000028                     _CENT:
   180                           	opt stack 0
   181  000028                     	ds	1
   182  000029                     _DEC:
   183                           	opt stack 0
   184  000029                     	ds	1
   185  00002A                     _UMIL:
   186                           	opt stack 0
   187  00002A                     	ds	1
   188  00002B                     _UNI:
   189                           	opt stack 0
   190  00002B                     	ds	1
   191  00002C                     _bot_tout:
   192                           	opt stack 0
   193  00002C                     	ds	1
   194  00002D                     _caracter:
   195                           	opt stack 0
   196  00002D                     	ds	1
   197  00002E                     _mux_tout:
   198                           	opt stack 0
   199  00002E                     	ds	1
   200  00002F                     _slave_id:
   201                           	opt stack 0
   202  00002F                     	ds	1
   203  000030                     decode@com_rec:
   204                           	opt stack 0
   205  000030                     	ds	1
   206  000031                     decode@est_rec:
   207                           	opt stack 0
   208  000031                     	ds	1
   209  000032                     mux_display@contdisp:
   210                           	opt stack 0
   211  000032                     	ds	1
   212                           tblptru	equ	0xFF8
   213                           tblptrh	equ	0xFF7
   214                           tblptrl	equ	0xFF6
   215                           tablat	equ	0xFF5
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           postdec1	equ	0xFE5
   219                           fsr1l	equ	0xFE1
   220                           
   221                           	psect	dataCOMRAM
   222  000033                     __pdataCOMRAM:
   223                           	opt stack 0
   224  000033                     Send_4Disp@Nro_Disp:
   225                           	opt stack 0
   226  000033                     	ds	1
   227  000034                     _MEMDIG:
   228                           	opt stack 0
   229  000034                     	ds	1
   230  000035                     _rampa_status:
   231                           	opt stack 0
   232  000035                     	ds	1
   233  000036                     leds@i:
   234                           	opt stack 0
   235  000036                     	ds	1
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           postdec1	equ	0xFE5
   243                           fsr1l	equ	0xFE1
   244                           
   245                           	psect	cstackCOMRAM
   246  000001                     __pcstackCOMRAM:
   247                           	opt stack 0
   248  000001                     ??_myISR:
   249  000001                     
   250                           ; 1 bytes @ 0x0
   251  000001                     	ds	14
   252  00000F                     ?___awmod:
   253                           	opt stack 0
   254  00000F                     Send_Disp@Dato:
   255                           	opt stack 0
   256  00000F                     write_LCD@dato:
   257                           	opt stack 0
   258  00000F                     read_BUSY@aux:
   259                           	opt stack 0
   260  00000F                     assign_id@id:
   261                           	opt stack 0
   262  00000F                     decode@retorno:
   263                           	opt stack 0
   264  00000F                     ___awmod@dividend:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0xE
   268  00000F                     	ds	1
   269  000010                     Send_Disp@NroDisp:
   270                           	opt stack 0
   271  000010                     write_LCD@aux:
   272                           	opt stack 0
   273  000010                     decode@buffer:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0xF
   277  000010                     	ds	1
   278  000011                     Send_4Disp@Cent:
   279                           	opt stack 0
   280  000011                     write_DATA@dato:
   281                           	opt stack 0
   282  000011                     write_CMD@dato:
   283                           	opt stack 0
   284  000011                     ___awmod@divisor:
   285                           	opt stack 0
   286                           
   287                           ; 2 bytes @ 0x10
   288  000011                     	ds	1
   289  000012                     Send_4Disp@Dec:
   290                           	opt stack 0
   291  000012                     char2LCD@dato:
   292                           	opt stack 0
   293  000012                     msg2LCD@datos:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x11
   297  000012                     	ds	1
   298  000013                     Send_4Disp@Uni:
   299                           	opt stack 0
   300  000013                     ___awmod@counter:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x12
   304  000013                     	ds	1
   305  000014                     Send_4Disp@Umil:
   306                           	opt stack 0
   307  000014                     ___awmod@sign:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x13
   311  000014                     	ds	1
   312  000015                     ?___awdiv:
   313                           	opt stack 0
   314  000015                     ___awdiv@dividend:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x14
   318  000015                     	ds	2
   319  000017                     ___awdiv@divisor:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x16
   323  000017                     	ds	2
   324  000019                     ___awdiv@counter:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x18
   328  000019                     	ds	1
   329  00001A                     ___awdiv@sign:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x19
   333  00001A                     	ds	1
   334  00001B                     ___awdiv@quotient:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x1A
   338  00001B                     	ds	2
   339  00001D                     main@backup_rampa:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x1C
   343  00001D                     	ds	2
   344  00001F                     main@backup:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x1E
   348  00001F                     	ds	1
   349  000020                     main@seg:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x1F
   353  000020                     	ds	1
   354  000021                     main@dec:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x20
   358  000021                     	ds	1
   359  000022                     main@cent:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x21
   363  000022                     	ds	1
   364  000023                     main@mil:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x22
   368  000023                     	ds	1
   369                           tblptru	equ	0xFF8
   370                           tblptrh	equ	0xFF7
   371                           tblptrl	equ	0xFF6
   372                           tablat	equ	0xFF5
   373                           postinc0	equ	0xFEE
   374                           wreg	equ	0xFE8
   375                           postdec1	equ	0xFE5
   376                           fsr1l	equ	0xFE1
   377                           
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 35 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  backup_rampa    2   28[COMRAM] unsigned int 
   388 ;;  mil             1   34[COMRAM] unsigned char 
   389 ;;  cent            1   33[COMRAM] unsigned char 
   390 ;;  dec             1   32[COMRAM] unsigned char 
   391 ;;  seg             1   31[COMRAM] unsigned char 
   392 ;;  backup          1   30[COMRAM] unsigned char 
   393 ;; Return value:  Size  Location     Type
   394 ;;		None               void
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   402 ;;      Params:         0       0       0       0       0       0       0       0       0
   403 ;;      Locals:         7       0       0       0       0       0       0       0       0
   404 ;;      Temps:          0       0       0       0       0       0       0       0       0
   405 ;;      Totals:         7       0       0       0       0       0       0       0       0
   406 ;;Total ram usage:        7 bytes
   407 ;; Hardware stack levels required when called:    5
   408 ;; This function calls:
   409 ;;		_LCD_init
   410 ;;		_Send_4Disp
   411 ;;		___awdiv
   412 ;;		___awmod
   413 ;;		_assign_id
   414 ;;		_char2LCD
   415 ;;		_decode
   416 ;;		_msg2LCD
   417 ;;		_pic_ini13
   418 ;;		_timer_ini13
   419 ;;		_usart_ini13
   420 ;; This function is called by:
   421 ;;		Startup code after reset
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           	psect	text0
   426  007EB0                     __ptext0:
   427                           	opt stack 0
   428  007EB0                     _main:
   429                           	opt stack 26
   430                           
   431                           ;main.c: 36: unsigned char backup,seg=0,dec=0,cent=0,mil=0;
   432                           
   433                           ;incstack = 0
   434  007EB0  0E00               	movlw	0
   435  007EB2  6E20               	movwf	main@seg,c
   436  007EB4  0E00               	movlw	0
   437  007EB6  6E21               	movwf	main@dec,c
   438  007EB8  0E00               	movlw	0
   439  007EBA  6E22               	movwf	main@cent,c
   440  007EBC  0E00               	movlw	0
   441  007EBE  6E23               	movwf	main@mil,c
   442                           
   443                           ;main.c: 37: unsigned int backup_rampa;
   444                           ;main.c: 39: pic_ini13();
   445  007EC0  EC66  F03D         	call	_pic_ini13	;wreg free
   446                           
   447                           ;main.c: 40: timer_ini13();
   448  007EC4  ECF9  F03C         	call	_timer_ini13	;wreg free
   449                           
   450                           ;main.c: 42: usart_ini13();
   451  007EC8  EC3B  F03D         	call	_usart_ini13	;wreg free
   452                           
   453                           ;main.c: 43: (INTCONbits.GIE = 1);
   454  007ECC  8EF2               	bsf	intcon,7,c	;volatile
   455                           
   456                           ;main.c: 44: LCD_init();
   457  007ECE  EC32  F03E         	call	_LCD_init	;wreg free
   458                           
   459                           ;main.c: 45: assign_id('a');
   460  007ED2  0E61               	movlw	97
   461  007ED4  ECCB  F03C         	call	_assign_id
   462                           
   463                           ;main.c: 47: msg2LCD("Welcome");
   464  007ED8  0E20               	movlw	high STR_1
   465  007EDA  6E13               	movwf	msg2LCD@datos+1,c
   466  007EDC  0E1E               	movlw	low STR_1
   467  007EDE  6E12               	movwf	msg2LCD@datos,c
   468  007EE0  EC4F  F03D         	call	_msg2LCD	;wreg free
   469                           
   470                           ;main.c: 48: rampa_status=0;
   471  007EE4  0E00               	movlw	0
   472  007EE6  6E35               	movwf	_rampa_status,c
   473                           
   474                           ;main.c: 49: tiempo_rampa=0;
   475  007EE8  0E00               	movlw	0
   476  007EEA  6E27               	movwf	_tiempo_rampa+1,c
   477  007EEC  0E00               	movlw	0
   478  007EEE  6E26               	movwf	_tiempo_rampa,c
   479  007EF0                     l1272:
   480                           
   481                           ;main.c: 52: if(caracter != backup){
   482  007EF0  502D               	movf	_caracter,w,c
   483  007EF2  181F               	xorwf	main@backup,w,c
   484  007EF4  B4D8               	btfsc	status,2,c
   485  007EF6  D02B               	goto	l1288
   486                           
   487                           ;main.c: 53: char2LCD(caracter);
   488  007EF8  502D               	movf	_caracter,w,c
   489  007EFA  ECDD  F03C         	call	_char2LCD
   490                           
   491                           ;main.c: 54: backup=caracter;
   492  007EFE  C02D  F01F         	movff	_caracter,main@backup
   493                           
   494                           ;main.c: 64: switch(decode(caracter)){
   495  007F02  D013               	goto	l1286
   496  007F04                     l62:
   497                           
   498                           ;main.c: 68: LATDbits.LD2=1;
   499  007F04  848C               	bsf	3980,2,c	;volatile
   500                           
   501                           ;main.c: 69: LATDbits.LD3=0;
   502  007F06  968C               	bcf	3980,3,c	;volatile
   503                           
   504                           ;main.c: 70: rampa_status=1;
   505  007F08  0E01               	movlw	1
   506  007F0A  D003               	goto	L1
   507  007F0C                     l63:
   508                           
   509                           ;main.c: 73: LATDbits.LD2=0;
   510  007F0C  948C               	bcf	3980,2,c	;volatile
   511                           
   512                           ;main.c: 74: LATDbits.LD3=1;
   513  007F0E  868C               	bsf	3980,3,c	;volatile
   514                           
   515                           ;main.c: 75: rampa_status=0;
   516  007F10  0E00               	movlw	0
   517  007F12                     L1:
   518  007F12  6E35               	movwf	_rampa_status,c
   519                           
   520                           ;main.c: 76: }break;
   521  007F14  D01C               	goto	l1288
   522  007F16                     l64:
   523                           
   524                           ;main.c: 78: LATDbits.LD2=1;
   525  007F16  848C               	bsf	3980,2,c	;volatile
   526                           
   527                           ;main.c: 79: LATDbits.LD3=1;
   528  007F18  868C               	bsf	3980,3,c	;volatile
   529                           
   530                           ;main.c: 80: }break;
   531  007F1A  D019               	goto	l1288
   532  007F1C                     l65:
   533                           
   534                           ;main.c: 82: LATDbits.LD2=0;
   535  007F1C  948C               	bcf	3980,2,c	;volatile
   536                           
   537                           ;main.c: 83: LATDbits.LD3=0;
   538  007F1E  968C               	bcf	3980,3,c	;volatile
   539                           
   540                           ;main.c: 84: tiempo_rampa=0;
   541  007F20  0E00               	movlw	0
   542  007F22  6E27               	movwf	_tiempo_rampa+1,c
   543  007F24  0E00               	movlw	0
   544  007F26  6E26               	movwf	_tiempo_rampa,c
   545                           
   546                           ;main.c: 85: }break;
   547  007F28  D012               	goto	l1288
   548  007F2A                     l1286:
   549  007F2A  502D               	movf	_caracter,w,c
   550  007F2C  ECC1  F03D         	call	_decode
   551                           
   552                           ; Switch size 1, requested type "space"
   553                           ; Number of cases is 5, Range of values is 0 to 115
   554                           ; switch strategies available:
   555                           ; Name         Instructions Cycles
   556                           ; simple_byte           16     9 (average)
   557                           ;	Chosen strategy is simple_byte
   558  007F30  0A00               	xorlw	0	; case 0
   559  007F32  B4D8               	btfsc	status,2,c
   560  007F34  D00C               	goto	l1288
   561  007F36  0A64               	xorlw	100	; case 100
   562  007F38  B4D8               	btfsc	status,2,c
   563  007F3A  D7E8               	goto	l63
   564  007F3C  0A08               	xorlw	8	; case 108
   565  007F3E  B4D8               	btfsc	status,2,c
   566  007F40  D7EA               	goto	l64
   567  007F42  0A1E               	xorlw	30	; case 114
   568  007F44  B4D8               	btfsc	status,2,c
   569  007F46  D7EA               	goto	l65
   570  007F48  0A01               	xorlw	1	; case 115
   571  007F4A  B4D8               	btfsc	status,2,c
   572  007F4C  D7DB               	goto	l62
   573  007F4E                     l1288:
   574                           
   575                           ;main.c: 87: }
   576                           ;main.c: 88: if(tiempo_rampa !=backup_rampa){
   577  007F4E  501E               	movf	main@backup_rampa+1,w,c
   578  007F50  1827               	xorwf	_tiempo_rampa+1,w,c
   579  007F52  E102               	bnz	u355
   580  007F54  501D               	movf	main@backup_rampa,w,c
   581  007F56  1826               	xorwf	_tiempo_rampa,w,c
   582  007F58                     u355:
   583  007F58  B4D8               	btfsc	status,2,c
   584  007F5A  D048               	goto	l1294
   585                           
   586                           ;main.c: 89: seg=tiempo_rampa/1000;
   587  007F5C  C026  F015         	movff	_tiempo_rampa,___awdiv@dividend
   588  007F60  C027  F016         	movff	_tiempo_rampa+1,___awdiv@dividend+1
   589  007F64  0E03               	movlw	3
   590  007F66  6E18               	movwf	___awdiv@divisor+1,c
   591  007F68  0EE8               	movlw	232
   592  007F6A  6E17               	movwf	___awdiv@divisor,c
   593  007F6C  EC06  F03F         	call	___awdiv	;wreg free
   594  007F70  5015               	movf	?___awdiv,w,c
   595  007F72  6E20               	movwf	main@seg,c
   596                           
   597                           ;main.c: 90: dec=(tiempo_rampa%1000)/100;
   598  007F74  0E03               	movlw	3
   599  007F76  6E12               	movwf	___awmod@divisor+1,c
   600  007F78  0EE8               	movlw	232
   601  007F7A  6E11               	movwf	___awmod@divisor,c
   602  007F7C  C026  F00F         	movff	_tiempo_rampa,___awmod@dividend
   603  007F80  C027  F010         	movff	_tiempo_rampa+1,___awmod@dividend+1
   604  007F84  ECBE  F03E         	call	___awmod	;wreg free
   605  007F88  C00F  F015         	movff	?___awmod,___awdiv@dividend
   606  007F8C  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
   607  007F90  0E00               	movlw	0
   608  007F92  6E18               	movwf	___awdiv@divisor+1,c
   609  007F94  0E64               	movlw	100
   610  007F96  6E17               	movwf	___awdiv@divisor,c
   611  007F98  EC06  F03F         	call	___awdiv	;wreg free
   612  007F9C  5015               	movf	?___awdiv,w,c
   613  007F9E  6E21               	movwf	main@dec,c
   614                           
   615                           ;main.c: 91: cent=(tiempo_rampa%100)/10;
   616  007FA0  0E00               	movlw	0
   617  007FA2  6E12               	movwf	___awmod@divisor+1,c
   618  007FA4  0E64               	movlw	100
   619  007FA6  6E11               	movwf	___awmod@divisor,c
   620  007FA8  C026  F00F         	movff	_tiempo_rampa,___awmod@dividend
   621  007FAC  C027  F010         	movff	_tiempo_rampa+1,___awmod@dividend+1
   622  007FB0  ECBE  F03E         	call	___awmod	;wreg free
   623  007FB4  C00F  F015         	movff	?___awmod,___awdiv@dividend
   624  007FB8  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
   625  007FBC  0E00               	movlw	0
   626  007FBE  6E18               	movwf	___awdiv@divisor+1,c
   627  007FC0  0E0A               	movlw	10
   628  007FC2  6E17               	movwf	___awdiv@divisor,c
   629  007FC4  EC06  F03F         	call	___awdiv	;wreg free
   630  007FC8  5015               	movf	?___awdiv,w,c
   631  007FCA  6E22               	movwf	main@cent,c
   632                           
   633                           ;main.c: 92: mil=tiempo_rampa%10;
   634  007FCC  C026  F00F         	movff	_tiempo_rampa,___awmod@dividend
   635  007FD0  C027  F010         	movff	_tiempo_rampa+1,___awmod@dividend+1
   636  007FD4  0E00               	movlw	0
   637  007FD6  6E12               	movwf	___awmod@divisor+1,c
   638  007FD8  0E0A               	movlw	10
   639  007FDA  6E11               	movwf	___awmod@divisor,c
   640  007FDC  ECBE  F03E         	call	___awmod	;wreg free
   641  007FE0  500F               	movf	?___awmod,w,c
   642  007FE2  6E23               	movwf	main@mil,c
   643                           
   644                           ;main.c: 93: backup_rampa=tiempo_rampa;
   645  007FE4  C026  F01D         	movff	_tiempo_rampa,main@backup_rampa
   646  007FE8  C027  F01E         	movff	_tiempo_rampa+1,main@backup_rampa+1
   647  007FEC                     l1294:
   648                           
   649                           ;main.c: 94: }
   650                           ;main.c: 95: Send_4Disp(seg,dec,cent,mil);
   651  007FEC  C021  F011         	movff	main@dec,Send_4Disp@Cent
   652  007FF0  C022  F012         	movff	main@cent,Send_4Disp@Dec
   653  007FF4  C023  F013         	movff	main@mil,Send_4Disp@Uni
   654  007FF8  5020               	movf	main@seg,w,c
   655  007FFA  ECF2  F03D         	call	_Send_4Disp
   656  007FFE  D778               	goto	l1272
   657  008000                     __end_of_main:
   658                           	opt stack 0
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           intcon	equ	0xFF2
   664                           postinc0	equ	0xFEE
   665                           wreg	equ	0xFE8
   666                           postdec1	equ	0xFE5
   667                           fsr1l	equ	0xFE1
   668                           status	equ	0xFD8
   669                           
   670 ;; *************** function _usart_ini13 *****************
   671 ;; Defined at:
   672 ;;		line 67 in file "Ap_ini.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;		None               void
   679 ;; Registers used:
   680 ;;		wreg, status,2
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   686 ;;      Params:         0       0       0       0       0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0
   689 ;;      Totals:         0       0       0       0       0       0       0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; Hardware stack levels required when called:    2
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text1
   701  007A76                     __ptext1:
   702                           	opt stack 0
   703  007A76                     _usart_ini13:
   704                           	opt stack 28
   705                           
   706                           ;Ap_ini.c: 72: TXSTAbits.BRGH = 1;
   707                           
   708                           ;incstack = 0
   709  007A76  84AC               	bsf	4012,2,c	;volatile
   710                           
   711                           ;Ap_ini.c: 73: BAUDCONbits.BRG16=1;
   712  007A78  86B8               	bsf	4024,3,c	;volatile
   713                           
   714                           ;Ap_ini.c: 74: TXSTAbits.SYNC = 0;
   715  007A7A  98AC               	bcf	4012,4,c	;volatile
   716                           
   717                           ;Ap_ini.c: 75: SPBRG = 0xE1;
   718  007A7C  0EE1               	movlw	225
   719  007A7E  6EAF               	movwf	4015,c	;volatile
   720                           
   721                           ;Ap_ini.c: 76: SPBRGH = 0x04;
   722  007A80  0E04               	movlw	4
   723  007A82  6EB0               	movwf	4016,c	;volatile
   724                           
   725                           ;Ap_ini.c: 77: RCSTAbits.SPEN = 1;
   726  007A84  8EAB               	bsf	4011,7,c	;volatile
   727                           
   728                           ;Ap_ini.c: 80: TXSTAbits.TX9 = 0;
   729  007A86  9CAC               	bcf	4012,6,c	;volatile
   730                           
   731                           ;Ap_ini.c: 81: TXSTAbits.TXEN = 0;
   732  007A88  9AAC               	bcf	4012,5,c	;volatile
   733                           
   734                           ;Ap_ini.c: 84: (void) RCREG;
   735  007A8A  50AE               	movf	4014,w,c	;volatile
   736                           
   737                           ;Ap_ini.c: 85: (void) RCREG;
   738  007A8C  50AE               	movf	4014,w,c	;volatile
   739                           
   740                           ;Ap_ini.c: 86: (void) RCREG;
   741  007A8E  50AE               	movf	4014,w,c	;volatile
   742                           
   743                           ;Ap_ini.c: 87: RCSTAbits.RX9 = 0 ;
   744  007A90  9CAB               	bcf	4011,6,c	;volatile
   745                           
   746                           ;Ap_ini.c: 88: PIE1bits.RCIE = 1;
   747  007A92  8A9D               	bsf	3997,5,c	;volatile
   748                           
   749                           ;Ap_ini.c: 89: RCSTAbits.CREN = 1;
   750  007A94  88AB               	bsf	4011,4,c	;volatile
   751                           
   752                           ;Ap_ini.c: 90: INTCONbits.PEIE = 1;
   753  007A96  8CF2               	bsf	intcon,6,c	;volatile
   754                           
   755                           ;Ap_ini.c: 92: TRISCbits.RC6 = 1;
   756  007A98  8C94               	bsf	3988,6,c	;volatile
   757                           
   758                           ;Ap_ini.c: 93: TRISCbits.RC7 = 1;
   759  007A9A  8E94               	bsf	3988,7,c	;volatile
   760  007A9C  0012               	return	
   761  007A9E                     __end_of_usart_ini13:
   762                           	opt stack 0
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           intcon	equ	0xFF2
   768                           postinc0	equ	0xFEE
   769                           wreg	equ	0xFE8
   770                           postdec1	equ	0xFE5
   771                           fsr1l	equ	0xFE1
   772                           status	equ	0xFD8
   773                           
   774 ;; *************** function _timer_ini13 *****************
   775 ;; Defined at:
   776 ;;		line 37 in file "Ap_ini.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;		None               void
   783 ;; Registers used:
   784 ;;		wreg, status,2
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   790 ;;      Params:         0       0       0       0       0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0       0       0       0       0
   793 ;;      Totals:         0       0       0       0       0       0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    2
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text2
   805  0079F2                     __ptext2:
   806                           	opt stack 0
   807  0079F2                     _timer_ini13:
   808                           	opt stack 28
   809                           
   810                           ;Ap_ini.c: 38: T0CONbits.TMR0ON = 0;
   811                           
   812                           ;incstack = 0
   813  0079F2  9ED5               	bcf	4053,7,c	;volatile
   814                           
   815                           ;Ap_ini.c: 39: T0CONbits.T08BIT = 1;
   816  0079F4  8CD5               	bsf	4053,6,c	;volatile
   817                           
   818                           ;Ap_ini.c: 40: T0CONbits.T0CS = 0;
   819  0079F6  9AD5               	bcf	4053,5,c	;volatile
   820                           
   821                           ;Ap_ini.c: 41: T0CONbits.PSA = 0;
   822  0079F8  96D5               	bcf	4053,3,c	;volatile
   823                           
   824                           ;Ap_ini.c: 42: T0CONbits.T0PS0 = 1;
   825  0079FA  80D5               	bsf	4053,0,c	;volatile
   826                           
   827                           ;Ap_ini.c: 43: T0CONbits.T0PS1 = 1;
   828  0079FC  82D5               	bsf	4053,1,c	;volatile
   829                           
   830                           ;Ap_ini.c: 44: T0CONbits.T0PS2 = 1;
   831  0079FE  84D5               	bsf	4053,2,c	;volatile
   832                           
   833                           ;Ap_ini.c: 45: TMR0L = 209;
   834  007A00  0ED1               	movlw	209
   835  007A02  6ED6               	movwf	4054,c	;volatile
   836                           
   837                           ;Ap_ini.c: 46: TMR0H = 0xFF;
   838  007A04  68D7               	setf	4055,c	;volatile
   839                           
   840                           ;Ap_ini.c: 47: INTCONbits.TMR0IE = 1;
   841  007A06  8AF2               	bsf	intcon,5,c	;volatile
   842                           
   843                           ;Ap_ini.c: 48: T0CONbits.TMR0ON = 1;
   844  007A08  8ED5               	bsf	4053,7,c	;volatile
   845  007A0A  0012               	return	
   846  007A0C                     __end_of_timer_ini13:
   847                           	opt stack 0
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           intcon	equ	0xFF2
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           postdec1	equ	0xFE5
   856                           fsr1l	equ	0xFE1
   857                           status	equ	0xFD8
   858                           
   859 ;; *************** function _pic_ini13 *****************
   860 ;; Defined at:
   861 ;;		line 9 in file "Ap_ini.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;		None               void
   868 ;; Registers used:
   869 ;;		wreg, status,2
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   875 ;;      Params:         0       0       0       0       0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0
   878 ;;      Totals:         0       0       0       0       0       0       0       0       0
   879 ;;Total ram usage:        0 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    2
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_main
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text3
   890  007ACC                     __ptext3:
   891                           	opt stack 0
   892  007ACC                     _pic_ini13:
   893                           	opt stack 28
   894                           
   895                           ;Ap_ini.c: 12: LATA = 0x00;
   896                           
   897                           ;incstack = 0
   898  007ACC  0E00               	movlw	0
   899  007ACE  6E89               	movwf	3977,c	;volatile
   900                           
   901                           ;Ap_ini.c: 13: LATB = 0x00;
   902  007AD0  0E00               	movlw	0
   903  007AD2  6E8A               	movwf	3978,c	;volatile
   904                           
   905                           ;Ap_ini.c: 14: LATC = 0x00;
   906  007AD4  0E00               	movlw	0
   907  007AD6  6E8B               	movwf	3979,c	;volatile
   908                           
   909                           ;Ap_ini.c: 15: LATD = 0x00;
   910  007AD8  0E00               	movlw	0
   911  007ADA  6E8C               	movwf	3980,c	;volatile
   912                           
   913                           ;Ap_ini.c: 16: LATE = 0x00;
   914  007ADC  0E00               	movlw	0
   915  007ADE  6E8D               	movwf	3981,c	;volatile
   916                           
   917                           ;Ap_ini.c: 20: TRISD = 0xF0;
   918  007AE0  0EF0               	movlw	240
   919  007AE2  6E95               	movwf	3989,c	;volatile
   920                           
   921                           ;Ap_ini.c: 21: TRISCbits.RC6 = 0;
   922  007AE4  9C94               	bcf	3988,6,c	;volatile
   923                           
   924                           ;Ap_ini.c: 22: TRISCbits.RC7 = 0;
   925  007AE6  9E94               	bcf	3988,7,c	;volatile
   926                           
   927                           ;Ap_ini.c: 26: CMCON = 0x07;
   928  007AE8  0E07               	movlw	7
   929  007AEA  6EB4               	movwf	4020,c	;volatile
   930                           
   931                           ;Ap_ini.c: 27: ADCON1 = 0x0F;
   932  007AEC  0E0F               	movlw	15
   933  007AEE  6EC1               	movwf	4033,c	;volatile
   934                           
   935                           ;Ap_ini.c: 28: TRISA = 0xC0;
   936  007AF0  0EC0               	movlw	192
   937  007AF2  6E92               	movwf	3986,c	;volatile
   938                           
   939                           ;Ap_ini.c: 29: TRISE = 0x00;
   940  007AF4  0E00               	movlw	0
   941  007AF6  6E96               	movwf	3990,c	;volatile
   942                           
   943                           ;Ap_ini.c: 33: TRISB = 0xFF;
   944  007AF8  6893               	setf	3987,c	;volatile
   945  007AFA  0012               	return	
   946  007AFC                     __end_of_pic_ini13:
   947                           	opt stack 0
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           tblptrl	equ	0xFF6
   951                           tablat	equ	0xFF5
   952                           intcon	equ	0xFF2
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           postdec1	equ	0xFE5
   956                           fsr1l	equ	0xFE1
   957                           status	equ	0xFD8
   958                           
   959 ;; *************** function _msg2LCD *****************
   960 ;; Defined at:
   961 ;;		line 24 in file "../../MisLibrerias/lcd.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  datos           2   17[COMRAM] PTR unsigned char 
   964 ;;		 -> STR_1(8), 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;		None               void
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   976 ;;      Params:         2       0       0       0       0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0
   979 ;;      Totals:         2       0       0       0       0       0       0       0       0
   980 ;;Total ram usage:        2 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    4
   983 ;; This function calls:
   984 ;;		_read_BUSY
   985 ;;		_write_DATA
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text4
   992  007A9E                     __ptext4:
   993                           	opt stack 0
   994  007A9E                     _msg2LCD:
   995                           	opt stack 26
   996                           
   997                           ;lcd.c: 26: while (*datos != 0){
   998                           
   999                           ;incstack = 0
  1000  007A9E  D00C               	goto	l1082
  1001  007AA0                     l1076:
  1002                           
  1003                           ;lcd.c: 27: write_DATA(*datos);
  1004  007AA0  C012  FFF6         	movff	msg2LCD@datos,tblptrl
  1005  007AA4  C013  FFF7         	movff	msg2LCD@datos+1,tblptrh
  1006  007AA8                     	if	0	;tblptru may be non-zero
  1007  007AA8                     	endif
  1008  007AA8                     	if	0	;tblptru may be non-zero
  1009  007AA8                     	endif
  1010  007AA8  0008               	tblrd		*
  1011  007AAA  50F5               	movf	tablat,w,c
  1012  007AAC  ECD6  F03C         	call	_write_DATA
  1013                           
  1014                           ;lcd.c: 28: read_BUSY();
  1015  007AB0  EC14  F03D         	call	_read_BUSY	;wreg free
  1016                           
  1017                           ;lcd.c: 29: datos++;
  1018  007AB4  4A12               	infsnz	msg2LCD@datos,f,c
  1019  007AB6  2A13               	incf	msg2LCD@datos+1,f,c
  1020  007AB8                     l1082:
  1021  007AB8  C012  FFF6         	movff	msg2LCD@datos,tblptrl
  1022  007ABC  C013  FFF7         	movff	msg2LCD@datos+1,tblptrh
  1023  007AC0                     	if	0	;tblptru may be non-zero
  1024  007AC0                     	endif
  1025  007AC0                     	if	0	;tblptru may be non-zero
  1026  007AC0                     	endif
  1027  007AC0  0008               	tblrd		*
  1028  007AC2  50F5               	movf	tablat,w,c
  1029  007AC4  0900               	iorlw	0
  1030  007AC6  B4D8               	btfsc	status,2,c
  1031  007AC8  0012               	return	
  1032  007ACA  D7EA               	goto	l1076
  1033  007ACC                     __end_of_msg2LCD:
  1034                           	opt stack 0
  1035                           tblptru	equ	0xFF8
  1036                           tblptrh	equ	0xFF7
  1037                           tblptrl	equ	0xFF6
  1038                           tablat	equ	0xFF5
  1039                           intcon	equ	0xFF2
  1040                           postinc0	equ	0xFEE
  1041                           wreg	equ	0xFE8
  1042                           postdec1	equ	0xFE5
  1043                           fsr1l	equ	0xFE1
  1044                           status	equ	0xFD8
  1045                           
  1046 ;; *************** function _decode *****************
  1047 ;; Defined at:
  1048 ;;		line 14 in file "rampa.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  buffer          1    wreg     unsigned char 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  buffer          1   15[COMRAM] unsigned char 
  1053 ;;  retorno         1   14[COMRAM] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      unsigned char 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1063 ;;      Params:         0       0       0       0       0       0       0       0       0
  1064 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1066 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1067 ;;Total ram usage:        2 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    2
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text5
  1078  007B82                     __ptext5:
  1079                           	opt stack 0
  1080  007B82                     _decode:
  1081                           	opt stack 28
  1082                           
  1083                           ;incstack = 0
  1084                           ;decode@buffer stored from wreg
  1085  007B82  6E10               	movwf	decode@buffer,c
  1086                           
  1087                           ;rampa.c: 17: static unsigned char est_rec=address;
  1088                           ;rampa.c: 18: static char com_rec;
  1089                           ;rampa.c: 19: unsigned char retorno;
  1090                           ;rampa.c: 21: switch(est_rec){
  1091  007B84  D023               	goto	l1116
  1092  007B86                     l1088:
  1093                           
  1094                           ;rampa.c: 23: if(buffer==slave_id || buffer==broadcast_id){
  1095  007B86  5010               	movf	decode@buffer,w,c
  1096  007B88  182F               	xorwf	_slave_id,w,c
  1097  007B8A  B4D8               	btfsc	status,2,c
  1098  007B8C  D00E               	goto	L2
  1099  007B8E  0E1D               	movlw	low _broadcast_id
  1100  007B90  6EF6               	movwf	tblptrl,c
  1101  007B92                     	if	1	;There is more than 1 active tblptr byte
  1102  007B92  0E20               	movlw	high _broadcast_id
  1103  007B94  6EF7               	movwf	tblptrh,c
  1104  007B96                     	endif
  1105  007B96                     	if	0	;There are less than 3 active tblptr bytes
  1106  007B96                     	endif
  1107  007B96  0008               	tblrd		*
  1108  007B98  50F5               	movf	tablat,w,c
  1109  007B9A  6210               	cpfseq	decode@buffer,c
  1110  007B9C  D021               	goto	l1118
  1111  007B9E  D005               	goto	L2
  1112  007BA0                     l1098:
  1113                           
  1114                           ;rampa.c: 32: if(buffer){
  1115  007BA0  5010               	movf	decode@buffer,w,c
  1116  007BA2  B4D8               	btfsc	status,2,c
  1117  007BA4  D01D               	goto	l1118
  1118                           
  1119                           ;rampa.c: 33: com_rec=buffer;
  1120  007BA6  C010  F030         	movff	decode@buffer,decode@com_rec
  1121  007BAA                     L2:
  1122                           
  1123                           ;rampa.c: 34: est_rec++;
  1124  007BAA  2A31               	incf	decode@est_rec,f,c
  1125                           
  1126                           ;rampa.c: 35: buffer = 0;
  1127  007BAC  0E00               	movlw	0
  1128  007BAE  6E10               	movwf	decode@buffer,c
  1129                           
  1130                           ;rampa.c: 36: retorno=0;
  1131  007BB0  0E00               	movlw	0
  1132  007BB2  6E0F               	movwf	decode@retorno,c
  1133  007BB4  D015               	goto	l1118
  1134  007BB6                     l1108:
  1135                           
  1136                           ;rampa.c: 42: if(buffer=='f'){
  1137  007BB6  5010               	movf	decode@buffer,w,c
  1138  007BB8  0A66               	xorlw	102
  1139  007BBA  A4D8               	btfss	status,2,c
  1140  007BBC  D011               	goto	l1118
  1141                           
  1142                           ;rampa.c: 43: est_rec=address;
  1143  007BBE  0E00               	movlw	0
  1144  007BC0  6E31               	movwf	decode@est_rec,c
  1145                           
  1146                           ;rampa.c: 44: retorno = com_rec;
  1147  007BC2  C030  F00F         	movff	decode@com_rec,decode@retorno
  1148                           
  1149                           ;rampa.c: 45: com_rec=0;
  1150  007BC6  0E00               	movlw	0
  1151  007BC8  6E30               	movwf	decode@com_rec,c
  1152  007BCA  D00A               	goto	l1118
  1153  007BCC                     l1116:
  1154  007BCC  5031               	movf	decode@est_rec,w,c
  1155                           
  1156                           ; Switch size 1, requested type "space"
  1157                           ; Number of cases is 3, Range of values is 0 to 2
  1158                           ; switch strategies available:
  1159                           ; Name         Instructions Cycles
  1160                           ; simple_byte           10     6 (average)
  1161                           ;	Chosen strategy is simple_byte
  1162  007BCE  0A00               	xorlw	0	; case 0
  1163  007BD0  B4D8               	btfsc	status,2,c
  1164  007BD2  D7D9               	goto	l1088
  1165  007BD4  0A01               	xorlw	1	; case 1
  1166  007BD6  B4D8               	btfsc	status,2,c
  1167  007BD8  D7E3               	goto	l1098
  1168  007BDA  0A03               	xorlw	3	; case 2
  1169  007BDC  B4D8               	btfsc	status,2,c
  1170  007BDE  D7EB               	goto	l1108
  1171  007BE0                     l1118:
  1172                           
  1173                           ;rampa.c: 49: return retorno;
  1174  007BE0  500F               	movf	decode@retorno,w,c
  1175  007BE2  0012               	return	
  1176  007BE4                     __end_of_decode:
  1177                           	opt stack 0
  1178                           tblptru	equ	0xFF8
  1179                           tblptrh	equ	0xFF7
  1180                           tblptrl	equ	0xFF6
  1181                           tablat	equ	0xFF5
  1182                           intcon	equ	0xFF2
  1183                           postinc0	equ	0xFEE
  1184                           wreg	equ	0xFE8
  1185                           postdec1	equ	0xFE5
  1186                           fsr1l	equ	0xFE1
  1187                           status	equ	0xFD8
  1188                           
  1189 ;; *************** function _char2LCD *****************
  1190 ;; Defined at:
  1191 ;;		line 34 in file "../../MisLibrerias/lcd.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  dato            1    wreg     unsigned char 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  dato            1   17[COMRAM] unsigned char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;		None               void
  1198 ;; Registers used:
  1199 ;;		wreg, status,2, status,0, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1205 ;;      Params:         0       0       0       0       0       0       0       0       0
  1206 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1208 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1209 ;;Total ram usage:        1 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    4
  1212 ;; This function calls:
  1213 ;;		_read_BUSY
  1214 ;;		_write_DATA
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text6
  1221  0079BA                     __ptext6:
  1222                           	opt stack 0
  1223  0079BA                     _char2LCD:
  1224                           	opt stack 26
  1225                           
  1226                           ;incstack = 0
  1227                           ;char2LCD@dato stored from wreg
  1228  0079BA  6E12               	movwf	char2LCD@dato,c
  1229                           
  1230                           ;lcd.c: 36: write_DATA(dato);
  1231  0079BC  5012               	movf	char2LCD@dato,w,c
  1232  0079BE  ECD6  F03C         	call	_write_DATA
  1233                           
  1234                           ;lcd.c: 37: read_BUSY();
  1235  0079C2  EC14  F03D         	call	_read_BUSY	;wreg free
  1236  0079C6  0012               	return	
  1237  0079C8                     __end_of_char2LCD:
  1238                           	opt stack 0
  1239                           tblptru	equ	0xFF8
  1240                           tblptrh	equ	0xFF7
  1241                           tblptrl	equ	0xFF6
  1242                           tablat	equ	0xFF5
  1243                           intcon	equ	0xFF2
  1244                           postinc0	equ	0xFEE
  1245                           wreg	equ	0xFE8
  1246                           postdec1	equ	0xFE5
  1247                           fsr1l	equ	0xFE1
  1248                           status	equ	0xFD8
  1249                           
  1250 ;; *************** function _write_DATA *****************
  1251 ;; Defined at:
  1252 ;;		line 90 in file "../../MisLibrerias/lcd.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  dato            1    wreg     unsigned char 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  dato            1   16[COMRAM] unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;		None               void
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1266 ;;      Params:         0       0       0       0       0       0       0       0       0
  1267 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1269 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1270 ;;Total ram usage:        1 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    3
  1273 ;; This function calls:
  1274 ;;		_write_LCD
  1275 ;; This function is called by:
  1276 ;;		_msg2LCD
  1277 ;;		_char2LCD
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text7
  1282  0079AC                     __ptext7:
  1283                           	opt stack 0
  1284  0079AC                     _write_DATA:
  1285                           	opt stack 26
  1286                           
  1287                           ;incstack = 0
  1288                           ;write_DATA@dato stored from wreg
  1289  0079AC  6E11               	movwf	write_DATA@dato,c
  1290                           
  1291                           ;lcd.c: 92: LATBbits.LB7 = 0x1;
  1292  0079AE  8E8A               	bsf	3978,7,c	;volatile
  1293                           
  1294                           ;lcd.c: 93: LATBbits.LB6 = 0x0;
  1295  0079B0  9C8A               	bcf	3978,6,c	;volatile
  1296                           
  1297                           ;lcd.c: 94: write_LCD(dato);
  1298  0079B2  5011               	movf	write_DATA@dato,w,c
  1299  0079B4  EC27  F03D         	call	_write_LCD
  1300  0079B8  0012               	return	
  1301  0079BA                     __end_of_write_DATA:
  1302                           	opt stack 0
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           intcon	equ	0xFF2
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           postdec1	equ	0xFE5
  1311                           fsr1l	equ	0xFE1
  1312                           status	equ	0xFD8
  1313                           
  1314 ;; *************** function _assign_id *****************
  1315 ;; Defined at:
  1316 ;;		line 7 in file "rampa.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  id              1    wreg     unsigned char 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  id              1   14[COMRAM] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;		None               void
  1323 ;; Registers used:
  1324 ;;		wreg
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1330 ;;      Params:         0       0       0       0       0       0       0       0       0
  1331 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1333 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1334 ;;Total ram usage:        1 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:    2
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text8
  1345  007996                     __ptext8:
  1346                           	opt stack 0
  1347  007996                     _assign_id:
  1348                           	opt stack 28
  1349                           
  1350                           ;incstack = 0
  1351                           ;assign_id@id stored from wreg
  1352  007996  6E0F               	movwf	assign_id@id,c
  1353                           
  1354                           ;rampa.c: 8: slave_id=id;
  1355  007998  C00F  F02F         	movff	assign_id@id,_slave_id
  1356  00799C  0012               	return	
  1357  00799E                     __end_of_assign_id:
  1358                           	opt stack 0
  1359                           tblptru	equ	0xFF8
  1360                           tblptrh	equ	0xFF7
  1361                           tblptrl	equ	0xFF6
  1362                           tablat	equ	0xFF5
  1363                           intcon	equ	0xFF2
  1364                           postinc0	equ	0xFEE
  1365                           wreg	equ	0xFE8
  1366                           postdec1	equ	0xFE5
  1367                           fsr1l	equ	0xFE1
  1368                           status	equ	0xFD8
  1369                           
  1370 ;; *************** function ___awmod *****************
  1371 ;; Defined at:
  1372 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/awmod.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  dividend        2   14[COMRAM] int 
  1375 ;;  divisor         2   16[COMRAM] int 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  sign            1   19[COMRAM] unsigned char 
  1378 ;;  counter         1   18[COMRAM] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2   14[COMRAM] int 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0, prodl
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1388 ;;      Params:         4       0       0       0       0       0       0       0       0
  1389 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1391 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1392 ;;Total ram usage:        6 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    2
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text9
  1403  007D7C                     __ptext9:
  1404                           	opt stack 0
  1405  007D7C                     ___awmod:
  1406                           	opt stack 28
  1407                           
  1408                           ;incstack = 0
  1409  007D7C  0E00               	movlw	0
  1410  007D7E  6E14               	movwf	___awmod@sign,c
  1411  007D80  5010               	movf	___awmod@dividend+1,w,c
  1412  007D82  0A80               	xorlw	128
  1413  007D84  6EF3               	movwf	prodl,c
  1414  007D86  0E80               	movlw	128
  1415  007D88  5CF3               	subwf	prodl,w,c
  1416  007D8A  0E00               	movlw	0
  1417  007D8C  B4D8               	btfsc	status,2,c
  1418  007D8E  5C0F               	subwf	___awmod@dividend,w,c
  1419  007D90  B0D8               	btfsc	status,0,c
  1420  007D92  D006               	goto	l1224
  1421  007D94  6C0F               	negf	___awmod@dividend,c
  1422  007D96  1E10               	comf	___awmod@dividend+1,f,c
  1423  007D98  B0D8               	btfsc	status,0,c
  1424  007D9A  2A10               	incf	___awmod@dividend+1,f,c
  1425  007D9C  0E01               	movlw	1
  1426  007D9E  6E14               	movwf	___awmod@sign,c
  1427  007DA0                     l1224:
  1428  007DA0  5012               	movf	___awmod@divisor+1,w,c
  1429  007DA2  0A80               	xorlw	128
  1430  007DA4  6EF3               	movwf	prodl,c
  1431  007DA6  0E80               	movlw	128
  1432  007DA8  5CF3               	subwf	prodl,w,c
  1433  007DAA  0E00               	movlw	0
  1434  007DAC  B4D8               	btfsc	status,2,c
  1435  007DAE  5C11               	subwf	___awmod@divisor,w,c
  1436  007DB0  B0D8               	btfsc	status,0,c
  1437  007DB2  D004               	goto	l1228
  1438  007DB4  6C11               	negf	___awmod@divisor,c
  1439  007DB6  1E12               	comf	___awmod@divisor+1,f,c
  1440  007DB8  B0D8               	btfsc	status,0,c
  1441  007DBA  2A12               	incf	___awmod@divisor+1,f,c
  1442  007DBC                     l1228:
  1443  007DBC  5012               	movf	___awmod@divisor+1,w,c
  1444  007DBE  1011               	iorwf	___awmod@divisor,w,c
  1445  007DC0  B4D8               	btfsc	status,2,c
  1446  007DC2  D018               	goto	l1244
  1447  007DC4  0E01               	movlw	1
  1448  007DC6  6E13               	movwf	___awmod@counter,c
  1449  007DC8  D004               	goto	l1234
  1450  007DCA                     l1232:
  1451  007DCA  90D8               	bcf	status,0,c
  1452  007DCC  3611               	rlcf	___awmod@divisor,f,c
  1453  007DCE  3612               	rlcf	___awmod@divisor+1,f,c
  1454  007DD0  2A13               	incf	___awmod@counter,f,c
  1455  007DD2                     l1234:
  1456  007DD2  AE12               	btfss	___awmod@divisor+1,7,c
  1457  007DD4  D7FA               	goto	l1232
  1458  007DD6                     l1236:
  1459  007DD6  5011               	movf	___awmod@divisor,w,c
  1460  007DD8  5C0F               	subwf	___awmod@dividend,w,c
  1461  007DDA  5012               	movf	___awmod@divisor+1,w,c
  1462  007DDC  5810               	subwfb	___awmod@dividend+1,w,c
  1463  007DDE  A0D8               	btfss	status,0,c
  1464  007DE0  D004               	goto	l1240
  1465  007DE2  5011               	movf	___awmod@divisor,w,c
  1466  007DE4  5E0F               	subwf	___awmod@dividend,f,c
  1467  007DE6  5012               	movf	___awmod@divisor+1,w,c
  1468  007DE8  5A10               	subwfb	___awmod@dividend+1,f,c
  1469  007DEA                     l1240:
  1470  007DEA  90D8               	bcf	status,0,c
  1471  007DEC  3212               	rrcf	___awmod@divisor+1,f,c
  1472  007DEE  3211               	rrcf	___awmod@divisor,f,c
  1473  007DF0  2E13               	decfsz	___awmod@counter,f,c
  1474  007DF2  D7F1               	goto	l1236
  1475  007DF4                     l1244:
  1476  007DF4  5014               	movf	___awmod@sign,w,c
  1477  007DF6  B4D8               	btfsc	status,2,c
  1478  007DF8  D004               	goto	l1248
  1479  007DFA  6C0F               	negf	___awmod@dividend,c
  1480  007DFC  1E10               	comf	___awmod@dividend+1,f,c
  1481  007DFE  B0D8               	btfsc	status,0,c
  1482  007E00  2A10               	incf	___awmod@dividend+1,f,c
  1483  007E02                     l1248:
  1484  007E02  C00F  F00F         	movff	___awmod@dividend,?___awmod
  1485  007E06  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  1486  007E0A  0012               	return	
  1487  007E0C                     __end_of___awmod:
  1488                           	opt stack 0
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           prodl	equ	0xFF3
  1494                           intcon	equ	0xFF2
  1495                           postinc0	equ	0xFEE
  1496                           wreg	equ	0xFE8
  1497                           postdec1	equ	0xFE5
  1498                           fsr1l	equ	0xFE1
  1499                           status	equ	0xFD8
  1500                           
  1501 ;; *************** function ___awdiv *****************
  1502 ;; Defined at:
  1503 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/awdiv.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  dividend        2   20[COMRAM] int 
  1506 ;;  divisor         2   22[COMRAM] int 
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  quotient        2   26[COMRAM] int 
  1509 ;;  sign            1   25[COMRAM] unsigned char 
  1510 ;;  counter         1   24[COMRAM] unsigned char 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  2   20[COMRAM] int 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0, prodl
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1520 ;;      Params:         4       0       0       0       0       0       0       0       0
  1521 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1523 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1524 ;;Total ram usage:        8 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    2
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text10
  1535  007E0C                     __ptext10:
  1536                           	opt stack 0
  1537  007E0C                     ___awdiv:
  1538                           	opt stack 28
  1539                           
  1540                           ;incstack = 0
  1541  007E0C  0E00               	movlw	0
  1542  007E0E  6E1A               	movwf	___awdiv@sign,c
  1543  007E10  5018               	movf	___awdiv@divisor+1,w,c
  1544  007E12  0A80               	xorlw	128
  1545  007E14  6EF3               	movwf	prodl,c
  1546  007E16  0E80               	movlw	128
  1547  007E18  5CF3               	subwf	prodl,w,c
  1548  007E1A  0E00               	movlw	0
  1549  007E1C  B4D8               	btfsc	status,2,c
  1550  007E1E  5C17               	subwf	___awdiv@divisor,w,c
  1551  007E20  B0D8               	btfsc	status,0,c
  1552  007E22  D006               	goto	l1180
  1553  007E24  6C17               	negf	___awdiv@divisor,c
  1554  007E26  1E18               	comf	___awdiv@divisor+1,f,c
  1555  007E28  B0D8               	btfsc	status,0,c
  1556  007E2A  2A18               	incf	___awdiv@divisor+1,f,c
  1557  007E2C  0E01               	movlw	1
  1558  007E2E  6E1A               	movwf	___awdiv@sign,c
  1559  007E30                     l1180:
  1560  007E30  5016               	movf	___awdiv@dividend+1,w,c
  1561  007E32  0A80               	xorlw	128
  1562  007E34  6EF3               	movwf	prodl,c
  1563  007E36  0E80               	movlw	128
  1564  007E38  5CF3               	subwf	prodl,w,c
  1565  007E3A  0E00               	movlw	0
  1566  007E3C  B4D8               	btfsc	status,2,c
  1567  007E3E  5C15               	subwf	___awdiv@dividend,w,c
  1568  007E40  B0D8               	btfsc	status,0,c
  1569  007E42  D006               	goto	l1186
  1570  007E44  6C15               	negf	___awdiv@dividend,c
  1571  007E46  1E16               	comf	___awdiv@dividend+1,f,c
  1572  007E48  B0D8               	btfsc	status,0,c
  1573  007E4A  2A16               	incf	___awdiv@dividend+1,f,c
  1574  007E4C  0E01               	movlw	1
  1575  007E4E  1A1A               	xorwf	___awdiv@sign,f,c
  1576  007E50                     l1186:
  1577  007E50  0E00               	movlw	0
  1578  007E52  6E1C               	movwf	___awdiv@quotient+1,c
  1579  007E54  0E00               	movlw	0
  1580  007E56  6E1B               	movwf	___awdiv@quotient,c
  1581  007E58  5018               	movf	___awdiv@divisor+1,w,c
  1582  007E5A  1017               	iorwf	___awdiv@divisor,w,c
  1583  007E5C  B4D8               	btfsc	status,2,c
  1584  007E5E  D01C               	goto	l1208
  1585  007E60  0E01               	movlw	1
  1586  007E62  6E19               	movwf	___awdiv@counter,c
  1587  007E64  D004               	goto	l1194
  1588  007E66                     l1192:
  1589  007E66  90D8               	bcf	status,0,c
  1590  007E68  3617               	rlcf	___awdiv@divisor,f,c
  1591  007E6A  3618               	rlcf	___awdiv@divisor+1,f,c
  1592  007E6C  2A19               	incf	___awdiv@counter,f,c
  1593  007E6E                     l1194:
  1594  007E6E  AE18               	btfss	___awdiv@divisor+1,7,c
  1595  007E70  D7FA               	goto	l1192
  1596  007E72                     l1196:
  1597  007E72  90D8               	bcf	status,0,c
  1598  007E74  361B               	rlcf	___awdiv@quotient,f,c
  1599  007E76  361C               	rlcf	___awdiv@quotient+1,f,c
  1600  007E78  5017               	movf	___awdiv@divisor,w,c
  1601  007E7A  5C15               	subwf	___awdiv@dividend,w,c
  1602  007E7C  5018               	movf	___awdiv@divisor+1,w,c
  1603  007E7E  5816               	subwfb	___awdiv@dividend+1,w,c
  1604  007E80  A0D8               	btfss	status,0,c
  1605  007E82  D005               	goto	l1204
  1606  007E84  5017               	movf	___awdiv@divisor,w,c
  1607  007E86  5E15               	subwf	___awdiv@dividend,f,c
  1608  007E88  5018               	movf	___awdiv@divisor+1,w,c
  1609  007E8A  5A16               	subwfb	___awdiv@dividend+1,f,c
  1610  007E8C  801B               	bsf	___awdiv@quotient,0,c
  1611  007E8E                     l1204:
  1612  007E8E  90D8               	bcf	status,0,c
  1613  007E90  3218               	rrcf	___awdiv@divisor+1,f,c
  1614  007E92  3217               	rrcf	___awdiv@divisor,f,c
  1615  007E94  2E19               	decfsz	___awdiv@counter,f,c
  1616  007E96  D7ED               	goto	l1196
  1617  007E98                     l1208:
  1618  007E98  501A               	movf	___awdiv@sign,w,c
  1619  007E9A  B4D8               	btfsc	status,2,c
  1620  007E9C  D004               	goto	l1212
  1621  007E9E  6C1B               	negf	___awdiv@quotient,c
  1622  007EA0  1E1C               	comf	___awdiv@quotient+1,f,c
  1623  007EA2  B0D8               	btfsc	status,0,c
  1624  007EA4  2A1C               	incf	___awdiv@quotient+1,f,c
  1625  007EA6                     l1212:
  1626  007EA6  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  1627  007EAA  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  1628  007EAE  0012               	return	
  1629  007EB0                     __end_of___awdiv:
  1630                           	opt stack 0
  1631                           tblptru	equ	0xFF8
  1632                           tblptrh	equ	0xFF7
  1633                           tblptrl	equ	0xFF6
  1634                           tablat	equ	0xFF5
  1635                           prodl	equ	0xFF3
  1636                           intcon	equ	0xFF2
  1637                           postinc0	equ	0xFEE
  1638                           wreg	equ	0xFE8
  1639                           postdec1	equ	0xFE5
  1640                           fsr1l	equ	0xFE1
  1641                           status	equ	0xFD8
  1642                           
  1643 ;; *************** function _Send_4Disp *****************
  1644 ;; Defined at:
  1645 ;;		line 74 in file "Lemos.C"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  Umil            1    wreg     unsigned char 
  1648 ;;  Cent            1   16[COMRAM] unsigned char 
  1649 ;;  Dec             1   17[COMRAM] unsigned char 
  1650 ;;  Uni             1   18[COMRAM] unsigned char 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  Umil            1   19[COMRAM] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;		None               void
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1662 ;;      Params:         3       0       0       0       0       0       0       0       0
  1663 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1665 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1666 ;;Total ram usage:        4 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    3
  1669 ;; This function calls:
  1670 ;;		_Send_Disp
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text11
  1677  007BE4                     __ptext11:
  1678                           	opt stack 0
  1679  007BE4                     _Send_4Disp:
  1680                           	opt stack 27
  1681                           
  1682                           ;incstack = 0
  1683                           ;Send_4Disp@Umil stored from wreg
  1684  007BE4  6E14               	movwf	Send_4Disp@Umil,c
  1685                           
  1686                           ;Lemos.C: 76: static unsigned char Nro_Disp=1;
  1687                           ;Lemos.C: 78: switch(Nro_Disp){
  1688  007BE6  D02F               	goto	l1150
  1689  007BE8                     l194:
  1690                           
  1691                           ;Lemos.C: 80: if(!mux_tout){
  1692  007BE8  662E               	tstfsz	_mux_tout,c
  1693  007BEA  D03B               	goto	l204
  1694                           
  1695                           ;Lemos.C: 81: Send_Disp(1,Umil);
  1696  007BEC  C014  F00F         	movff	Send_4Disp@Umil,Send_Disp@Dato
  1697  007BF0  0E01               	movlw	1
  1698  007BF2  EC99  F03D         	call	_Send_Disp
  1699                           
  1700                           ;Lemos.C: 82: mux_tout = 4;;
  1701  007BF6  0E04               	movlw	4
  1702  007BF8  6E2E               	movwf	_mux_tout,c
  1703                           
  1704                           ;Lemos.C: 83: Nro_Disp = 2;
  1705  007BFA  0E02               	movlw	2
  1706  007BFC  D01E               	goto	L5
  1707  007BFE                     l197:
  1708                           
  1709                           ;Lemos.C: 88: if(!mux_tout){
  1710  007BFE  662E               	tstfsz	_mux_tout,c
  1711  007C00  D030               	goto	l204
  1712                           
  1713                           ;Lemos.C: 89: Send_Disp(2,Cent);
  1714  007C02  C011  F00F         	movff	Send_4Disp@Cent,Send_Disp@Dato
  1715  007C06  0E02               	movlw	2
  1716  007C08  EC99  F03D         	call	_Send_Disp
  1717                           
  1718                           ;Lemos.C: 90: mux_tout = 4;;
  1719  007C0C  0E04               	movlw	4
  1720  007C0E  6E2E               	movwf	_mux_tout,c
  1721                           
  1722                           ;Lemos.C: 91: Nro_Disp = 3;
  1723  007C10  0E03               	movlw	3
  1724  007C12  D013               	goto	L5
  1725  007C14                     l199:
  1726                           
  1727                           ;Lemos.C: 96: if(!mux_tout){
  1728  007C14  662E               	tstfsz	_mux_tout,c
  1729  007C16  D025               	goto	l204
  1730                           
  1731                           ;Lemos.C: 97: Send_Disp(3,Dec);
  1732  007C18  C012  F00F         	movff	Send_4Disp@Dec,Send_Disp@Dato
  1733  007C1C  0E03               	movlw	3
  1734  007C1E  EC99  F03D         	call	_Send_Disp
  1735                           
  1736                           ;Lemos.C: 98: mux_tout = 4;;
  1737  007C22  0E04               	movlw	4
  1738  007C24  6E2E               	movwf	_mux_tout,c
  1739                           
  1740                           ;Lemos.C: 99: Nro_Disp = 4;
  1741  007C26  0E04               	movlw	4
  1742  007C28  D008               	goto	L5
  1743  007C2A                     l201:
  1744                           
  1745                           ;Lemos.C: 104: if(!mux_tout){
  1746  007C2A  662E               	tstfsz	_mux_tout,c
  1747  007C2C  D01A               	goto	l204
  1748                           
  1749                           ;Lemos.C: 105: Send_Disp(4,Uni);
  1750  007C2E  C013  F00F         	movff	Send_4Disp@Uni,Send_Disp@Dato
  1751  007C32  0E04               	movlw	4
  1752  007C34  EC99  F03D         	call	_Send_Disp
  1753  007C38  D002               	goto	l1148
  1754  007C3A                     L5:
  1755  007C3A  6E33               	movwf	Send_4Disp@Nro_Disp,c
  1756  007C3C  D012               	goto	l204
  1757  007C3E                     l1148:
  1758                           
  1759                           ;Lemos.C: 112: mux_tout = 4;;
  1760  007C3E  0E04               	movlw	4
  1761  007C40  6E2E               	movwf	_mux_tout,c
  1762                           
  1763                           ;Lemos.C: 113: Nro_Disp = 1;
  1764  007C42  0E01               	movlw	1
  1765  007C44  D7FA               	goto	L5
  1766  007C46                     l1150:
  1767  007C46  5033               	movf	Send_4Disp@Nro_Disp,w,c
  1768                           
  1769                           ; Switch size 1, requested type "space"
  1770                           ; Number of cases is 4, Range of values is 1 to 4
  1771                           ; switch strategies available:
  1772                           ; Name         Instructions Cycles
  1773                           ; simple_byte           13     7 (average)
  1774                           ;	Chosen strategy is simple_byte
  1775  007C48  0A01               	xorlw	1	; case 1
  1776  007C4A  B4D8               	btfsc	status,2,c
  1777  007C4C  D7CD               	goto	l194
  1778  007C4E  0A03               	xorlw	3	; case 2
  1779  007C50  B4D8               	btfsc	status,2,c
  1780  007C52  D7D5               	goto	l197
  1781  007C54  0A01               	xorlw	1	; case 3
  1782  007C56  B4D8               	btfsc	status,2,c
  1783  007C58  D7DD               	goto	l199
  1784  007C5A  0A07               	xorlw	7	; case 4
  1785  007C5C  B4D8               	btfsc	status,2,c
  1786  007C5E  D7E5               	goto	l201
  1787  007C60  D7EE               	goto	l1148
  1788  007C62                     l204:
  1789  007C62  0012               	return	
  1790  007C64                     __end_of_Send_4Disp:
  1791                           	opt stack 0
  1792                           tblptru	equ	0xFF8
  1793                           tblptrh	equ	0xFF7
  1794                           tblptrl	equ	0xFF6
  1795                           tablat	equ	0xFF5
  1796                           prodl	equ	0xFF3
  1797                           intcon	equ	0xFF2
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           postdec1	equ	0xFE5
  1801                           fsr1l	equ	0xFE1
  1802                           status	equ	0xFD8
  1803                           
  1804 ;; *************** function _Send_Disp *****************
  1805 ;; Defined at:
  1806 ;;		line 43 in file "Lemos.C"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  NroDisp         1    wreg     unsigned char 
  1809 ;;  Dato            1   14[COMRAM] unsigned char 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  NroDisp         1   15[COMRAM] unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;		None               void
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1821 ;;      Params:         1       0       0       0       0       0       0       0       0
  1822 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1824 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1825 ;;Total ram usage:        2 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    2
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_Send_4Disp
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text12
  1836  007B32                     __ptext12:
  1837                           	opt stack 0
  1838  007B32                     _Send_Disp:
  1839                           	opt stack 27
  1840                           
  1841                           ;incstack = 0
  1842                           ;Send_Disp@NroDisp stored from wreg
  1843  007B32  6E10               	movwf	Send_Disp@NroDisp,c
  1844                           
  1845                           ;Lemos.C: 45: LATA = 0;
  1846  007B34  0E00               	movlw	0
  1847  007B36  6E89               	movwf	3977,c	;volatile
  1848                           
  1849                           ;Lemos.C: 47: LATAbits.LA4 = 0;
  1850  007B38  9889               	bcf	3977,4,c	;volatile
  1851                           
  1852                           ;Lemos.C: 48: LATAbits.LA5 = 0;
  1853  007B3A  9A89               	bcf	3977,5,c	;volatile
  1854                           
  1855                           ;Lemos.C: 49: LATEbits.LATE0 = 0;
  1856  007B3C  908D               	bcf	3981,0,c	;volatile
  1857                           
  1858                           ;Lemos.C: 50: LATEbits.LATE1 = 0;
  1859  007B3E  928D               	bcf	3981,1,c	;volatile
  1860                           
  1861                           ;Lemos.C: 52: switch(NroDisp){
  1862  007B40  D008               	goto	l956
  1863  007B42                     l184:
  1864                           
  1865                           ;Lemos.C: 57: LATAbits.LA5 = 1;
  1866  007B42  8A89               	bsf	3977,5,c	;volatile
  1867                           
  1868                           ;Lemos.C: 58: }break;
  1869  007B44  D014               	goto	l958
  1870  007B46                     l185:
  1871                           
  1872                           ;Lemos.C: 60: LATEbits.LATE0 = 1;
  1873  007B46  808D               	bsf	3981,0,c	;volatile
  1874                           
  1875                           ;Lemos.C: 61: }break;
  1876  007B48  D012               	goto	l958
  1877  007B4A                     l186:
  1878                           
  1879                           ;Lemos.C: 63: LATEbits.LATE1 = 1;
  1880  007B4A  828D               	bsf	3981,1,c	;volatile
  1881                           
  1882                           ;Lemos.C: 64: }break;
  1883  007B4C  D010               	goto	l958
  1884  007B4E                     l187:
  1885                           
  1886                           ;Lemos.C: 66: LATAbits.LA4 = 1;
  1887  007B4E  8889               	bsf	3977,4,c	;volatile
  1888                           
  1889                           ;Lemos.C: 67: }break;
  1890  007B50  D00E               	goto	l958
  1891  007B52                     l956:
  1892  007B52  5010               	movf	Send_Disp@NroDisp,w,c
  1893                           
  1894                           ; Switch size 1, requested type "space"
  1895                           ; Number of cases is 4, Range of values is 1 to 4
  1896                           ; switch strategies available:
  1897                           ; Name         Instructions Cycles
  1898                           ; simple_byte           13     7 (average)
  1899                           ;	Chosen strategy is simple_byte
  1900  007B54  0A01               	xorlw	1	; case 1
  1901  007B56  B4D8               	btfsc	status,2,c
  1902  007B58  D7FA               	goto	l187
  1903  007B5A  0A03               	xorlw	3	; case 2
  1904  007B5C  B4D8               	btfsc	status,2,c
  1905  007B5E  D7F1               	goto	l184
  1906  007B60  0A01               	xorlw	1	; case 3
  1907  007B62  B4D8               	btfsc	status,2,c
  1908  007B64  D7F0               	goto	l185
  1909  007B66  0A07               	xorlw	7	; case 4
  1910  007B68  B4D8               	btfsc	status,2,c
  1911  007B6A  D7EF               	goto	l186
  1912  007B6C  D7F0               	goto	l187
  1913  007B6E                     l958:
  1914                           
  1915                           ;Lemos.C: 69: Dato = Dato & 0x0F;
  1916  007B6E  500F               	movf	Send_Disp@Dato,w,c
  1917  007B70  0B0F               	andlw	15
  1918  007B72  6E0F               	movwf	Send_Disp@Dato,c
  1919                           
  1920                           ;Lemos.C: 70: LATA = LATA & 0xF0;
  1921  007B74  5089               	movf	3977,w,c	;volatile
  1922  007B76  0BF0               	andlw	240
  1923  007B78  6E89               	movwf	3977,c	;volatile
  1924                           
  1925                           ;Lemos.C: 71: LATA = LATA | Dato;
  1926  007B7A  5089               	movf	3977,w,c	;volatile
  1927  007B7C  100F               	iorwf	Send_Disp@Dato,w,c
  1928  007B7E  6E89               	movwf	3977,c	;volatile
  1929  007B80  0012               	return	
  1930  007B82                     __end_of_Send_Disp:
  1931                           	opt stack 0
  1932                           tblptru	equ	0xFF8
  1933                           tblptrh	equ	0xFF7
  1934                           tblptrl	equ	0xFF6
  1935                           tablat	equ	0xFF5
  1936                           prodl	equ	0xFF3
  1937                           intcon	equ	0xFF2
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           postdec1	equ	0xFE5
  1941                           fsr1l	equ	0xFE1
  1942                           status	equ	0xFD8
  1943                           
  1944 ;; *************** function _LCD_init *****************
  1945 ;; Defined at:
  1946 ;;		line 60 in file "../../MisLibrerias/lcd.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;		None               void
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1963 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    4
  1967 ;; This function calls:
  1968 ;;		_read_BUSY
  1969 ;;		_write_CMD
  1970 ;; This function is called by:
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text13
  1976  007C64                     __ptext13:
  1977                           	opt stack 0
  1978  007C64                     _LCD_init:
  1979                           	opt stack 26
  1980                           
  1981                           ;lcd.c: 61: TRISB = 0b00010000;
  1982                           
  1983                           ;incstack = 0
  1984  007C64  0E10               	movlw	16
  1985  007C66  6E93               	movwf	3987,c	;volatile
  1986                           
  1987                           ;lcd.c: 63: LCD_tout = 30;
  1988  007C68  0E00               	movlw	0
  1989  007C6A  6E38               	movwf	_LCD_tout+1,c
  1990  007C6C  0E1E               	movlw	30
  1991  007C6E  6E37               	movwf	_LCD_tout,c
  1992  007C70                     l1038:
  1993  007C70  5038               	movf	_LCD_tout+1,w,c
  1994  007C72  1037               	iorwf	_LCD_tout,w,c
  1995  007C74  A4D8               	btfss	status,2,c
  1996  007C76  D7FC               	goto	l1038
  1997                           
  1998                           ;lcd.c: 66: write_CMD(0x02);
  1999  007C78  0E02               	movlw	2
  2000  007C7A  ECCF  F03C         	call	_write_CMD
  2001                           
  2002                           ;lcd.c: 67: LCD_tout = 1;
  2003  007C7E  0E00               	movlw	0
  2004  007C80  6E38               	movwf	_LCD_tout+1,c
  2005  007C82  0E01               	movlw	1
  2006  007C84  6E37               	movwf	_LCD_tout,c
  2007  007C86                     l1044:
  2008  007C86  5038               	movf	_LCD_tout+1,w,c
  2009  007C88  1037               	iorwf	_LCD_tout,w,c
  2010  007C8A  A4D8               	btfss	status,2,c
  2011  007C8C  D7FC               	goto	l1044
  2012                           
  2013                           ;lcd.c: 70: write_CMD(0x28);
  2014  007C8E  0E28               	movlw	40
  2015  007C90  ECCF  F03C         	call	_write_CMD
  2016                           
  2017                           ;lcd.c: 71: LCD_tout = 1;
  2018  007C94  0E00               	movlw	0
  2019  007C96  6E38               	movwf	_LCD_tout+1,c
  2020  007C98  0E01               	movlw	1
  2021  007C9A  6E37               	movwf	_LCD_tout,c
  2022  007C9C                     l1050:
  2023  007C9C  5038               	movf	_LCD_tout+1,w,c
  2024  007C9E  1037               	iorwf	_LCD_tout,w,c
  2025  007CA0  A4D8               	btfss	status,2,c
  2026  007CA2  D7FC               	goto	l1050
  2027                           
  2028                           ;lcd.c: 74: write_CMD(0x0C);
  2029  007CA4  0E0C               	movlw	12
  2030  007CA6  ECCF  F03C         	call	_write_CMD
  2031                           
  2032                           ;lcd.c: 75: LCD_tout = 1;
  2033  007CAA  0E00               	movlw	0
  2034  007CAC  6E38               	movwf	_LCD_tout+1,c
  2035  007CAE  0E01               	movlw	1
  2036  007CB0  6E37               	movwf	_LCD_tout,c
  2037  007CB2                     l1056:
  2038  007CB2  5038               	movf	_LCD_tout+1,w,c
  2039  007CB4  1037               	iorwf	_LCD_tout,w,c
  2040  007CB6  A4D8               	btfss	status,2,c
  2041  007CB8  D7FC               	goto	l1056
  2042                           
  2043                           ;lcd.c: 78: write_CMD(0x01);
  2044  007CBA  0E01               	movlw	1
  2045  007CBC  ECCF  F03C         	call	_write_CMD
  2046                           
  2047                           ;lcd.c: 79: LCD_tout = 1;
  2048  007CC0  0E00               	movlw	0
  2049  007CC2  6E38               	movwf	_LCD_tout+1,c
  2050  007CC4  0E01               	movlw	1
  2051  007CC6  6E37               	movwf	_LCD_tout,c
  2052  007CC8                     l1062:
  2053  007CC8  5038               	movf	_LCD_tout+1,w,c
  2054  007CCA  1037               	iorwf	_LCD_tout,w,c
  2055  007CCC  A4D8               	btfss	status,2,c
  2056  007CCE  D7FC               	goto	l1062
  2057                           
  2058                           ;lcd.c: 82: write_CMD(0x06);
  2059  007CD0  0E06               	movlw	6
  2060  007CD2  ECCF  F03C         	call	_write_CMD
  2061                           
  2062                           ;lcd.c: 83: LCD_tout = 1;
  2063  007CD6  0E00               	movlw	0
  2064  007CD8  6E38               	movwf	_LCD_tout+1,c
  2065  007CDA  0E01               	movlw	1
  2066  007CDC  6E37               	movwf	_LCD_tout,c
  2067  007CDE                     l1068:
  2068  007CDE  5038               	movf	_LCD_tout+1,w,c
  2069  007CE0  1037               	iorwf	_LCD_tout,w,c
  2070  007CE2  A4D8               	btfss	status,2,c
  2071  007CE4  D7FC               	goto	l1068
  2072                           
  2073                           ;lcd.c: 86: read_BUSY();
  2074  007CE6  EC14  F03D         	call	_read_BUSY	;wreg free
  2075  007CEA  0012               	return	
  2076  007CEC                     __end_of_LCD_init:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           tblptrh	equ	0xFF7
  2080                           tblptrl	equ	0xFF6
  2081                           tablat	equ	0xFF5
  2082                           prodl	equ	0xFF3
  2083                           intcon	equ	0xFF2
  2084                           postinc0	equ	0xFEE
  2085                           wreg	equ	0xFE8
  2086                           postdec1	equ	0xFE5
  2087                           fsr1l	equ	0xFE1
  2088                           status	equ	0xFD8
  2089                           
  2090 ;; *************** function _write_CMD *****************
  2091 ;; Defined at:
  2092 ;;		line 99 in file "../../MisLibrerias/lcd.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  dato            1    wreg     unsigned char 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  dato            1   16[COMRAM] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;		None               void
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0
  2107 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2109 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2110 ;;Total ram usage:        1 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    3
  2113 ;; This function calls:
  2114 ;;		_write_LCD
  2115 ;; This function is called by:
  2116 ;;		_LCD_init
  2117 ;;		_clear_LCD
  2118 ;;		_ret_HOME
  2119 ;;		_set_CURSOR
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text14
  2124  00799E                     __ptext14:
  2125                           	opt stack 0
  2126  00799E                     _write_CMD:
  2127                           	opt stack 26
  2128                           
  2129                           ;incstack = 0
  2130                           ;write_CMD@dato stored from wreg
  2131  00799E  6E11               	movwf	write_CMD@dato,c
  2132                           
  2133                           ;lcd.c: 101: LATBbits.LB7 = 0x0;
  2134  0079A0  9E8A               	bcf	3978,7,c	;volatile
  2135                           
  2136                           ;lcd.c: 102: LATBbits.LB6 = 0x0;
  2137  0079A2  9C8A               	bcf	3978,6,c	;volatile
  2138                           
  2139                           ;lcd.c: 103: write_LCD(dato);
  2140  0079A4  5011               	movf	write_CMD@dato,w,c
  2141  0079A6  EC27  F03D         	call	_write_LCD
  2142  0079AA  0012               	return	
  2143  0079AC                     __end_of_write_CMD:
  2144                           	opt stack 0
  2145                           tblptru	equ	0xFF8
  2146                           tblptrh	equ	0xFF7
  2147                           tblptrl	equ	0xFF6
  2148                           tablat	equ	0xFF5
  2149                           prodl	equ	0xFF3
  2150                           intcon	equ	0xFF2
  2151                           postinc0	equ	0xFEE
  2152                           wreg	equ	0xFE8
  2153                           postdec1	equ	0xFE5
  2154                           fsr1l	equ	0xFE1
  2155                           status	equ	0xFD8
  2156                           
  2157 ;; *************** function _write_LCD *****************
  2158 ;; Defined at:
  2159 ;;		line 108 in file "../../MisLibrerias/lcd.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  dato            1    wreg     unsigned char 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  dato            1   14[COMRAM] unsigned char 
  2164 ;;  aux             1   15[COMRAM] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;		None               void
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0
  2175 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2177 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2178 ;;Total ram usage:        2 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    2
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_write_DATA
  2185 ;;		_write_CMD
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text15
  2190  007A4E                     __ptext15:
  2191                           	opt stack 0
  2192  007A4E                     _write_LCD:
  2193                           	opt stack 26
  2194                           
  2195                           ;incstack = 0
  2196                           ;write_LCD@dato stored from wreg
  2197  007A4E  6E0F               	movwf	write_LCD@dato,c
  2198                           
  2199                           ;lcd.c: 109: unsigned char aux;
  2200                           ;lcd.c: 111: LATB &= 0xF0;
  2201  007A50  0EF0               	movlw	240
  2202  007A52  168A               	andwf	3978,f,c	;volatile
  2203                           
  2204                           ;lcd.c: 112: LATBbits.LB5 = 0x1;
  2205  007A54  8A8A               	bsf	3978,5,c	;volatile
  2206                           
  2207                           ;lcd.c: 114: aux = dato>>4;
  2208  007A56  380F               	swapf	write_LCD@dato,w,c
  2209  007A58  0B0F               	andlw	15
  2210  007A5A  6E10               	movwf	write_LCD@aux,c
  2211                           
  2212                           ;lcd.c: 115: LATB |= aux;
  2213  007A5C  5010               	movf	write_LCD@aux,w,c
  2214  007A5E  128A               	iorwf	3978,f,c	;volatile
  2215                           
  2216                           ;lcd.c: 117: LATBbits.LB5 = 0x0;
  2217  007A60  9A8A               	bcf	3978,5,c	;volatile
  2218                           
  2219                           ;lcd.c: 119: LATB &= 0xF0;
  2220  007A62  0EF0               	movlw	240
  2221  007A64  168A               	andwf	3978,f,c	;volatile
  2222                           
  2223                           ;lcd.c: 120: LATBbits.LB5 = 0x1;
  2224  007A66  8A8A               	bsf	3978,5,c	;volatile
  2225                           
  2226                           ;lcd.c: 122: aux = dato & 0x0F;
  2227  007A68  500F               	movf	write_LCD@dato,w,c
  2228  007A6A  0B0F               	andlw	15
  2229  007A6C  6E10               	movwf	write_LCD@aux,c
  2230                           
  2231                           ;lcd.c: 123: LATB |= aux;
  2232  007A6E  5010               	movf	write_LCD@aux,w,c
  2233  007A70  128A               	iorwf	3978,f,c	;volatile
  2234                           
  2235                           ;lcd.c: 125: LATBbits.LB5 = 0x0;
  2236  007A72  9A8A               	bcf	3978,5,c	;volatile
  2237  007A74  0012               	return	
  2238  007A76                     __end_of_write_LCD:
  2239                           	opt stack 0
  2240                           tblptru	equ	0xFF8
  2241                           tblptrh	equ	0xFF7
  2242                           tblptrl	equ	0xFF6
  2243                           tablat	equ	0xFF5
  2244                           prodl	equ	0xFF3
  2245                           intcon	equ	0xFF2
  2246                           postinc0	equ	0xFEE
  2247                           wreg	equ	0xFE8
  2248                           postdec1	equ	0xFE5
  2249                           fsr1l	equ	0xFE1
  2250                           status	equ	0xFD8
  2251                           
  2252 ;; *************** function _read_BUSY *****************
  2253 ;; Defined at:
  2254 ;;		line 129 in file "../../MisLibrerias/lcd.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  aux             1   14[COMRAM] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;		None               void
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2268 ;;      Params:         0       0       0       0       0       0       0       0       0
  2269 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2271 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2272 ;;Total ram usage:        1 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    2
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_msg2LCD
  2279 ;;		_char2LCD
  2280 ;;		_LCD_init
  2281 ;;		_clear_LCD
  2282 ;;		_ret_HOME
  2283 ;;		_set_CURSOR
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text16
  2288  007A28                     __ptext16:
  2289                           	opt stack 0
  2290  007A28                     _read_BUSY:
  2291                           	opt stack 27
  2292                           
  2293                           ;lcd.c: 131: unsigned char aux;
  2294                           ;lcd.c: 133: TRISB |= 0x0F;
  2295                           
  2296                           ;incstack = 0
  2297  007A28  0E0F               	movlw	15
  2298  007A2A  1293               	iorwf	3987,f,c	;volatile
  2299                           
  2300                           ;lcd.c: 134: LATBbits.LB7 = 0x0;
  2301  007A2C  9E8A               	bcf	3978,7,c	;volatile
  2302                           
  2303                           ;lcd.c: 135: LATBbits.LB6 = 0x1;
  2304  007A2E  8C8A               	bsf	3978,6,c	;volatile
  2305  007A30                     l970:
  2306                           
  2307                           ;lcd.c: 137: LATBbits.LB5 = 0x1;
  2308  007A30  8A8A               	bsf	3978,5,c	;volatile
  2309                           
  2310                           ;lcd.c: 138: aux = PORTBbits.RB3;
  2311  007A32  0E00               	movlw	0
  2312  007A34  B681               	btfsc	3969,3,c	;volatile
  2313  007A36  0E01               	movlw	1
  2314  007A38  6E0F               	movwf	read_BUSY@aux,c
  2315                           
  2316                           ;lcd.c: 139: LATBbits.LB5 = 0x0;
  2317  007A3A  9A8A               	bcf	3978,5,c	;volatile
  2318                           
  2319                           ;lcd.c: 140: LATBbits.LB5 = 0x1;
  2320  007A3C  8A8A               	bsf	3978,5,c	;volatile
  2321                           
  2322                           ;lcd.c: 141: (void)PORTBbits.RB3;
  2323  007A3E  5081               	movf	3969,w,c	;volatile
  2324                           
  2325                           ;lcd.c: 142: LATBbits.LB5 = 0x0;
  2326  007A40  9A8A               	bcf	3978,5,c	;volatile
  2327                           
  2328                           ;lcd.c: 143: }while (aux);
  2329  007A42  660F               	tstfsz	read_BUSY@aux,c
  2330  007A44  D7F5               	goto	l970
  2331                           
  2332                           ;lcd.c: 144: LATBbits.LB6 = 0x0;
  2333  007A46  9C8A               	bcf	3978,6,c	;volatile
  2334                           
  2335                           ;lcd.c: 145: TRISB &= 0xF0;
  2336  007A48  0EF0               	movlw	240
  2337  007A4A  1693               	andwf	3987,f,c	;volatile
  2338  007A4C  0012               	return	
  2339  007A4E                     __end_of_read_BUSY:
  2340                           	opt stack 0
  2341                           tblptru	equ	0xFF8
  2342                           tblptrh	equ	0xFF7
  2343                           tblptrl	equ	0xFF6
  2344                           tablat	equ	0xFF5
  2345                           prodl	equ	0xFF3
  2346                           intcon	equ	0xFF2
  2347                           postinc0	equ	0xFEE
  2348                           wreg	equ	0xFE8
  2349                           postdec1	equ	0xFE5
  2350                           fsr1l	equ	0xFE1
  2351                           status	equ	0xFD8
  2352                           
  2353 ;; *************** function _myISR *****************
  2354 ;; Defined at:
  2355 ;;		line 99 in file "main.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;		None               void
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0, prodl, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2369 ;;      Params:         0       0       0       0       0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2371 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2372 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2373 ;;Total ram usage:       14 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    1
  2376 ;; This function calls:
  2377 ;;		_LCD_tic
  2378 ;;		_RAMPA_tic
  2379 ;;		_tic_timer0
  2380 ;; This function is called by:
  2381 ;;		Interrupt level 2
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	intcode
  2386  002008                     __pintcode:
  2387                           	opt stack 0
  2388  002008                     _myISR:
  2389                           	opt stack 26
  2390                           
  2391                           ;incstack = 0
  2392  002008  CFFA F001          	movff	pclath,??_myISR
  2393  00200C  CFFB F002          	movff	pclatu,??_myISR+1
  2394  002010  CFE9 F003          	movff	fsr0l,??_myISR+2
  2395  002014  ED76  F03E         	call	int_func,f	;refresh shadow registers
  2396                           pclatu	equ	0xFFB
  2397                           pclath	equ	0xFFA
  2398                           tblptru	equ	0xFF8
  2399                           tblptrh	equ	0xFF7
  2400                           tblptrl	equ	0xFF6
  2401                           tablat	equ	0xFF5
  2402                           prodl	equ	0xFF3
  2403                           intcon	equ	0xFF2
  2404                           postinc0	equ	0xFEE
  2405                           fsr0l	equ	0xFE9
  2406                           wreg	equ	0xFE8
  2407                           postdec1	equ	0xFE5
  2408                           fsr1l	equ	0xFE1
  2409                           status	equ	0xFD8
  2410                           
  2411                           	psect	intcode_body
  2412  007CEC                     __pintcode_body:
  2413                           	opt stack 26
  2414  007CEC                     int_func:
  2415                           	opt stack 26
  2416  007CEC  0006               	pop		; remove dummy address from shadow register refresh
  2417  007CEE  CFEA F004          	movff	fsr0h,??_myISR+3
  2418  007CF2  CFE1 F005          	movff	fsr1l,??_myISR+4
  2419  007CF6  CFE2 F006          	movff	fsr1h,??_myISR+5
  2420  007CFA  CFD9 F007          	movff	fsr2l,??_myISR+6
  2421  007CFE  CFDA F008          	movff	fsr2h,??_myISR+7
  2422  007D02  CFF3 F009          	movff	prodl,??_myISR+8
  2423  007D06  CFF4 F00A          	movff	prodh,??_myISR+9
  2424  007D0A  CFF6 F00B          	movff	tblptrl,??_myISR+10
  2425  007D0E  CFF7 F00C          	movff	tblptrh,??_myISR+11
  2426  007D12  CFF8 F00D          	movff	tblptru,??_myISR+12
  2427  007D16  CFF5 F00E          	movff	tablat,??_myISR+13
  2428                           
  2429                           ;main.c: 108: if(TMR0IF){
  2430  007D1A  A4F2               	btfss	intcon,2,c	;volatile
  2431  007D1C  D00C               	goto	i2l1310
  2432                           
  2433                           ;main.c: 109: INTCONbits.TMR0IF = 0;
  2434  007D1E  94F2               	bcf	intcon,2,c	;volatile
  2435                           
  2436                           ;main.c: 110: TMR0L = 209;
  2437  007D20  0ED1               	movlw	209
  2438  007D22  6ED6               	movwf	4054,c	;volatile
  2439                           
  2440                           ;main.c: 111: TMR0H = 0xFF;
  2441  007D24  68D7               	setf	4055,c	;volatile
  2442                           
  2443                           ;main.c: 113: tic_timer0();
  2444  007D26  EC06  F03D         	call	_tic_timer0	;wreg free
  2445                           
  2446                           ;main.c: 116: LCD_tic();
  2447  007D2A  ECE4  F03C         	call	_LCD_tic	;wreg free
  2448                           
  2449                           ;main.c: 119: if(rampa_status) RAMPA_tic();
  2450  007D2E  5035               	movf	_rampa_status,w,c
  2451  007D30  A4D8               	btfss	status,2,c
  2452  007D32  ECEC  F03C         	call	_RAMPA_tic	;wreg free
  2453  007D36                     i2l1310:
  2454                           
  2455                           ;main.c: 121: }
  2456                           ;main.c: 130: if(RCIF){
  2457  007D36  AA9E               	btfss	3998,5,c	;volatile
  2458  007D38  D004               	goto	i2l75
  2459                           
  2460                           ;main.c: 131: RCIF=0;
  2461  007D3A  9A9E               	bcf	3998,5,c	;volatile
  2462                           
  2463                           ;main.c: 132: caracter=RCREG;
  2464  007D3C  CFAE F02D          	movff	4014,_caracter	;volatile
  2465                           
  2466                           ;main.c: 133: (void) RCREG;
  2467  007D40  50AE               	movf	4014,w,c	;volatile
  2468  007D42                     i2l75:
  2469  007D42  C00E  FFF5         	movff	??_myISR+13,tablat
  2470  007D46  C00D  FFF8         	movff	??_myISR+12,tblptru
  2471  007D4A  C00C  FFF7         	movff	??_myISR+11,tblptrh
  2472  007D4E  C00B  FFF6         	movff	??_myISR+10,tblptrl
  2473  007D52  C00A  FFF4         	movff	??_myISR+9,prodh
  2474  007D56  C009  FFF3         	movff	??_myISR+8,prodl
  2475  007D5A  C008  FFDA         	movff	??_myISR+7,fsr2h
  2476  007D5E  C007  FFD9         	movff	??_myISR+6,fsr2l
  2477  007D62  C006  FFE2         	movff	??_myISR+5,fsr1h
  2478  007D66  C005  FFE1         	movff	??_myISR+4,fsr1l
  2479  007D6A  C004  FFEA         	movff	??_myISR+3,fsr0h
  2480  007D6E  C003  FFE9         	movff	??_myISR+2,fsr0l
  2481  007D72  C002  FFFB         	movff	??_myISR+1,pclatu
  2482  007D76  C001  FFFA         	movff	??_myISR,pclath
  2483  007D7A  0011               	retfie		f
  2484  007D7C                     __end_of_myISR:
  2485                           	opt stack 0
  2486                           pclatu	equ	0xFFB
  2487                           pclath	equ	0xFFA
  2488                           tblptru	equ	0xFF8
  2489                           tblptrh	equ	0xFF7
  2490                           tblptrl	equ	0xFF6
  2491                           tablat	equ	0xFF5
  2492                           prodh	equ	0xFF4
  2493                           prodl	equ	0xFF3
  2494                           intcon	equ	0xFF2
  2495                           postinc0	equ	0xFEE
  2496                           fsr0h	equ	0xFEA
  2497                           fsr0l	equ	0xFE9
  2498                           wreg	equ	0xFE8
  2499                           postdec1	equ	0xFE5
  2500                           fsr1h	equ	0xFE2
  2501                           fsr1l	equ	0xFE1
  2502                           fsr2h	equ	0xFDA
  2503                           fsr2l	equ	0xFD9
  2504                           status	equ	0xFD8
  2505                           
  2506 ;; *************** function _tic_timer0 *****************
  2507 ;; Defined at:
  2508 ;;		line 117 in file "Lemos.C"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;		None               void
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2525 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_myISR
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text18
  2536  007A0C                     __ptext18:
  2537                           	opt stack 0
  2538  007A0C                     _tic_timer0:
  2539                           	opt stack 26
  2540                           
  2541                           ;Lemos.C: 118: if(mux_tout)mux_tout--;
  2542                           
  2543                           ;incstack = 0
  2544  007A0C  502E               	movf	_mux_tout,w,c
  2545  007A0E  A4D8               	btfss	status,2,c
  2546  007A10  062E               	decf	_mux_tout,f,c
  2547                           
  2548                           ;Lemos.C: 119: if(bot_tout)bot_tout--;
  2549  007A12  502C               	movf	_bot_tout,w,c
  2550  007A14  A4D8               	btfss	status,2,c
  2551  007A16  062C               	decf	_bot_tout,f,c
  2552                           
  2553                           ;Lemos.C: 120: if(led_tout)led_tout--;
  2554  007A18  5025               	movf	_led_tout+1,w,c
  2555  007A1A  1024               	iorwf	_led_tout,w,c
  2556  007A1C  B4D8               	btfsc	status,2,c
  2557  007A1E  D003               	goto	i2l210
  2558  007A20  0624               	decf	_led_tout,f,c
  2559  007A22  A0D8               	btfss	status,0,c
  2560  007A24  0625               	decf	_led_tout+1,f,c
  2561  007A26                     i2l210:
  2562  007A26  0012               	return	
  2563  007A28                     __end_of_tic_timer0:
  2564                           	opt stack 0
  2565                           pclatu	equ	0xFFB
  2566                           pclath	equ	0xFFA
  2567                           tblptru	equ	0xFF8
  2568                           tblptrh	equ	0xFF7
  2569                           tblptrl	equ	0xFF6
  2570                           tablat	equ	0xFF5
  2571                           prodh	equ	0xFF4
  2572                           prodl	equ	0xFF3
  2573                           intcon	equ	0xFF2
  2574                           postinc0	equ	0xFEE
  2575                           fsr0h	equ	0xFEA
  2576                           fsr0l	equ	0xFE9
  2577                           wreg	equ	0xFE8
  2578                           postdec1	equ	0xFE5
  2579                           fsr1h	equ	0xFE2
  2580                           fsr1l	equ	0xFE1
  2581                           fsr2h	equ	0xFDA
  2582                           fsr2l	equ	0xFD9
  2583                           status	equ	0xFD8
  2584                           
  2585 ;; *************** function _RAMPA_tic *****************
  2586 ;; Defined at:
  2587 ;;		line 10 in file "rampa.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;		None               void
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, prodl
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2604 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2605 ;;Total ram usage:        0 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_myISR
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text19
  2615  0079D8                     __ptext19:
  2616                           	opt stack 0
  2617  0079D8                     _RAMPA_tic:
  2618                           	opt stack 26
  2619                           
  2620                           ;rampa.c: 11: if(tiempo_rampa<9999)tiempo_rampa++;
  2621                           
  2622                           ;incstack = 0
  2623  0079D8  5027               	movf	_tiempo_rampa+1,w,c
  2624  0079DA  0A80               	xorlw	128
  2625  0079DC  6EF3               	movwf	prodl,c
  2626  0079DE  0EA7               	movlw	167
  2627  0079E0  5CF3               	subwf	prodl,w,c
  2628  0079E2  0E0F               	movlw	15
  2629  0079E4  B4D8               	btfsc	status,2,c
  2630  0079E6  5C26               	subwf	_tiempo_rampa,w,c
  2631  0079E8  B0D8               	btfsc	status,0,c
  2632  0079EA  D002               	goto	i2l325
  2633  0079EC  4A26               	infsnz	_tiempo_rampa,f,c
  2634  0079EE  2A27               	incf	_tiempo_rampa+1,f,c
  2635  0079F0                     i2l325:
  2636  0079F0  0012               	return	
  2637  0079F2                     __end_of_RAMPA_tic:
  2638                           	opt stack 0
  2639                           pclatu	equ	0xFFB
  2640                           pclath	equ	0xFFA
  2641                           tblptru	equ	0xFF8
  2642                           tblptrh	equ	0xFF7
  2643                           tblptrl	equ	0xFF6
  2644                           tablat	equ	0xFF5
  2645                           prodh	equ	0xFF4
  2646                           prodl	equ	0xFF3
  2647                           intcon	equ	0xFF2
  2648                           postinc0	equ	0xFEE
  2649                           fsr0h	equ	0xFEA
  2650                           fsr0l	equ	0xFE9
  2651                           wreg	equ	0xFE8
  2652                           postdec1	equ	0xFE5
  2653                           fsr1h	equ	0xFE2
  2654                           fsr1l	equ	0xFE1
  2655                           fsr2h	equ	0xFDA
  2656                           fsr2l	equ	0xFD9
  2657                           status	equ	0xFD8
  2658                           
  2659 ;; *************** function _LCD_tic *****************
  2660 ;; Defined at:
  2661 ;;		line 149 in file "../../MisLibrerias/lcd.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;		None               void
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0
  2676 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2678 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2679 ;;Total ram usage:        0 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		_myISR
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text20
  2689  0079C8                     __ptext20:
  2690                           	opt stack 0
  2691  0079C8                     _LCD_tic:
  2692                           	opt stack 26
  2693                           
  2694                           ;lcd.c: 150: if (LCD_tout) LCD_tout--;
  2695                           
  2696                           ;incstack = 0
  2697  0079C8  5038               	movf	_LCD_tout+1,w,c
  2698  0079CA  1037               	iorwf	_LCD_tout,w,c
  2699  0079CC  B4D8               	btfsc	status,2,c
  2700  0079CE  D003               	goto	i2l310
  2701  0079D0  0637               	decf	_LCD_tout,f,c
  2702  0079D2  A0D8               	btfss	status,0,c
  2703  0079D4  0638               	decf	_LCD_tout+1,f,c
  2704  0079D6                     i2l310:
  2705  0079D6  0012               	return	
  2706  0079D8                     __end_of_LCD_tic:
  2707                           	opt stack 0
  2708                           pclatu	equ	0xFFB
  2709                           pclath	equ	0xFFA
  2710                           tblptru	equ	0xFF8
  2711                           tblptrh	equ	0xFF7
  2712                           tblptrl	equ	0xFF6
  2713                           tablat	equ	0xFF5
  2714                           prodh	equ	0xFF4
  2715                           prodl	equ	0xFF3
  2716                           intcon	equ	0xFF2
  2717                           postinc0	equ	0xFEE
  2718                           fsr0h	equ	0xFEA
  2719                           fsr0l	equ	0xFE9
  2720                           wreg	equ	0xFE8
  2721                           postdec1	equ	0xFE5
  2722                           fsr1h	equ	0xFE2
  2723                           fsr1l	equ	0xFE1
  2724                           fsr2h	equ	0xFDA
  2725                           fsr2l	equ	0xFD9
  2726                           status	equ	0xFD8
  2727                           pclatu	equ	0xFFB
  2728                           pclath	equ	0xFFA
  2729                           tblptru	equ	0xFF8
  2730                           tblptrh	equ	0xFF7
  2731                           tblptrl	equ	0xFF6
  2732                           tablat	equ	0xFF5
  2733                           prodh	equ	0xFF4
  2734                           prodl	equ	0xFF3
  2735                           intcon	equ	0xFF2
  2736                           postinc0	equ	0xFEE
  2737                           fsr0h	equ	0xFEA
  2738                           fsr0l	equ	0xFE9
  2739                           wreg	equ	0xFE8
  2740                           postdec1	equ	0xFE5
  2741                           fsr1h	equ	0xFE2
  2742                           fsr1l	equ	0xFE1
  2743                           fsr2h	equ	0xFDA
  2744                           fsr2l	equ	0xFD9
  2745                           status	equ	0xFD8
  2746                           
  2747                           	psect	rparam
  2748  0000                     pclatu	equ	0xFFB
  2749                           pclath	equ	0xFFA
  2750                           tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           intcon	equ	0xFF2
  2757                           postinc0	equ	0xFEE
  2758                           fsr0h	equ	0xFEA
  2759                           fsr0l	equ	0xFE9
  2760                           wreg	equ	0xFE8
  2761                           postdec1	equ	0xFE5
  2762                           fsr1h	equ	0xFE2
  2763                           fsr1l	equ	0xFE1
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8


Data Sizes:
    Strings     8
    Constant    1
    Data        4
    BSS         15
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      56
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    msg2LCD@datos	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->___awdiv
    _msg2LCD->_write_DATA
    _char2LCD->_write_DATA
    _write_DATA->_write_LCD
    ___awdiv->___awmod
    _Send_4Disp->_Send_Disp
    _LCD_init->_write_CMD
    _write_CMD->_write_LCD

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2065
                                             28 COMRAM     7     7      0
                           _LCD_init
                         _Send_4Disp
                            ___awdiv
                            ___awmod
                          _assign_id
                           _char2LCD
                             _decode
                            _msg2LCD
                          _pic_ini13
                        _timer_ini13
                        _usart_ini13
 ---------------------------------------------------------------------------------
 (1) _usart_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pic_ini13                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _msg2LCD                                              2     0      2     173
                                             17 COMRAM     2     0      2
                          _read_BUSY
                         _write_DATA
 ---------------------------------------------------------------------------------
 (1) _decode                                               2     2      0      90
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _char2LCD                                             1     1      0     105
                                             17 COMRAM     1     1      0
                          _read_BUSY
                         _write_DATA
 ---------------------------------------------------------------------------------
 (2) _write_DATA                                           1     1      0      75
                                             16 COMRAM     1     1      0
                          _write_LCD
 ---------------------------------------------------------------------------------
 (1) _assign_id                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     513
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     513
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Send_4Disp                                           4     1      3     476
                                             16 COMRAM     4     1      3
                          _Send_Disp
 ---------------------------------------------------------------------------------
 (2) _Send_Disp                                            2     1      1     257
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0      90
                          _read_BUSY
                          _write_CMD
 ---------------------------------------------------------------------------------
 (2) _write_CMD                                            1     1      0      75
                                             16 COMRAM     1     1      0
                          _write_LCD
 ---------------------------------------------------------------------------------
 (3) _write_LCD                                            2     2      0      60
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _read_BUSY                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _myISR                                               14    14      0       0
                                              0 COMRAM    14    14      0
                            _LCD_tic
                          _RAMPA_tic
                         _tic_timer0
 ---------------------------------------------------------------------------------
 (5) _tic_timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RAMPA_tic                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LCD_tic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _read_BUSY
     _write_CMD
       _write_LCD
   _Send_4Disp
     _Send_Disp
   ___awdiv
     ___awmod (ARG)
   ___awmod
   _assign_id
   _char2LCD
     _read_BUSY
     _write_DATA
       _write_LCD
   _decode
   _msg2LCD
     _read_BUSY
     _write_DATA
       _write_LCD
   _pic_ini13
   _timer_ini13
   _usart_ini13

 _myISR (ROOT)
   _LCD_tic
   _RAMPA_tic
   _tic_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      38       1       58.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      38      20        0.0%
DATA                 0      0      38       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat May 23 08:39:12 2015

                     l62 7F04                       l63 7F0C                       l64 7F16  
                     l65 7F1C             ___awdiv@sign 001A              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
                    l201 7C2A                      l204 7C62                      l184 7B42  
                    l185 7B46                      l186 7B4A                      l194 7BE8  
                    l187 7B4E                      l197 7BFE                      l199 7C14  
       main@backup_rampa 001D                      _DEC 0029                      l970 7A30  
                    l956 7B52                      l958 7B6E             __CFG_CPB$OFF 000000  
                    _PR2 000FCB                      u355 7F58                      _UNI 002B  
           ___awmod@sign 0014                      wreg 000FE8            Send_Disp@Dato 000F  
           __CFG_LVP$OFF 000000          __end_of_LCD_tic 79D8             __CFG_WDT$OFF 000000  
                   l1050 7C9C                     l1044 7C86                     l1212 7EA6  
                   l1204 7E8E                     l1108 7BB6                     l1116 7BCC  
                   l1062 7CC8                     l1038 7C70                     l1150 7C46  
                   l1118 7BE0                     l1056 7CB2                     l1208 7E98  
                   l1240 7DEA                     l1232 7DCA                     l1224 7DA0  
                   l1234 7DD2                     l1082 7AB8                     l1068 7CDE  
                   l1148 7C3E                     l1180 7E30                     l1236 7DD6  
                   l1244 7DF4                     l1228 7DBC                     l1076 7AA0  
                   l1192 7E66                     l1248 7E02                     l1088 7B86  
                   l1272 7EF0                     l1194 7E6E                     l1186 7E50  
                   l1098 7BA0                     l1196 7E72                     l1294 7FEC  
                   l1286 7F2A                     l1288 7F4E                     STR_1 201E  
                   _CENT 0028                     _LATA 000F89                     _LATB 000F8A  
                   _LATC 000F8B                     _LATD 000F8C                     _LATE 000F8D  
                   _RCIF 007CF5                     i2l75 7D42                     _UMIL 002A  
            _usart_ini13 7A76                     _main 7EB0                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 2018  
          __CFG_IESO$OFF 000000             msg2LCD@datos 0012            __CFG_MCLRE$ON 000000  
     __size_of_RAMPA_tic 001A            __CFG_PLLDIV$5 000000         __end_of_LCD_init 7CEC  
            assign_id@id 000F                    ?_main 0001          __end_of___awdiv 7EB0  
        __end_of___awmod 7E0C                    _CMCON 000FB4          ___awdiv@divisor 0017  
                  i2l210 7A26                    i2l310 79D6                    i2l325 79F0  
        ___awdiv@counter 0019                    _RCREG 000FAE                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _SPBRG 000FAF            __CFG_USBDIV$2 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
                  _TRISE 000F96            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000          __end_of_msg2LCD 7ACC            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000           __CFG_EBTRB$OFF 000000                    _myISR 2008  
                  leds@i 0036                    tablat 000FF5                    status 000FD8  
        __initialization 7AFC             __end_of_main 8000                   ??_main 001D  
          __activetblptr 000002                ??_LCD_tic 0001               _Send_4Disp 7BE4  
                 _ADCON1 000FC1                   ?_myISR 0001                   _CCPR1L 000FBE  
       ___awdiv@dividend 0015        __end_of_RAMPA_tic 79F2                   _MEMDIG 0034  
       __end_of_char2LCD 79C8                   i2l1310 7D36                   _TMR0IF 007F92  
                 _SPBRGH 000FB0           __CFG_VREGEN$ON 000000           __CFG_XINST$OFF 000000  
     __size_of_Send_Disp 0050                ??___awdiv 0019           __CFG_STVREN$ON 000000  
              ??___awmod 0013                   _decode 7B82                   clear_0 7B02  
       ___awdiv@quotient 001B          ___awmod@divisor 0011          ___awmod@counter 0013  
              ??_msg2LCD 0014     __end_of_broadcast_id 201E             __pdataCOMRAM 0033  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8             ?_timer_ini13 0001            decode@com_rec 0030  
          decode@est_rec 0031               __accesstop 0060  __end_of__initialization 7B28  
        __CFG_PBADEN$OFF 000000         Send_Disp@NroDisp 0010            decode@retorno 000F  
              ?_LCD_init 0001           __pcstackCOMRAM 0001            __end_of_myISR 7D7C  
            ?_Send_4Disp 0011                  ??_myISR 0001        __end_of_Send_Disp 7B82  
     __size_of_assign_id 0008             ?_usart_ini13 0001       __size_of_read_BUSY 0026  
             __pnvCOMRAM 0037               ??_LCD_init 0012       __size_of_pic_ini13 0030  
                ?_decode 0001       Send_4Disp@Nro_Disp 0033             read_BUSY@aux 000F  
              ?_char2LCD 0001             char2LCD@dato 0012                  _LCD_tic 79C8  
     __size_of_write_CMD 000E       __size_of_write_LCD 0028                  __Hparam 0000  
                __Lparam 0000      __size_of_Send_4Disp 0080                  ___awdiv 7E0C  
                ___awmod 7D7C          __size_of_decode 0062        __end_of_assign_id 799E  
           __psmallconst 201C                  __pcinit 7AFC                  __ramtop 0800  
                __ptext0 7EB0                  __ptext1 7A76                  __ptext2 79F2  
                __ptext3 7ACC                  __ptext4 7A9E                  __ptext5 7B82  
                __ptext6 79BA                  __ptext7 79AC                  __ptext8 7996  
                __ptext9 7D7C               ??_char2LCD 0012                  _msg2LCD 7A9E  
      __end_of_read_BUSY 7A4E                _T0CONbits 000FD5                _T2CONbits 000FCA  
       ___awmod@dividend 000F        __end_of_pic_ini13 7AFC      mux_display@contdisp 0032  
                main@dec 0021                  main@mil 0023                  main@seg 0020  
         __pintcode_body 7CEC     __size_of_timer_ini13 001A     end_of_initialization 7B28  
          __Lmediumconst 0000                  int_func 7CEC             _broadcast_id 201D  
              _RAMPA_tic 79D8               _tic_timer0 7A0C             write_LCD@aux 0010  
              _RCSTAbits 000FAB                  postdec1 000FE5                  postinc0 000FEE  
              _PORTBbits 000F81        __end_of_write_CMD 79AC        __end_of_write_LCD 7A76  
              _TRISCbits 000F94               main@backup 001F              _CCP1CONbits 000FBD  
              _TXSTAbits 000FAC               ?_RAMPA_tic 0001     __size_of_usart_ini13 0028  
      __size_of_LCD_init 0088               _write_DATA 79AC           __end_of_decode 7BE4  
            _BAUDCONbits 000FB8            __pidataCOMRAM 7992             ??_Send_4Disp 0014  
    start_initialization 7AFC                _Send_Disp 7B32              ?_tic_timer0 0001  
     __end_of_Send_4Disp 7C64                 ??_decode 000F         __CFG_LPT1OSC$OFF 000000  
           decode@buffer 0010                 ?_LCD_tic 0001        __size_of_char2LCD 000E  
            __pbssCOMRAM 0024      __end_of__stringdata 2026               ?_Send_Disp 000F  
            ??_RAMPA_tic 0001                __pintcode 2008              ?_write_DATA 0001  
               ?___awdiv 0015                 ?___awmod 000F                 ?_msg2LCD 0012  
              _assign_id 7996              __smallconst 201C      __size_of_tic_timer0 001C  
              _read_BUSY 7A28           __size_of_myISR 5D74                _pic_ini13 7ACC  
               _LATAbits 000F89                 _LATBbits 000F8A                 _LATCbits 000F8B  
               _LATDbits 000F8C                 _LATEbits 000F8D                 _LCD_init 7C64  
               _LCD_tout 0037                 _PIE1bits 000F9D         __CFG_WDTPS$32768 000000  
            __stringdata 201E             _rampa_status 0035               ?_assign_id 0001  
          ??_timer_ini13 000F         __size_of_LCD_tic 0010               ?_read_BUSY 0001  
         Send_4Disp@Cent 0011                _write_CMD 799E                _write_LCD 7A4E  
         Send_4Disp@Umil 0014               ?_pic_ini13 0001                copy_data0 7B1C  
    __size_of_write_DATA 000E              ??_Send_Disp 0010                 __Hrparam 0000  
               __Lrparam 0000           write_DATA@dato 0011         __size_of___awdiv 00A4  
       __size_of___awmod 0090                 _char2LCD 79BA         __size_of_msg2LCD 002E  
               _caracter 002D               ?_write_CMD 0001               ?_write_LCD 0001  
               __ptext10 7E0C                 __ptext11 7BE4                 __ptext20 79C8  
               __ptext12 7B32                 __ptext13 7C64                 __ptext14 799E  
               __ptext15 7A4E                 __ptext16 7A28                 __ptext18 7A0C  
               __ptext19 79D8                 _bot_tout 002C            ??_usart_ini13 000F  
               _led_tout 0024      __end_of_timer_ini13 7A0C            __size_of_main 0150  
           ??_tic_timer0 0001                 _slave_id 002F                 _mux_tout 002E  
               main@cent 0022            Send_4Disp@Dec 0012            Send_4Disp@Uni 0013  
  __CFG_CPUDIV$OSC1_PLL2 000000              ??_assign_id 000F               _INTCONbits 000FF2  
            ??_read_BUSY 000F       __end_of_tic_timer0 7A28              ??_pic_ini13 000F  
               intlevel2 0000            write_CMD@dato 0011             _tiempo_rampa 0026  
          write_LCD@dato 000F      __end_of_usart_ini13 7A9E             ??_write_DATA 0011  
            _timer_ini13 79F2              ??_write_CMD 0011              ??_write_LCD 000F  
     __CFG_FOSC$HSPLL_HS 000000       __end_of_write_DATA 79BA  
